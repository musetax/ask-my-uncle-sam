Repository Structure:
root/
  CODE_OF_CONDUCT.md
  .DS_Store
  CHANGELOG.md
  README.md
  NOTICE.txt
  .gitignore
  CONTRIBUTING.md
  LICENSE.txt
integration/
  summarize_code.py
  code_summary.txt
  repo_summary.txt
source/
  run-all-tests.sh
  .DS_Store
  .prettierignore
  .prettierrc.yml
  stage-assets.sh
  .eslintignore
  pre-build-lambda-layers.sh
source/model-info/
  ragchat-huggingface-google-flan-t5-xl.json
  chat-bedrock-llama2-13b-chat-v1.json
  ragchat-bedrock-anthropic-claude-instant.json
  ragchat-bedrock-cohere-command-light-text-v14.json
  chat-bedrock-ai21-j2-mid.json
  ragchat-bedrock-ai21-j2-ultra.json
  chat-bedrock-llama2-70b-chat-v1.json
  chat-bedrock-anthropic-claude-v3.5-sonnet.json
  chat-huggingface-default.json
  chat-bedrock-cohere-command-light-text-v14.json
  ragchat-huggingface-ie-tiiuae-falcon7b.json
  chat-sagemaker-default.json
  ragchat-bedrock-llama2-70b-chat-v1.json
  ragchat-huggingface-ie-google-flan-t5-xl.json
  chat-bedrock-cohere-command-text-v14.json
  ragchat-bedrock-llama2-13b-chat-v1.json
  chat-huggingface-ie-tiiuae-falcon40b.json
  ragchat-huggingface-ie-tiiuae-falcon40b-instruct.json
  chat-huggingface-google-flan-t5-xxl.json
  ragchat-bedrock-amazon-titan-text-lite-v1.json
  chat-bedrock-mistralai-mistral-large-2402-v1.0.json
  ragchat-huggingface-google-flan-t5-large.json
  ragchat-bedrock-anthropic-claude-v2.1.json
  ragchat-huggingface-ie-google-flan-t5-xxl.json
  chat-bedrock-mistralai-mistral-7b-instruct-v0.2.json
  ragchat-huggingface-google-flan-t5-base.json
  ragchat-huggingface-google-flan-t5-small.json
  ragchat-bedrock-mistralai-mistral-7b-instruct-v0.2.json
  ragchat-anthropic-claude-v2.json
  ragchat-bedrock-anthropic-claude-v3.1-sonnet.json
  ragchat-bedrock-ai21-j2-mid.json
  chat-huggingface-google-flan-t5-small.json
  ragchat-huggingface-default.json
  chat-huggingface-google-flan-t5-base.json
  ragchat-bedrock-anthropic-claude-v3.1-haiku.json
  ragchat-huggingface-google-flan-t5-xxl.json
  chat-anthropic-claude-instant.json
  chat-bedrock-anthropic-claude-v3.1-haiku.json
  chat-huggingface-google-flan-t5-xl.json
  chat-bedrock-anthropic-claude-v2.json
  chat-huggingface-google-flan-t5-large.json
  ragchat-anthropic-claude-instant.json
  chat-huggingface-ie-google-flan-t5-base.json
  ragchat-bedrock-mistralai-mistral-large-2402-v1.0.json
  ragchat-bedrock-cohere-command-text-v14.json
  ragchat-bedrock-anthropic-claude-v2.json
  chat-bedrock-anthropic-claude-v2.1.json
  chat-huggingface-ie-google-flan-t5-small.json
  chat-bedrock-mistralai-mixtral-8x7b-instruct-v0.1.json
  chat-huggingface-ie-tiiuae-falcon7b-instruct.json
  ragchat-huggingface-ie-tiiuae-falcon40b.json
  ragchat-huggingface-ie-google-flan-t5-large.json
  ragchat-sagemaker-default.json
  chat-bedrock-amazon-titan-text-lite-v1.json
  chat-bedrock-ai21-j2-ultra.json
  chat-huggingface-ie-google-flan-t5-xl.json
  ragchat-bedrock-mistralai-mixtral-8x7b-instruct-v0.1.json
  chat-bedrock-amazon-titan-text-express-v1.json
  chat-anthropic-claude-v2.json
  chat-huggingface-ie-google-flan-t5-large.json
  ragchat-huggingface-ie-tiiuae-falcon7b-instruct.json
  chat-huggingface-ie-tiiuae-falcon40b-instruct.json
  ragchat-huggingface-ie-google-flan-t5-small.json
  ragchat-huggingface-ie-google-flan-t5-base.json
  chat-huggingface-ie-tiiuae-falcon7b.json
  chat-huggingface-ie-google-flan-t5-xxl.json
  ragchat-bedrock-amazon-titan-text-express-v1.json
  chat-bedrock-anthropic-claude-instant.json
source/ui-chat/
  tailwind.config.js
  README.md
  .gitignore
  package-lock.json
  package.json
  tsconfig.json
source/ui-chat/public/
  index.html
  favicon.png
  manifest.json
  robots.txt
source/ui-chat/src/
  App.css
  index.js
  index.css
  setupTests.js
  App.js
source/ui-chat/src/home/
  home.context.tsx
  home.state.tsx
source/ui-chat/src/types/
  prompt.ts
  chat.ts
  misc.ts
source/ui-chat/src/utils/
  constants.ts
  conversation.ts
source/ui-chat/src/styles/
  globals.css
source/ui-chat/src/components/
  MemoizedReactMarkdown.tsx
  external-link-warning-modal.jsx
  PromptTemplate.tsx
  SourceDocumentsModal.tsx
  Chat.css
  ChatInput.css
  Chat.tsx
  MemoizedChatMessage.tsx
  ChatMessage.tsx
  ChatInput.tsx
  CodeBlock.tsx
source/ui-chat/src/components/__tests__/
  PromptTemplate.tsx
  Chat.tsx
  ChatMessage.tsx
  CodeBlock.tsx
source/ui-chat/src/components/__tests__/snapshot_tests/
  PromptTemplate.tsx
  Chat.tsx
  ChatMessage.tsx
  ChatInput.tsx
  CodeBlock.tsx
source/ui-chat/src/components/__tests__/snapshot_tests/__snapshots__/
  ChatMessage.tsx.snap
  CodeBlock.tsx.snap
  PromptTemplate.tsx.snap
  Chat.tsx.snap
  ChatInput.tsx.snap
source/ui-chat/src/hooks/
  useCreateReducer.ts
source/ui-deployment/
  README.md
  .gitignore
  package-lock.json
  package.json
  tsconfig.json
source/ui-deployment/public/
  index.html
  favicon.png
  manifest.json
  robots.txt
source/ui-deployment/src/
  App.css
  index.js
  index.css
  setupTests.js
  App.js
source/ui-deployment/src/contexts/
  home.context.tsx
  home.state.tsx
  index.ts
source/ui-deployment/src/utils/
  test-utils.tsx
  constants.ts
  index.ts
  utils.tsx
  mock-context.json
source/ui-deployment/src/components/
source/ui-deployment/src/components/commons/
  external-link-group.tsx
  use-column-widths.js
  external-link-warning-modal.jsx
  deploy-confirmation-modal.jsx
  table-config.jsx
  use-local-storage.ts
  localStorage.ts
  delete-notifications.tsx
  common-components.jsx
  delete-modal.jsx
  notifications.tsx
  external-link.tsx
  breadcrumbs.js
  full-page-header.tsx
  columnDefinitionsHelper.js
  index.ts
  navigation.tsx
  use-component-id.ts
  info-link.tsx
  separated-list.tsx
source/ui-deployment/src/components/commons/copy-text/
  index.tsx
  styles.css
source/ui-deployment/src/components/wizard/
  tools-content.jsx
  wizard-components.jsx
  steps-config.jsx
  utils.js
  WizardView.jsx
source/ui-deployment/src/components/wizard/VpcConfig/
  SecurityGroupAttrEditor.tsx
  DeployVpc.tsx
  SubnetIdAttrEditor.tsx
  VpcId.tsx
  index.ts
  Vpc.tsx
  UseExistingVpc.tsx
  helpers.tsx
source/ui-deployment/src/components/wizard/VpcConfig/__tests__/
  SecurityGroupAttrEditor.test.tsx
  Vpc.test.tsx
  UseExistingVpc.test.tsx
  VpcId.test.tsx
  SubnetIdAttrEditor.test.tsx
  DeployVpc.test.tsx
source/ui-deployment/src/components/wizard/KnowledgeBase/
  KnowledgeBaseSelection.tsx
  KnowledgeBaseType.tsx
  KnowledgeBase.tsx
  AdvancedKnowledgeBaseConfig.tsx
  index.ts
source/ui-deployment/src/components/wizard/KnowledgeBase/providers/
  index.ts
source/ui-deployment/src/components/wizard/KnowledgeBase/providers/Kendra/
  Kendra.tsx
  KendraQueryCapacity.tsx
  ExistingKendraIndexOption.tsx
  index.ts
  KendraIndexName.tsx
  KendraResourceRetentionWarning.tsx
  KendraIndexId.tsx
  KendraEdition.tsx
  KendraStorageCapacity.tsx
  AdditionalKendraOptions.tsx
source/ui-deployment/src/components/wizard/KnowledgeBase/providers/Kendra/__tests__/
  KendraEdition.test.tsx
  Kendra.test.tsx
  KendraStorageCapacity.test.tsx
  AdditionalKendraOptions.test.tsx
  KendraQueryCapacity.test.tsx
  ExistingKendraIndex.test.tsx
  KendraResourceRetention.test.tsx
  KendraIndexId.test.tsx
  KendraIndexName.test.tsx
source/ui-deployment/src/components/wizard/KnowledgeBase/common/
  ReturnSourceDocuments.tsx
  RetrieveDocumentCount.tsx
source/ui-deployment/src/components/wizard/KnowledgeBase/common/__tests__/
  ReturnSourceDocuments.test.tsx
  RetrieveDocumentCount.test.tsx
source/ui-deployment/src/components/wizard/KnowledgeBase/__tests__/
  KnowledgeBaseSelection.test.tsx
  KnowledgeBase.test.tsx
  AdvancedKnowledgeBaseConfig.test.tsx
  KnowledgeBaseType.test.tsx
source/ui-deployment/src/components/wizard/Review/
  UseCaseReview.tsx
  VpcConfigReview.tsx
  KnowledgeBaseReview.tsx
  Review.tsx
  InvalidPromptWarning.tsx
  ModelReview.tsx
  ReviewPrompt.tsx
  index.ts
source/ui-deployment/src/components/wizard/Review/__tests__/
  UseCaseReview.test.tsx
  VpcConfig.Review.test.tsx
  ReviewPrompt.test.tsx
  Review.test.tsx
  KnowledgeBaseReview.test.tsx
  InvalidPromptWarning.test.tsx
  ModelReview.test.tsx
source/ui-deployment/src/components/wizard/Model/
  helpers.ts
  Model.tsx
  ModelAdditionalSettings.tsx
  index.ts
  ModelSelection.tsx
source/ui-deployment/src/components/wizard/Model/providers/
  Sagemaker.tsx
  Bedrock.tsx
  HuggingFace.tsx
  HuggingFaceInferenceEndpoint.tsx
  index.ts
  Anthropic.tsx
source/ui-deployment/src/components/wizard/Model/providers/__tests__/
  HuggingFaceInferenceEndpoint.test.tsx
  Anthropic.test.tsx
  Bedrock.test.tsx
  Sagemaker.test.tsx
  HuggingFace.test.tsx
source/ui-deployment/src/components/wizard/Model/SagemakerPayloadSchema/
  helpers.ts
  InputSchema.tsx
  SagemakerPayloadSchema.tsx
  RenderedMarkdown.tsx
  RenderedInputPayload.tsx
  index.ts
  OutputSchema.tsx
source/ui-deployment/src/components/wizard/Model/SagemakerPayloadSchema/__tests__/
  OutputSchema.test.tsx
  InputSchema.test.tsx
  helpers.test.ts
  RenderedInputPayload.test.tsx
  SagemakerPayloadSchema.test.tsx
source/ui-deployment/src/components/wizard/Model/common/
  helpers.ts
  InferenceEndpointUrlInput.tsx
  ThirdPartyLegalDisclaimer.tsx
  ModelProvider.tsx
  ModelNameDropdown.tsx
  PromptTemplate.tsx
  StreamingToggle.tsx
  InferenceEndpointName.tsx
  VerboseToggle.tsx
  ApiKeyInput.tsx
  ModelTemperature.tsx
source/ui-deployment/src/components/wizard/Model/common/__tests__/
  InferenceEndpointUrlInput.test.tsx
  ThirdPartyLegalDisclaimer.test.tsx
  ModelNameDropdown.test.tsx
  ModelTemperature.test.tsx
  PromptTemplate.test.tsx
  InferenceEndpointName.test.tsx
  VerboseToggle.test.tsx
  ModelProviderDropdown.test.tsx
  StreamingToggle.test.tsx
  ApiKeyInput.test.tsx
source/ui-deployment/src/components/wizard/Model/__tests__/
  ModelAdditionalSettings.test.tsx
  ModelSelection.test.tsx
  helpers.test.ts
  Model.test.tsx
source/ui-deployment/src/components/wizard/Model/AdvancedModelSettings/
  SelectionControl.tsx
  InputControl.tsx
  index.ts
  AdvancedModelSettings.tsx
source/ui-deployment/src/components/wizard/Model/AdvancedModelSettings/__tests__/
  AdvancedModelSettings.test.tsx
source/ui-deployment/src/components/wizard/UseCase/
  UseCaseName.tsx
  UseCase.tsx
  UseCaseDescription.tsx
  index.ts
  UseCaseTypeSelection.tsx
  UserEmail.tsx
source/ui-deployment/src/components/wizard/UseCase/__tests__/
  UseCaseDescription.test.tsx
  UseCaseTypeSelection.test.tsx
  UseCaseName.test.tsx
  UseCase.test.tsx
  UserEmail.test.tsx
source/ui-deployment/src/components/wizard/interfaces/
  Steps.tsx
  RuntimeConfig.tsx
  index.ts
  BaseFormComponent.tsx
source/ui-deployment/src/components/dashboard/
  DashboardView.jsx
  hooks.js
  common-components.jsx
  deployments.js
source/ui-deployment/src/components/__tests__/
source/ui-deployment/src/components/__tests__/__mocks__/
  deployment-steps-form-data.js
  mock-context.json
source/ui-deployment/src/components/__tests__/snapshot_tests/
source/ui-deployment/src/components/__tests__/snapshot_tests/wizard/
  WizardView.tsx
  utils.test.js
source/ui-deployment/src/components/__tests__/snapshot_tests/wizard/stepComponents/
  KnowledgeBase.jsx
  Review.jsx
source/ui-deployment/src/components/__tests__/snapshot_tests/wizard/stepComponents/__snapshots__/
  Review.jsx.snap
  KnowledgeBase.jsx.snap
source/ui-deployment/src/components/__tests__/snapshot_tests/wizard/__snapshots__/
  WizardView.tsx.snap
source/ui-deployment/src/components/__tests__/snapshot_tests/dashboard/
  Dashboard.tsx
source/ui-deployment/src/components/__tests__/snapshot_tests/dashboard/__snapshots__/
  Dashboard.tsx.snap
source/ui-deployment/src/components/__tests__/snapshot_tests/useCaseDetails/
  UseCaseView.tsx
source/ui-deployment/src/components/__tests__/snapshot_tests/useCaseDetails/__snapshots__/
  UseCaseView.tsx.snap
source/ui-deployment/src/components/__tests__/wizard/
  WizardView.tsx
source/ui-deployment/src/components/__tests__/dashboard/
  DashboardView.tsx
source/ui-deployment/src/components/__tests__/useCaseDetails/
  UseCaseView.tsx
source/ui-deployment/src/components/useCaseDetails/
  tools-content.jsx
  common-components.jsx
  UseCaseView.jsx
source/ui-deployment/src/hooks/
  useCreateReducer.ts
  useQueries.ts
  useTools.tsx
source/ui-deployment/src/hooks/__tests__/
  useQueries.test.tsx
source/ui-deployment/src/i18n-strings/
  text-filter.ts
  pagination.ts
  table.ts
  app-layout.ts
  flashbar.ts
  collection-preferences.ts
  index.ts
  header.ts
source/ui-deployment/src/services/
  index.ts
  fetchModelData.ts
source/ui-deployment/src/services/__tests__/
  fetchModelData.test.ts
source/lambda/
source/lambda/model-info/
  jest.config.js
  power-tools-init.ts
  package-lock.json
  package.json
  tsconfig.json
  index.ts
source/lambda/model-info/test/
  index.test.ts
  event-test-data.ts
source/lambda/model-info/test/utils/
  model-info-retriever.test.ts
source/lambda/model-info/utils/
  http-response-formatters.ts
  model-info-retriever.ts
  check-env.ts
  constants.ts
source/lambda/websocket-connectors/
  connect-handler.ts
  jest.config.js
  package-lock.json
  package.json
  tsconfig.json
  disconnect-handler.ts
source/lambda/websocket-connectors/test/
  disconnect-handler.test.ts
  connect-handler.test.ts
source/lambda/layers/
source/lambda/layers/huggingface_hub/
  pyproject.toml
  .gitignore
  poetry.lock
source/lambda/layers/langchain/
  pyproject.toml
  .gitignore
  poetry.lock
source/lambda/layers/aws-sdk-lib/
  package-lock.json
  package.json
source/lambda/layers/aws_boto3/
  pyproject.toml
  .gitignore
  poetry.lock
source/lambda/layers/anthropic/
  pyproject.toml
  .gitignore
  poetry.lock
source/lambda/layers/aws-node-user-agent-config/
  .gitignore
  package-lock.json
  package.json
  tsconfig.json
  index.ts
source/lambda/layers/aws-node-user-agent-config/test/
  index.test.ts
source/lambda/layers/custom_boto3_init/
  pyproject.toml
  __init__.py
  .coveragerc
  .gitignore
  helper.py
  poetry.lock
  custom_config.py
source/lambda/layers/custom_boto3_init/test/
  conftest.py
  test_layer_env_config.py
  __init__.py
  test_service_instance_creation.py
source/lambda/layers/bedrock-sdk-layer/
  requirements.txt
source/lambda/chat/
  sagemaker_handler.py
  huggingface_handler.py
  pyproject.toml
  __init__.py
  .coveragerc
  anthropic_handler.py
  .gitignore
  bedrock_handler.py
  poetry.lock
source/lambda/chat/clients/
  bedrock_client.py
  sagemaker_client.py
  __init__.py
  llm_chat_client.py
  anthropic_client.py
  huggingface_client.py
source/lambda/chat/clients/builders/
  bedrock_builder.py
  llm_builder.py
  anthropic_builder.py
  __init__.py
  sagemaker_builder.py
  huggingface_builder.py
source/lambda/chat/clients/factories/
  knowledge_base_factory.py
  __init__.py
  conversation_memory_factory.py
source/lambda/chat/test/
  conftest.py
  __init__.py
source/lambda/chat/test/clients/
  test_anthropic_client.py
  test_huggingface_client.py
  test_llm_chat_client.py
  __init__.py
  test_sagemaker_client.py
  test_bedrock_client.py
source/lambda/chat/test/clients/builders/
  test_sagemaker_builder.py
  test_llm_builder.py
  __init__.py
  test_huggingface_builder.py
  test_anthropic_builder.py
  test_bedrock_builder.py
source/lambda/chat/test/clients/factories/
  test_conversation_memory_factory.py
  __init__.py
  test_knowledge_base_factory.py
source/lambda/chat/test/utils/
  __init__.py
  test_helpers.py
source/lambda/chat/test/shared/
source/lambda/chat/test/shared/memory/
  __init__.py
  test_ddb_chat_memory.py
  test_ddb_enhanced_chat_message_history.py
source/lambda/chat/test/shared/defaults/
  __init__.py
  test_model_defaults.py
source/lambda/chat/test/shared/knowledge/
  mock_kendra_response.json
  test_kendra_knowledge_base.py
  __init__.py
  test_kendra_retriever.py
source/lambda/chat/test/llms/
  test_anthropic.py
  test_sagemaker.py
  __init__.py
  test_bedrock.py
  test_huggingface.py
  test_base_langchain.py
source/lambda/chat/test/llms/models/
  __init__.py
source/lambda/chat/test/llms/models/bedrock_params/
  test_anthropic.py
  test_cohere.py
  __init__.py
  test_amazon.py
  test_meta.py
  test_ai21.py
source/lambda/chat/test/llms/models/sagemaker/
  test_content_handler.py
  __init__.py
source/lambda/chat/test/llms/rag/
  test_bedrock_retrieval.py
  test_huggingface_retrieval.py
  __init__.py
  test_anthropic_retrieval.py
  test_sagemaker_retrieval.py
source/lambda/chat/test/llms/factories/
  __init__.py
  test_bedrock_params_factory.py
source/lambda/chat/test/handlers/
  test_huggingface_handler.py
  test_anthropic_handler.py
  test_bedrock_handler.py
  __init__.py
  test_sagemaker_handler.py
source/lambda/chat/utils/
  constants.py
  __init__.py
  custom_exceptions.py
  enum_types.py
  helpers.py
  handler_response_formatter.py
source/lambda/chat/shared/
  __init__.py
source/lambda/chat/shared/memory/
  ddb_enhanced_message_history.py
  ddb_chat_memory.py
  __init__.py
source/lambda/chat/shared/callbacks/
  websocket_handler.py
  __init__.py
  websocket_error_handler.py
  websocket_streaming_handler.py
source/lambda/chat/shared/defaults/
  model_defaults.py
  __init__.py
source/lambda/chat/shared/knowledge/
  knowledge_base.py
  __init__.py
  kendra_retriever.py
  kendra_knowledge_base.py
source/lambda/chat/llms/
  base_langchain.py
  __init__.py
  sagemaker.py
  huggingface.py
  anthropic.py
  bedrock.py
source/lambda/chat/llms/models/
  __init__.py
  llm.py
  custom_chat_anthropic.py
  llm_params.py
source/lambda/chat/llms/models/bedrock_params/
  mistral.py
  __init__.py
  llm.py
  anthropic.py
  ai21.py
  cohere.py
  amazon.py
  meta.py
source/lambda/chat/llms/models/sagemaker/
  __init__.py
  content_handler.py
source/lambda/chat/llms/rag/
  __init__.py
  bedrock_retrieval.py
  sagemaker_retrieval.py
  huggingface_retrieval.py
  anthropic_retrieval.py
source/lambda/chat/llms/factories/
  bedrock_adapter_factory.py
  __init__.py
source/lambda/custom-authorizer/
  jest.config.js
  rest-authorizer.ts
  .gitignore
  package-lock.json
  package.json
  tsconfig.json
  websocket-authorizer.ts
source/lambda/custom-authorizer/test/
  jest-environment-variables.ts
  get-policy.test.ts
  authorizer.test.ts
  event-test-data.ts
source/lambda/custom-authorizer/utils/
  get-policy.ts
source/lambda/custom-resource/
  cfn_response.py
  lambda_ops_metrics.py
  pyproject.toml
  __init__.py
  .coveragerc
  lambda_func.py
  .gitignore
  poetry.lock
source/lambda/custom-resource/test/
  conftest.py
  __init__.py
  test_lambda_func.py
  test_lambda_ops_metrics.py
source/lambda/custom-resource/test/utils/
  test_metrics.py
  __init__.py
  test_lambda_context_parser.py
  test_metrics_payload.py
source/lambda/custom-resource/test/operations/
  test_shared.py
  test_copy_web_ui.py
  test_use_case_policy.py
  __init__.py
  test_admin_policy.py
  test_copy_model_info_to_ddb.py
  test_anonymous_metric.py
  test_update_s3_policy.py
  test_gen_uuid.py
  test_copy_api_key.py
  test_webconfig.py
  test_cw_loggroup_policy.py
source/lambda/custom-resource/test/fixtures/
  cw_loggroup_policy_events.py
  copy_web_ui_events.py
  copy_model_info_events.py
  gen_uuid_events.py
  copy_api_key_events.py
  __init__.py
  use_case_policy_events.py
  anonymous_metrics_events.py
  update_s3_policy_events.py
  admin_policy_events.py
  webconfig_events.py
source/lambda/custom-resource/utils/
  metrics.py
  lambda_context_parser.py
  constants.py
  __init__.py
  metrics_payload.py
  data.py
source/lambda/custom-resource/operations/
  webconfig.py
  operation_types.py
  cw_loggroup_policy.py
  update_s3_policy.py
  copy_web_ui.py
  __init__.py
  copy_api_key.py
  shared.py
  admin_policy.py
  copy_model_info_to_ddb.py
  anonymous_metrics.py
  gen_uuid.py
  use_case_policy.py
source/lambda/reconcile-data/
  pyproject.toml
  .coveragerc
  lambda_func.py
  poetry.lock
source/lambda/reconcile-data/test/
  conftest.py
  test_lambda_func.py
source/lambda/reconcile-data/test/operations/
  test_dynamodb_remove_case.py
source/lambda/reconcile-data/test/fixtures/
  remove_case_event.py
source/lambda/reconcile-data/exceptions/
  operation_not_found.py
source/lambda/reconcile-data/operations/
  operation_types.py
  constants.py
  dynamodb_remove_case.py
source/lambda/use-case-management/
  jest.config.js
  power-tools-init.ts
  package-lock.json
  package.json
  tsconfig.json
  index.ts
  command.ts
source/lambda/use-case-management/ssm/
  use-case-config-view-builder.ts
  use-case-config-operation-builder.ts
  config-management.ts
  web-config-builder.ts
source/lambda/use-case-management/secretsmanager/
  secret-management.ts
  api-key-secret-operation-builder.ts
source/lambda/use-case-management/test/
  index.test.ts
  command.test.ts
  event-test-data.ts
source/lambda/use-case-management/test/ssm/
  config-management.test.ts
  web-config-builder.test.ts
  use-case-config-builder.test.ts
source/lambda/use-case-management/test/secretsmanager/
  api-key-secret-operation-builder.test.ts
  secret-management.test.ts
source/lambda/use-case-management/test/ddb/
  storage-management.test.ts
  builder.test.ts
source/lambda/use-case-management/test/utils/
  http-response-formatter.test.ts
source/lambda/use-case-management/test/cfn/
  stack-operation-builder.test.ts
  stack-management.test.ts
  stack-view-builder.test.ts
source/lambda/use-case-management/test/model/
  use-case-validator.test.ts
  list-use-cases.test.ts
  use-case.test.ts
source/lambda/use-case-management/ddb/
  storage-view-builder.ts
  storage-management.ts
  storage-operation-builder.ts
source/lambda/use-case-management/utils/
  http-response-formatters.ts
  check-env.ts
  constants.ts
source/lambda/use-case-management/cfn/
  stack-operation-builder.ts
  stack-view-builder.ts
  stack-management.ts
source/lambda/use-case-management/model/
  use-case-validator.ts
  list-use-cases.ts
  use-case.ts
source/lambda/use-case-management/exception/
  missing-value-error.ts
source/infrastructure/
  jest.config.js
  cdk.json
  .gitignore
  package-lock.json
  package.json
  tsconfig.json
source/infrastructure/test/
  bedrock-chat-stack.test.ts
  sagemaker-chat-stack.test.ts
  deployment-platform-stack.test.ts
  anthropic-chat-stack.test.ts
  hugging-face-chat-stack.test.ts
source/infrastructure/test/ui/
  ui-infrstructure.test.ts
source/infrastructure/test/layers/
  runtime-lib.test.ts
  python-user-agent.test.ts
  shared-lib.test.ts
  node-user-agent.test.ts
source/infrastructure/test/framework/
  application-setup.test.ts
  base-stack.test.ts
  use-case-stack.test.ts
  external-use-case-stack.test.ts
source/infrastructure/test/auth/
  deployment-platform-cognito-setup.test.ts
  use-case-cognito-setup.test.ts
source/infrastructure/test/mock-lambda-func/
  .gitignore
source/infrastructure/test/mock-lambda-func/python-lambda/
  pyproject.toml
  __init__.py
  poetry.lock
  function.py
source/infrastructure/test/mock-lambda-func/typescript-lambda/
  .gitignore
  package-lock.json
  package.json
  tsconfig.json
  index.ts
source/infrastructure/test/mock-lambda-func/typescript-lambda/test/
  index.test.ts
source/infrastructure/test/mock-lambda-func/node-lambda/
  package-lock.json
  package.json
source/infrastructure/test/utils/
  lambda-runtimes.test.ts
  cfn-nag-suppressions.test.ts
  asset-bundling.test.ts
  solution-helper.test.ts
  lambda-aspect.test.ts
  custom-infra-setup.test.ts
  common-utils.test.ts
  app-registry.test.ts
source/infrastructure/test/storage/
  deployment-platform-storage-setup.test.ts
  deployment-platform-storage-stack.test.ts
  chat-storage-stack.test.ts
  chat-storage-setup.test.ts
  use-case-model-info-storage.test.ts
  deployment-platform-model-info-storage.test.ts
source/infrastructure/test/search/
  knowledge-base-setup.test.ts
  kendra-knowledge-base.test.ts
source/infrastructure/test/mock-ui/
  .gitignore
  package-lock.json
  package.json
  tsconfig.json
source/infrastructure/test/mock-ui/public/
  index.html
source/infrastructure/test/mock-ui/src/
  index.js
source/infrastructure/test/api/
  rest-request-processor.test.ts
  deployment-platform-rest-endpoint.test.ts
  websocket-request-processor.test.ts
  websocket-endpoint.test.ts
source/infrastructure/test/vpc/
  external-vpc-params.test.ts
  external-use-case-vpc.test.ts
  vpc-setup.test.ts
  custom-vpc.test.ts
  deployment-platform-vpc.test.ts
  use-case-custom-vpc.test.ts
  bedrock-vpc.test.ts
  first-party-use-case-vpc.test.ts
  sagemaker-vpc.test.ts
source/infrastructure/test/use-case-management/
  management-stack.test.ts
source/infrastructure/test/s3web/
  ui-asset.test.ts
  chat-use-case-ui-asset.test.ts
  static-site.test.ts
source/infrastructure/bin/
  gen-ai-app-builder.ts
source/infrastructure/lib/
  bedrock-chat-stack.ts
  sagemaker-chat-stack.ts
  anthropic-chat-stack.ts
  hugging-face-chat-stack.ts
  deployment-platform-stack.ts
source/infrastructure/lib/metrics/
  custom-dashboard.ts
  use-case-dashboard.ts
  deployment-platform-dashboard.ts
source/infrastructure/lib/ui/
  ui-infrastructure.ts
source/infrastructure/lib/layers/
  bedrock-sdk-layer.ts
  shared-lib.ts
  python-user-agent.ts
  node-user-agent.ts
  ts-user-agent.ts
  runtime-libs.ts
source/infrastructure/lib/framework/
  base-stack.ts
  use-case-stack.ts
  ui-asset.ts
  application-setup.ts
  external-use-case-stack.ts
source/infrastructure/lib/auth/
  deployment-platform-cognito-setup.ts
  cognito-setup.ts
  use-case-cognito-setup.ts
source/infrastructure/lib/utils/
  cfn-nag-suppressions.ts
  nested-stack-parameters.ts
  app-registry-aspects.ts
  custom-infra-setup.ts
  lambda-runtimes.ts
  lambda-aspect.ts
  constants.ts
  asset-bundling.ts
  common-utils.ts
  solution-helper.ts
source/infrastructure/lib/storage/
  chat-storage-stack.ts
  rds-2-s3
  chat-storage-setup.ts
  deployment-platform-storage-setup.ts
  deployment-platform-model-info-storage.ts
  deployment-platform-storage-stack.ts
  model-info-storage.ts
  use-case-model-info-storage.ts
source/infrastructure/lib/search/
  kendra-knowledge-base.ts
  knowledge-base-setup.ts
source/infrastructure/lib/api/
  rest-request-processor.ts
  deployment-platform-rest-endpoint.ts
  websocket-request-processor.ts
  websocket-endpoint.ts
source/infrastructure/lib/api/model-schema/
  update-usecase-response.ts
  deploy-usecase-body.ts
  deploy-usecase-response.ts
  update-usecase-body.ts
source/infrastructure/lib/vpc/
  vpc-setup.ts
  first-party-use-case-vpc.ts
  exisiting-vpc-params.ts
  deployment-platform-vpc.ts
  use-case-custom-vpc.ts
  custom-vpc.ts
  bedrock-vpc.ts
  external-use-case-vpc.ts
  sagemaker-vpc.ts
source/infrastructure/lib/use-case-management/
  setup.ts
  management-stack.ts
source/infrastructure/lib/s3web/
  deployment-platform-ui-asset.ts
  static-site.ts
  chat-use-case-ui-asset.ts
source/amazon-bedrock-samples-main/
  CODE_OF_CONDUCT.md
  LICENSE
  README.md
  .gitignore
  CONTRIBUTING.md
source/amazon-bedrock-samples-main/bedrock-fine-tuning/
  README.md
source/amazon-bedrock-samples-main/bedrock-fine-tuning/amazon-titan-image-generator/
  README.md
  1-TIGFT-customization-job.ipynb
  2-TIGFT-provisioned-throughput-inference.ipynb
source/amazon-bedrock-samples-main/bedrock-fine-tuning/amazon-titan-image-generator/prompts/
  captions.json
source/amazon-bedrock-samples-main/bedrock-fine-tuning/amazon-titan-image-generator/data/
  smila_07.jpg
  smila_13.jpg
  smila_12.jpg
  smila_06.jpg
  smila_10.jpg
  smila_04.jpg
  smila_05.jpg
  smila_11.jpg
  smila_15.jpg
  smila_01.jpg
  smila_29.jpg
  smila_28.jpg
  smila_14.jpg
  smila_02.jpg
  smila_16.jpg
  smila_17.jpg
  smila_03.jpg
  ron_14.jpg
  ron_28.jpg
  ron_29.jpg
  ron_15.jpg
  ron_01.jpg
  ron_17.jpg
  ron_03.jpg
  ron_02.jpg
  ron_16.jpg
  ron_12.jpg
  ron_06.jpg
  smila_ft_2.png
  ron_07.jpg
  ron_13.jpg
  ron_05.jpg
  ron_11.jpg
  smila_ft_1.png
  ron_10.jpg
  ron_04.jpg
  ron_21.jpg
  ron_09.jpg
  ron_08.jpg
  ron_20.jpg
  ron_22.jpg
  ron_23.jpg
  ron_27.jpg
  ron_ft_2.png
  ron_26.jpg
  ron_18.jpg
  ron_24.jpg
  ron_30.jpg
  ron_ft_1.png
  ron_25.jpg
  ron_19.jpg
  smila_26.jpg
  smila_27.jpg
  smila_19.jpg
  smila_25.jpg
  smila_24.jpg
  smila_30.jpg
  smila_18.jpg
  smila_20.jpg
  smila_08.jpg
  smila_09.jpg
  smila_21.jpg
  smila_23.jpg
  smila_22.jpg
source/amazon-bedrock-samples-main/bedrock-fine-tuning/meta-llama/
  README.md
  02_fine-tune_and_evaluate_llama2_bedrock_summarization.ipynb
  00_setup.ipynb
  03_cleanup.ipynb
source/amazon-bedrock-samples-main/function-calling/
  legacy-function-calling-with-Claude.ipynb
  create_athena_catalog.py
  advanced_fn_calling_w_claude3.ipynb
  Migrating_from_OAI_Bedrock_converse.ipynb
  tool_use_with_pydantic_Bedrock_converse.ipynb
  README.md
  fc_pydantic_class_converse_bedrock.py
  function_calling_text2SQL_converse_bedrock_streamlit.py
  Extracting_structured_json_Bedrock_converse.ipynb
  fc_migrations_converse_bedrock_streamlit.py
  Anthropic_cookbook_extracting_structured_json_Bedrock_converse.ipynb
  function_calling_converse_bedrock_streamlit.py
  Function_calling_tool_use_with_Converse_API.ipynb
source/amazon-bedrock-samples-main/function-calling/images/
  bedrock.png
  weather.jpg
  AWS_logo_RGB.png
source/amazon-bedrock-samples-main/agents-for-bedrock/
  README.md
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/product-review-agent/
  main.ipynb
  requirements.txt
  README.md
  agent.py
  app.py
  main.py
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/product-review-agent/architecture/
  architecture.jpeg
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation/
  CODE_OF_CONDUCT.md
  LICENSE
  README.md
  CONTRIBUTING.md
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation/design/
  total-claim-amount-asset.png
  streamlit-app.png
  send-reminder-email.png
  kb-console-testing.png
  agent-kb-configuration.png
  agent-prepared-banner.png
  ag-configuration.png
  send-reminder.png
  kb-ds-s3-configuration.png
  agent-console-testing.png
  kb-embeddings.png
  agent-overview.png
  kb-select-model.png
  existing-claims-table.png
  demo-thumbnail.png
  agent-configuration.png
  ag-tracing.png
  create-new-claim.png
  agent-creation-banner.png
  agent-console-example.png
  kb-ds-overview.png
  existing-claims-table-2.png
  kb-console-2.png
  repair-estimate.png
  agent-prepare.png
  kb-configuration.png
  kb-console-1.png
  kb-tracing.png
  agent-console-example-2.png
  agent-console-1.png
  kb-overview.png
  total-claim-amount-prompt.png
  ag-openapi.png
  agent-console-2.png
  agent-console-3.png
  kb-creation-banner.png
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation/documentation/
  deployment-guide.md
  testing-and-validation.md
  clean-up.md
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation/shell/
  delete-customer-resources.sh
  create-customer-resources.sh
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation/agent/
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation/agent/streamlit/
  bedrock_streamlit.py
  requirements.txt
  sigv4.py
  setup-streamlit-env.sh
  bedrock_logo.png
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation/agent/knowledge-base-assets/
  Claim_2s34w-8x_Amounts.pdf.metadata.json
  AccidentReport_file_requirements.docx.metadata.json
  AccidentImages_file_requirements.docx.metadata.json
  Claim_2s34w-8x_RepairEstimate.pdf
  Claim_3b45c-9d_Amounts.pdf.metadata.json
  Claim_5t16u-7v_Amounts.pdf
  Claim_3b45c-9d_RepairEstimate.pdf
  Claim_2s34w-8x_RepairEstimate.pdf.metadata.json
  AccidentImages_file_requirements.docx
  Internal-Insurance-FAQs.xlsx
  External-Insurance-FAQs.xlsx.metadata.json
  Claim_5t16u-7v_RepairEstimate.pdf.metadata.json
  Claim_5t16u-7v_Amounts.pdf.metadata.json
  Driverlicense_file_requirements.docx.metadata.json
  Driverlicense_file_requirements.docx
  External-Insurance-FAQs.xlsx
  Claim_3b45c-9d_RepairEstimate.pdf.metadata.json
  Internal-Insurance-FAQs.xlsx.metadata.json
  Claim_5t16u-7v_RepairEstimate.pdf
  VehicleRegistration_file_requirements.docx
  VehicleRegistration_file_requirements.docx.metadata.json
  Claim_2s34w-8x_Amounts.pdf
  Claim_3b45c-9d_Amounts.pdf
  AccidentReport_file_requirements.docx
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation/agent/lambda/
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation/agent/lambda/data-loader/
  index.py
  loader_deployment_package.zip
  claims.json
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation/agent/lambda/action-groups/
  send_reminder.py
  gather_evidence.py
  create_claim.zip
  send_reminder.zip
  gather_evidence.zip
  create_claim.py
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation/agent/lambda/lambda-layer/
  cfnresponse-layer.zip
  bedrock-agents-layer.zip
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation/agent/api-schema/
  send_reminder.json
  gather_evidence.json
  create_claim.json
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation/cfn/
  bedrock-customer-resources.yml
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/ai-powered-assistant-for-investment-research/
  cloudformation.yaml
  CODE_OF_CONDUCT.md
  LICENSE
  README.md
  CONTRIBUTING.md
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/ai-powered-assistant-for-investment-research/images/
  upload_files.png
  open_jupyter_instance.png
  converted_pdffiles_s3.png
  specify_stack_details.png
  audio_output.png
  ag8.png
  ag11.png
  bedrock-access2.JPG
  ag10.png
  ag9.png
  stack_resources.png
  output_bucket.png
  studio-new-launcher.png
  architecture-diagram.png
  create_stack.png
  kb3.png
  kb2.png
  pdf_output.png
  bedrock-access.jpg
  kb1.png
  create_folder.png
  files_uploaded.png
  kb5.png
  kb4.png
  kb6.png
  kb7.png
  ag7.png
  sg-rules.PNG
  create_bucket.png
  ag6.png
  ag4.png
  ag5.png
  open_cloudshell.png
  ag1.png
  converted_audiofiles_s3.png
  upload_stack.png
  ag0.png
  enter_folder_name.png
  ag2.png
  select_files.png
  ag3.png
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/ai-powered-assistant-for-investment-research/files/
  Amazon-Quarterly-Earnings-Report-Q1-2023-Full-Call-v1.mp3
  openapi_stock_query.json
  FSI-StockQuery-BedrockAgent-4bed2482-a84f-4d9b-b53c-37220fd4b9bb.zip
  FSI-TextractProcessingFunction-b6054c5e-0286-4cfb-a2f3-55d408a9972c.zip
  openapi_portfolio.json
  openapi_sentiment.json
  Amazon-10K-2022-EarningsReport.pdf
  stock_prices.csv
  FSI-SentimentDetecttion-BedrockAgent-6aebee60-d2df-464c-b652-b93e2aef7b3a.zip
  FSI-TextractAsyncInvocationFunction-759363ea-7b4b-411c-a96f-b137a595387b.zip
  agents-layer-porfolio.zip
  FSI-Transcribe-66a4860d-390a-4af5-aa1b-05fb469be7ac.zip
  openapi_keyphrases.json
  FSI-KeyPhrasesDetection-BedrockAgent-21b0f3b8-f981-4db6-a0ce-606a13e9c35f.zip
  Amazon-10Q-Q1-2023-QuaterlyEarningsReport.pdf
  agents-layer-stock-query.zip
  FSI-PortfolioTool-BedrockAgent-9a4cdb9f-14b9-4658-9720-537735bf2b1c.zip
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/text-2-sql-agent/
  README.md
  create_and_invoke_sql_agent.ipynb
  lambda_function.py
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/text-2-sql-agent/images/
  text-to-sql-architecture-Athena.png
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/text-2-sql-agent/dependencies/
  config.py
  clean.py
  build_infrastructure.py
  text_to_sql_openapi_schema.json
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/text-2-sql-agent/data/
  TheHistoryofBaseball.zip
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/customer-relationship-management-agent/
  requirements.txt
  Dockerfile
  deploy.yaml
  README.md
  app.py
  infrastructure.yaml
  codepipeline.yaml
  architecture.png
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/customer-relationship-management-agent/util/
  __init__.py
  bedrock.py
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/customer-relationship-management-agent/src/
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/customer-relationship-management-agent/src/bedrock-agent/
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/customer-relationship-management-agent/src/bedrock-agent/basic/
  crm-bot-lambda.py
  crm-bot-lambda.zip
  crm_schema.json
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/customer-relationship-management-agent/src/bedrock-agent/jira/
  crm-bot-lambda.py
  crm-bot-lambda.zip
  crm_schema.json
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/customer-relationship-management-agent/src/data/
  data.zip
  interactions.png
  prompt.py
  upload_data.py
  customers.png
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/agentsforbedrock-retailagent/
  csbot_agent.py
  customerservicebot.json
  README.md
  csbot_agent_template.yml
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/agentsforbedrock-retailagent/workshop/
  test_retailagent_agentsforbedrock.ipynb
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/agentsforbedrock-retailagent/img/
  ML-15539-sequence-flow-agents.png
  ML-15539-agent-trace1.png
  ML-15539-AgentsBlog.drawio
  ML-15539-agents-menu.png
  ML-15539-agent-model.png
  ML-15539-agent-trace2.png
  ML-15539-agent-trace3.png
  ML-15539-cfn-launch-stack.png
  ML-15539-agent-test.png
  ML-15539-cfn-stack-delete.png
  ML-15539-agent-action-groups.png
  ML-15539-agent-alias.png
  ML-15539-agent-response.png
  ML-15539-agent-details.png
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/agentsforbedrock-retailagent/open-api-spec/
  customerservicebot.json
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/agentsforbedrock-retailagent/data/
  demo_csbot_db
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/hr-assistant/
  CODE_OF_CONDUCT.md
  LICENSE
  README.md
  CONTRIBUTING.md
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/hr-assistant/documentation/
  deployment-guide.md
  clean-up.md
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/hr-assistant/streamlit/
  requirements.txt
  agent_streamlit.py
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/hr-assistant/imgs/
  15_streamlit.png
  00_youtube_thumbnail.png
  12_agent_working_draft.png
  03_kb_review.png
  11_agent_overview.png
  04_kb_creation_banner.png
  14_testing.png
  13_create_alias.png
  05_kb_data_sync.png
  10_associated_actions_withkb.png
  01_cfn_resources.png
  06_kb_id.png
  01_agent-overview.png
  09_associated_actions.png
  08_hr_agent.png
  07_kb_ds_id.png
  02_kb_data_source.png
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/hr-assistant/shell/
  delete-hr-resources.sh
  create-hr-resources.sh
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/hr-assistant/agent/
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/hr-assistant/agent/knowledge-base-assets/
  pay-february.json
  Aglaia_Benefit_Policy.pdf
  pay-january.json
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/hr-assistant/agent/lambda/
  index.py
  calendar_integration.py
  athena_sql_query.py
  __init__.py
  hr_function.zip
  generate_image.py
  email_integration.py
  slack_integration.py
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/hr-assistant/agent/api-schema/
  action-groups.txt
  slack-action-group.json
  send-email-action-group.json
  calendar-action-group.json
  sql-action-group.json
  calendar-availability-action-group.json
  generate-image-action-group.json
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/hr-assistant/cfn/
  hr-resources.yml
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/text-2-sql-agent-cdk-enhanced/
  setup.sh
  requirements.txt
  cdk.json
  claude_3.py
  agent_instruction_generator.py
  Prep_Data.py
  Readme.md
  package-lock.json
  package.json
  text_to_sql_openapi_schema.json
  app.py
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/text-2-sql-agent-cdk-enhanced/lambda/
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/text-2-sql-agent-cdk-enhanced/lambda/agent/
  index.py
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/text-2-sql-agent-cdk-enhanced/Data/
  EV_WA.zip
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/
  README.md
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/06-prompt-and-session-attributes/
  06-prompt-and-session-attributes.ipynb
  README.md
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/07-advanced-prompts-and-custom-parsers/
  07-custom-prompt-and-lambda-parsers.ipynb
  README.md
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/02-create-agent-with-api-schema/
  02-create-agent-with-api-schema.ipynb
  insurance_claims_agent_openapi_schema.json
  README.md
  lambda_function.py
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/02-create-agent-with-api-schema/images/
  architecture.png
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/03-create-agent-with-return-of-control/
  README.md
  03-create-agent-with-return-of-control.ipynb
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/03-create-agent-with-return-of-control/images/
  HR_DB.png
  architecture.png
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/05-create-agent-with-knowledge-base-and-action-group/
  knowledge_base.py
  requirements.txt
  README.md
  agent.py
  05-create-agent-with-knowledge-base-and-action-group.ipynb
  agenteval.yml
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/05-create-agent-with-knowledge-base-and-action-group/images/
  architecture.png
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/05-create-agent-with-knowledge-base-and-action-group/dataset/
  Restaurant_Childrens_Menu.pdf
  Restaurant_Dinner_Menu.pdf
  Restaurant_week_specials.pdf
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/04-create-agent-with-single-knowledge-base/
  agents-with-kb.png
  README.md
  04-create-agent-with-single-knowledge-base.ipynb
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/04-create-agent-with-single-knowledge-base/kb_documents/
  bedrock-ug.pdf
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/04-create-agent-with-single-knowledge-base/images/
  architecture.png
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/10-create-agent-with-memory/
  10-create-agent-with-memory.ipynb
  README.md
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/10-create-agent-with-memory/images/
  architecture.png
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/09-fine-grained-access-permissions/
  template.yaml
  README.md
  .gitignore
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/09-fine-grained-access-permissions/005_Frontend/
  .gitignore
  package.json
  amplify-headless-init-payload.json
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/09-fine-grained-access-permissions/005_Frontend/public/
  index.html
  manifest.json
  robots.txt
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/09-fine-grained-access-permissions/005_Frontend/src/
  reportWebVitals.js
  App.css
  index.js
  index.css
  aws-exports.tmplt.js
  App.test.js
  setupTests.js
  App.js
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/09-fine-grained-access-permissions/001_avp/
  template.yaml
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/09-fine-grained-access-permissions/images/
  claims-invoke-bedrock-agent.png
  claims-app.png
  bedrock-model-access.png
  Architecture_AVP_bedrock_agents.jpg
  claims-actiongroup-lambda.png
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/09-fine-grained-access-permissions/003_bedrock-agent/
  template.yaml
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/09-fine-grained-access-permissions/003_bedrock-agent/agent/
  requirements.txt
  agent.py
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/09-fine-grained-access-permissions/004_apigateway/
  template.yaml
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/09-fine-grained-access-permissions/004_apigateway/invoke-lambda/
  requirements.txt
  invoke_lambda.py
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/09-fine-grained-access-permissions/002_cognito/
  template.yaml
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/01-create-agent-with-function-definition/
  README.md
  01-create-agent-with-function-definition.ipynb
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/01-create-agent-with-function-definition/images/
  HR_DB.png
  architecture.png
source/amazon-bedrock-samples-main/prompt-engineering/
  Prompt Decomposition.ipynb
  README.md
  Prompt Evaluation.ipynb
source/amazon-bedrock-samples-main/prompt-engineering/session-4/
  Setup.ipynb
  requirements.txt
  Chat_application.ipynb
  Function_agent.ipynb
source/amazon-bedrock-samples-main/prompt-engineering/session-4/faiss-diy/
  index.faiss
  index.pkl
source/amazon-bedrock-samples-main/prompt-engineering/session-4/images/
  embeddings_lang.png
  chatbot_bedrock.png
  terminal.png
  chatbot_lang.png
  vector_embedding.png
  api.png
  context-aware-chatbot.png
  vector_db.jpg
source/amazon-bedrock-samples-main/prompt-engineering/session-4/multimodal/
  README.md
source/amazon-bedrock-samples-main/prompt-engineering/session-4/multimodal/images/
  titan-embeddings-g1-image.png
source/amazon-bedrock-samples-main/prompt-engineering/session-4/multimodal/faiss-multimodal/
  mm_search.ipynb
  README.md
  utils.py
  CONTRIBUTING.md
  LICENSE.txt
source/amazon-bedrock-samples-main/prompt-engineering/session-4/multimodal/faiss-multimodal/images/
  departure_rate.jpg
  contextual_search_arch.png
source/amazon-bedrock-samples-main/prompt-engineering/session-4/multimodal/faiss-multimodal/data/
source/amazon-bedrock-samples-main/prompt-engineering/session-4/multimodal/faiss-multimodal/data/images/
  ea0c6da6.jpg
  075e5d67.jpg
source/amazon-bedrock-samples-main/prompt-engineering/session-4/data/
source/amazon-bedrock-samples-main/prompt-engineering/session-4/data/letter/
  2022.txt
source/amazon-bedrock-samples-main/prompt-engineering/session-4/data/book/
  book.txt
source/amazon-bedrock-samples-main/prompt-engineering/session-4/data/sagemaker/
  sm_faq_v2.csv
  sagemaker_faqs.csv
source/amazon-bedrock-samples-main/prompt-engineering/session-4/faiss-index/
source/amazon-bedrock-samples-main/prompt-engineering/session-4/faiss-index/llama-index/
  vector_store.json
  graph_store.json
  index_store.json
  docstore.json
source/amazon-bedrock-samples-main/prompt-engineering/session-4/faiss-index/langchain/
  index.faiss
  index.pkl
source/amazon-bedrock-samples-main/prompt-engineering/images/
  prompt_engineering.png
source/amazon-bedrock-samples-main/introduction-to-bedrock/
  bedrock_anthropic_claude3.py
  bedrock_stability.py
  model_choice_converse_bedrock_streamlit.py
  bedrock_amazon_titan_embeddings.py
  bedrock_api.py
  bedrock_mixtral.py
  Getting_started_with_Converse_API.ipynb
  getting_started_converse_bedrock_streamlit.py
  README.md
  bedrock_amazon_titan_text.py
  bedrock_cohere.py
  bedrock_anthropic.py
  cat.png
  bedrock_mistral.py
  Getting_started_with_Prompt_Management_Flows.ipynb
  bedrock_meta.py
  bedrock_sdk.py
  model-choice-demo-converse-api.py
  bedrock_streaming.py
  Claude-MessagesAPI-Examples.ipynb
  bedrock_ai21.py
source/amazon-bedrock-samples-main/introduction-to-bedrock/images/
  bedrock.png
  bedrock_models.png
source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/
  README.md
  GettingStartedWithAmazonBedrock.ipynb
source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-emails-bedrock/
  requirements.txt
  README.md
source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-emails-bedrock/cdk-app/
  requirements.txt
  cdk.json
  source.bat
  .gitignore
  app.py
source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-emails-bedrock/cdk-app/lambdas/
  bedrock_boto3_layer.zip
  build_lambda_layer.sh
source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-emails-bedrock/cdk-app/lambdas/process_emails_with_bedrock/
  lambda.py
  prompt.txt
source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-emails-bedrock/cdk-app/cdk_app/
  __init__.py
  cdk_app_stack.py
source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-emails-bedrock/manual_steps/
  4-create-rule-step-2.png
  3-create-rule-step-1.png
  2-activate-rule-set.png
  5-create-rule-step-3-add-action.png
  7-create-rule-complete.png
  1-email-receiving-create-rule-set.png
  6-create-rule-step-3-choose-sns-topic.png
source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-dynamodb-table-bedrock/
  requirements.txt
  Makefile
  cdk.json
  source.bat
  README.md
  requirements-dev.txt
  app.py
source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-dynamodb-table-bedrock/process_dynamodb_table_bedrock/
  __init__.py
  process_dynamodb_table_bedrock_stack.py
source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-dynamodb-table-bedrock/process_dynamodb_table_bedrock/cdk_helper_scripts/
source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-dynamodb-table-bedrock/process_dynamodb_table_bedrock/cdk_helper_scripts/zipimage/
  Dockerfile
source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-dynamodb-table-bedrock/process_dynamodb_table_bedrock/populate_dynamodb_table/
  emails.csv
  lambda_function.py
source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-dynamodb-table-bedrock/process_dynamodb_table_bedrock/process_dynamodb_table_bedrock_lambda/
  prompt.txt
  lambda_function.py
source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-dynamodb-table-bedrock/images/
  extracted_info_details.png
  tables_menu1.png
  email-processing-app.png
  tables_list.png
  navigate_lambda.png
  lambda_outputs.png
  table_items.png
  architecture_diagram.png
  extracted_information.png
  test_event.png
  navigate_dynamodb.png
  test_button.png
  explore_items.png
source/amazon-bedrock-samples-main/introduction-to-bedrock/java/
  README.md
source/amazon-bedrock-samples-main/introduction-to-bedrock/java/my-app/
  pom.xml
source/amazon-bedrock-samples-main/introduction-to-bedrock/java/my-app/src/
source/amazon-bedrock-samples-main/introduction-to-bedrock/java/my-app/src/main/
source/amazon-bedrock-samples-main/introduction-to-bedrock/java/my-app/src/main/java/
source/amazon-bedrock-samples-main/introduction-to-bedrock/java/my-app/src/main/java/com/
source/amazon-bedrock-samples-main/introduction-to-bedrock/java/my-app/src/main/java/com/mycompany/
source/amazon-bedrock-samples-main/introduction-to-bedrock/java/my-app/src/main/java/com/mycompany/app/
  App.java
source/amazon-bedrock-samples-main/model-evals/
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/
  1_get_inference.ipynb
  LICENSE
  requirements.txt
  config.yaml
  README.md
  main.py
  2_run_llm_as_a_judge_eval.ipynb
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/img/
  llm_as_a_judge.png
  llm_as_a_judge.drawio
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/9/
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/9/meta.llama3-70b-instruct-v1-0/
  model_evaluation_9.json
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/0/
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/0/meta.llama3-70b-instruct-v1-0/
  model_evaluation_0.json
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/7/
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/7/meta.llama3-70b-instruct-v1-0/
  model_evaluation_7.json
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/6/
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/6/meta.llama3-70b-instruct-v1-0/
  model_evaluation_6.json
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/1/
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/1/meta.llama3-70b-instruct-v1-0/
  model_evaluation_1.json
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/8/
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/8/meta.llama3-70b-instruct-v1-0/
  model_evaluation_8.json
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/4/
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/4/meta.llama3-70b-instruct-v1-0/
  model_evaluation_4.json
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/3/
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/3/meta.llama3-70b-instruct-v1-0/
  model_evaluation_3.json
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/2/
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/2/meta.llama3-70b-instruct-v1-0/
  model_evaluation_2.json
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/5/
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/5/meta.llama3-70b-instruct-v1-0/
  model_evaluation_5.json
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/data/
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/data/source_data/
  data.csv
  data_user_system_prompt_version.csv
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/data/prompt_template/
  claude_inference_prompt_template.txt
  llama3_eval_prompt.txt
  claude_final_summary_prompt.txt
  claude_eval_prompt.txt
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/data/results/
  final_analysis.txt
  processed_eval_prompts.csv
  llm_as_a_judge_comparisons.txt
  llm_as_a_judge_pick_rate.csv
  llm_as_a_judge_comparisons.csv
  inference_latency_summary.txt
  all_explanations.txt
  all_results.csv
source/amazon-bedrock-samples-main/rag-solutions/
  README.md
source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase/
  README.md
source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase/streamlit/
  chatbot.py
source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase/images/
  kb-vectorstore.jpg
  lambda-layer.jpg
  kb-syncing.png
  kb-syncing.jpg
  kb-body.jpg
  streamlit-filled.jpg
  bedrock-left.jpg
  kb-details.jpg
  cfn-body.jpg
  share-holders.jpg
  architecture_1.jpg
  share-holders.png
  cfn-specify.jpg
  architecture_2.jpg
  kb-datasource.jpg
  kb-readysync.jpg
  streamlit-filled-withanswer.png
  streamlit-blank.jpg
  kb-ready.jpg
  kb-ready.png
  kb-review.jpg
  cfn-create.jpg
  s3-objects.jpg
  kb-sync.jpg
source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase/cfn/
  DeployKnowledgeBase.yaml
source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase/lambda/
  bedrock-kb-retrieveAndGenerate.py
source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase/lambda/layer/
  knowledgebase_lambdalayer.zip
source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase/notebook/
  knowledge_base_create_ingest_documents.ipynb
  utility.py
source/amazon-bedrock-samples-main/rag-solutions/sql-query-generator/
  requirements.txt
  README.md
  sql_chat_ui.py
  northwind.db
  sql_query_chain.py
  sqlite_helper.py
  northwind_ddl.sql
source/amazon-bedrock-samples-main/rag-solutions/sql-query-generator/images/
  sql_chat_ui.png
source/amazon-bedrock-samples-main/rag-solutions/multimodal-rag-pdf/
  README.md
source/amazon-bedrock-samples-main/rag-solutions/multimodal-rag-pdf/rag/
  multimodal-rag-pdf.ipynb
source/amazon-bedrock-samples-main/rag-solutions/multimodal-rag-pdf/rag/diagrams/
  multimodal-rag-inference.drawio.png
  multimodal-rag.drawio.png
source/amazon-bedrock-samples-main/rag-solutions/semantic-search/
  requirements.txt
  search_lib.py
  README.md
  search_app.py
  bedrock_faqs.csv
source/amazon-bedrock-samples-main/rag-solutions/llamaindex-examples/
  Basic_RAG_With_LlamaIndex.ipynb
  Router_Query_Engine.ipynb
  Multi_Document_Agent.ipynb
  2_llama_index_bedrock_kb.ipynb
  SubQuestion_Query_Engine.ipynb
  1_llama_parse_upload_s3.ipynb
  ReAct_Agent.ipynb
source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase-guardrails/
  README.md
source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase-guardrails/streamlit/
  chatbot.py
source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase-guardrails/images/
  kb-vectorstore.jpg
  lambda-layer.jpg
  kb-syncing.png
  gr-create.png
  kb-syncing.jpg
  kb-body.jpg
  streamlit-filled.jpg
  bedrock-left.jpg
  gr-image.png
  kb-details.jpg
  cfn-body.jpg
  share-holders.jpg
  architecture_1.jpg
  share-holders.png
  cfn-specify.png
  cfn-specify.jpg
  architecture_2.jpg
  kb-datasource.jpg
  gr-create-new.png
  gr-add-word.png
  kb-readysync.jpg
  streamlit-blank.jpg
  kb-ready.jpg
  kb-ready.png
  streamlit-filled-checked.jpg
  kb-review.jpg
  gr-version.png
  cfn-create.jpg
  s3-objects.jpg
  kb-sync.jpg
source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase-guardrails/cfn/
  DeployKnowledgeBase.yaml
source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase-guardrails/lambda/
  bedrock-kb-retrieveAndGenerate.py
source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase-guardrails/lambda/layer/
  knowledgebase_lambdalayer.zip
source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase-guardrails/notebook/
  knowledge_base_create_ingest_documents.ipynb
  utility.py
source/amazon-bedrock-samples-main/rag-solutions/rag-foundations-workshop/
  LICENSE
  requirements.txt
  README.md
source/amazon-bedrock-samples-main/rag-solutions/rag-foundations-workshop/faiss-diy/
  index.faiss
  index.pkl
source/amazon-bedrock-samples-main/rag-solutions/rag-foundations-workshop/data/
source/amazon-bedrock-samples-main/rag-solutions/rag-foundations-workshop/data/letter/
  2022.txt
source/amazon-bedrock-samples-main/rag-solutions/rag-foundations-workshop/data/book/
  book.txt
source/amazon-bedrock-samples-main/rag-solutions/rag-foundations-workshop/data/sagemaker/
  Amazon-com-Inc-2023-Shareholder-Letter.pdf
  Amazon_SageMaker_FAQs.pdf
  sm_faq_v2.csv
  sagemaker_faqs.csv
source/amazon-bedrock-samples-main/rag-solutions/rag-foundations-workshop/notebooks/
  04_retrieval_based_chat_application.ipynb
  03_retrieval_based_text_application.ipynb
  05_agent_based_text_generation.ipynb
  02_contextual_text_generation.ipynb
  04_retrieval_based_chat.ipynb
  01_workshop_setup.ipynb
  06_build_yourself.ipynb
  06_DO_NOT_OPEN_build_yourself_answers.ipynb
source/amazon-bedrock-samples-main/rag-solutions/rag-foundations-workshop/notebooks/images/
  embeddings_lang.png
  chatbot_bedrock.png
  terminal.png
  chatbot_lang.png
  model_eval.png
  api.png
  context-aware-chatbot.png
source/amazon-bedrock-samples-main/rag-solutions/rag-foundations-workshop/faiss-index/
source/amazon-bedrock-samples-main/rag-solutions/rag-foundations-workshop/faiss-index/llama-index/
  vector_store.json
  graph_store.json
  index_store.json
  docstore.json
source/amazon-bedrock-samples-main/rag-solutions/rag-foundations-workshop/faiss-index/langchain/
  index.faiss
  index.pkl
source/amazon-bedrock-samples-main/knowledge-bases/
  utility.py
  README.md
source/amazon-bedrock-samples-main/knowledge-bases/01-rag-concepts/
  4_customized-rag-retreive-api-titan-lite-evaluation.ipynb
  2a_managed_rag_kb_retrieve_generate_api.ipynb
  1b_create_ingest_documents_test_kb_multi_ds.ipynb
  6_customized-rag-retreive-api-langchain-claude-v2-online-evaluation-ragas.ipynb
  1a_create_ingest_documents_test_kb.ipynb
  5_customized-rag-retreive-api-langchain-claude-evaluation-ragas.ipynb
  3_customized-rag-retreive-api-hybrid-search-claude-3-sonnet-langchain.ipynb
  2b_managed_rag_custom_prompting_and_no_of_results.ipynb
source/amazon-bedrock-samples-main/knowledge-bases/01-rag-concepts/images/
  rag-eval-flow-guidelines.png
  LangfuseAPIKEY.png
  rag-eval-flow-correctness.png
  rag-eval-online-langfuse.png
  no-of-results-1.png
  rag-eval-flow-faithfulness.png
  no-of-results-2.png
  rag-eval-flow-relevancy.png
  data_ingestion.png
  LangfuseTraceDetailsGeneration.jpg
  retrieveAPI.png
  LangfuseTraceDetailsRetreive.jpg
  LangfuseTraceDetail.jpg
  retrieveAndGenerate.png
  custom-prompting-0.png
  custom-prompting-1.png
  custom-prompting-2.png
source/amazon-bedrock-samples-main/knowledge-bases/01-rag-concepts/optimizing-accuracy-retrieved-results/
  hybrid_search_and_multi_query.ipynb
  optimizing-rag-retrieval-using-metadata_filtering.ipynb
source/amazon-bedrock-samples-main/knowledge-bases/01-rag-concepts/optimizing-accuracy-retrieved-results/images/
  multi-query.jpg
  multi-query.png
  data_ingestion.png
  hybrid-search-2.png
  retrieveAPI.png
  hybrid-overview.png
  hybrid-search-1.png
  hybrid-overview.jpg
  metadata-filter.png
  retrieveAndGenerate.png
source/amazon-bedrock-samples-main/knowledge-bases/00-zero-setup-chat-with-your-document/
  00_chat_with_document_kb.ipynb
source/amazon-bedrock-samples-main/knowledge-bases/images/
  rag-eval-flow-guidelines.png
  LangfuseAPIKEY.png
  rag-eval-flow-correctness.png
  rag-eval-online-langfuse.png
  rag-eval-flow-faithfulness.png
  rag-eval-flow-relevancy.png
  data_ingestion.png
  LangfuseTraceDetailsGeneration.jpg
  retrieveAPI.png
  LangfuseTraceDetailsRetreive.jpg
  LangfuseTraceDetail.jpg
  retrieveAndGenerate.png
source/amazon-bedrock-samples-main/knowledge-bases/03-infra/
source/amazon-bedrock-samples-main/knowledge-bases/03-infra/e2e-rag-using-bedrock-kb-cfn/
  README.md
  deploy.sh
source/amazon-bedrock-samples-main/knowledge-bases/03-infra/e2e-rag-using-bedrock-kb-cfn/artifacts/
  provider-event-handler.zip
  opensearchpy-layer.zip
  custom-resource-lambda.zip
source/amazon-bedrock-samples-main/knowledge-bases/03-infra/e2e-rag-using-bedrock-kb-cfn/templates/
  main-template-out.yml
  oss-infra-template.template
  main-template-out-tmp.yml
  kb-infra-template.template
  kb-role-template.template
  oss-infra-template-tmp.template
source/amazon-bedrock-samples-main/knowledge-bases/use-case-examples/
source/amazon-bedrock-samples-main/knowledge-bases/use-case-examples/metadata-filter-access-control/
  README.md
  utils.py
  kb-end-to-end-acl.ipynb
source/amazon-bedrock-samples-main/knowledge-bases/use-case-examples/metadata-filter-access-control/imgs/
  architecture.png
source/amazon-bedrock-samples-main/knowledge-bases/use-case-examples/metadata-filter-access-control/templates/
  2-knowledgebase-infra.yaml
  1-base-infra.yaml
source/amazon-bedrock-samples-main/knowledge-bases/videos/
  LangfuseDashboardrec.mov
source/amazon-bedrock-samples-main/knowledge-bases/02-advanced-concepts/
  README.md
source/amazon-bedrock-samples-main/knowledge-bases/02-advanced-concepts/02-using-open-source-framework/
  semantic_chunking_langchain.ipynb
  requirements.txt
source/amazon-bedrock-samples-main/knowledge-bases/02-advanced-concepts/02-using-open-source-framework/images/
  semantic-chunking.png
source/amazon-bedrock-samples-main/knowledge-bases/02-advanced-concepts/01-chunking-strategy/
  0_chunk_size_evaluation_for_KB_RAG.ipynb
source/amazon-bedrock-samples-main/multimodal/
source/amazon-bedrock-samples-main/multimodal/Titan Image Generator/
source/amazon-bedrock-samples-main/multimodal/Titan Image Generator/Instant Customization/
  Introduction to Amazon Titan Image Generator Instant Customization Feature.ipynb
source/amazon-bedrock-samples-main/multimodal/Titan Image Generator/Instant Customization/Data/
  sketch_dog.png
  smila.jpg
  carton_ladybug.png
source/amazon-bedrock-samples-main/multimodal/Titan/
source/amazon-bedrock-samples-main/multimodal/Titan/embeddings/
source/amazon-bedrock-samples-main/multimodal/Titan/embeddings/v2/
  Titan-V2-Embeddings.ipynb
source/amazon-bedrock-samples-main/multimodal/Titan/embeddings/v2/images/
  embeddings_lang.png
  chatbot_bedrock.png
  terminal.png
  chatbot_lang.png
  vector_embedding.png
  api.png
  context-aware-chatbot.png
  vector_db.jpg
source/amazon-bedrock-samples-main/multimodal/Titan/titan-multimodal-embeddings/
  README.md
source/amazon-bedrock-samples-main/multimodal/Titan/titan-multimodal-embeddings/amazon-bedrock-multimodal-oss-searchengine-e2e/
  README.md
  utils.py
  titan_mm_embed_search_blog.ipynb
  CONTRIBUTING.md
  LICENSE.txt
source/amazon-bedrock-samples-main/multimodal/Titan/titan-multimodal-embeddings/amazon-bedrock-multimodal-oss-searchengine-e2e/images/
  contextual_search_arch.png
source/amazon-bedrock-samples-main/multimodal/Titan/titan-multimodal-embeddings/images/
  titan-embeddings-g1-image.png
source/amazon-bedrock-samples-main/multimodal/Titan/titan-multimodal-embeddings/rag/
  requirements.txt
  globals.py
  0_data_prep.ipynb
  README.md
  1_multimodal_rag.ipynb
  download_images.py
source/amazon-bedrock-samples-main/multimodal/Titan/titan-multimodal-embeddings/rag/images/
  multimodal-rag-Page-1.drawio.png
source/amazon-bedrock-samples-main/multimodal/Claude3/
  README.md
  Claude3-Sonnet-Multimodal-Example.ipynb
  multi-modal-rag-claude3-sonnet-langchain.ipynb
  best_practices_for_claude3_bedrock.ipynb
  animal.jpg
source/amazon-bedrock-samples-main/multimodal/Claude3/images/
  wrinkle.png
  70.png
  nine_dogs.jpg
  labeled_circle.png
  officer.png
  100.png
  circle.png
  officer_example.png
  chinos.png
  140.png
  table.png
  receipt2.png
  receipt1.png
source/amazon-bedrock-samples-main/custom_models/
source/amazon-bedrock-samples-main/custom_models/import_models/
  fmeval_imported_models.ipynb
source/amazon-bedrock-samples-main/custom_models/import_models/llama-3/
  customized-text-to-sql-model.ipynb
  llama3-ngrammedqa-fine-tuning.ipynb
  llama3-sftt-llama3-fine-tuning.ipynb
source/amazon-bedrock-samples-main/custom_models/import_models/llama-3/images/
  text-2-sql-import-model-job.png
  llama3-ft-ImportedModelList.png
  llama3-ft-ImportedModelPlayground.gif
  llama3-ft-ImportScreenshot.png
  text-2-sql-imported-models-menu.png
  text-2-sql-demo.gif
  text-2-sql-take-model-arn.png
  llama3-ft-SageMakerTrainingLog.png
  text-2-sql-import-model-button.png
  llama3-ft-ImportedModelDetails.png
source/amazon-bedrock-samples-main/custom_models/import_models/llama-2/
  Llama2 Fine Tuning-Boolq.ipynb
source/amazon-bedrock-samples-main/custom_models/import_models/llama-2/images/
  import_jobs_perms.png
  iam_role_import_jobs.png
  import_jobs.png
source/amazon-bedrock-samples-main/custom_models/import_models/mistral/
  sm-mistral-fine-tuning-qna.ipynb
source/amazon-bedrock-samples-main/custom_models/import_models/mistral/images/
  MistralImportJobDetailsScreenshot.png
  MistralModelDetailsScreenshot.png
  Mistral-ft-SageMakerTrainingLog.png
  Mistral-ft-ImportScreenshot.png
  MistralModelListScreenshot.png
source/amazon-bedrock-samples-main/security-and-governance/
  README.md
source/amazon-bedrock-samples-main/generative-ai-solutions/
  README.md
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-lambda-layer/
  bedrock-1-28-57.zip
  README.md
  lambda_function.py.zip
  lambda_base.py
  lambda_function.py
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-rekognition-sample/
  README.md
  .gitignore
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-rekognition-sample/cdk/
  .npmignore
  ddb-table-results.png
  cloudformation-s3-bucket.png
  cloud-formation-stack.png
  cloudformation-resources.png
  ddb-restaurant-explore.png
  cdk.json
  package-lock.json
  package.json
  tsconfig.json
  architecture.png
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-rekognition-sample/cdk/bin/
  cdk.ts
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-rekognition-sample/cdk/lib/
  multi-modal-stack.ts
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-rekognition-sample/cdk/lib/lambda/
  requirements.txt
  rek-bedrock.py
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-rekognition-sample/images/
  restaurant-hours-3.jpg
  restaurant-hours-2.jpg
  restaurant-hours-1.jpg
  restaurant-hours-4.jpg
source/amazon-bedrock-samples-main/generative-ai-solutions/metadata-tagger/
  README.md
  claude3_metadata_tagger.ipynb
source/amazon-bedrock-samples-main/generative-ai-solutions/java-connection/
  README.md
source/amazon-bedrock-samples-main/generative-ai-solutions/java-connection/my-app/
  pom.xml
  example-payload.txt
source/amazon-bedrock-samples-main/generative-ai-solutions/java-connection/my-app/src/
source/amazon-bedrock-samples-main/generative-ai-solutions/java-connection/my-app/src/main/
source/amazon-bedrock-samples-main/generative-ai-solutions/java-connection/my-app/src/main/java/
source/amazon-bedrock-samples-main/generative-ai-solutions/java-connection/my-app/src/main/java/com/
source/amazon-bedrock-samples-main/generative-ai-solutions/java-connection/my-app/src/main/java/com/example/
source/amazon-bedrock-samples-main/generative-ai-solutions/java-connection/my-app/src/main/java/com/example/app/
  App.java
source/amazon-bedrock-samples-main/generative-ai-solutions/java-connection/my-app/src/main/java/com/example/app/utils/
  Utils.java
source/amazon-bedrock-samples-main/generative-ai-solutions/java-connection/my-app/src/main/java/com/example/app/pojo/
  ClaudeResponse.java
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-api-gateway/
  01_bedrock_api.ipynb
  README.md
  02_bedrock_api_langchain.ipynb
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-api-gateway/images/
  architecture.png
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-api-gateway/setup/
  cfn-template.yaml
source/amazon-bedrock-samples-main/generative-ai-solutions/recordings-summary-generator/
  recordings-summary-generation.yaml
  README.md
source/amazon-bedrock-samples-main/generative-ai-solutions/recordings-summary-generator/images/
  architecture.svg
  stepfunctions_graph.png
  stepfunctions_graph.svg
source/amazon-bedrock-samples-main/generative-ai-solutions/recordings-summary-generator/sample-recording/
  sample-team-meeting-recording.mp4
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-vtt-file-processing-and-model-evals/
  requirements.txt
  0_chapterize_data.ipynb
  2_summarize_metrics.ipynb
  1_generate_chapter_titles.ipynb
  README.md
  chapterize.py
  .gitignore
  0_already_chapterized_data.ipynb
  bedrock_utils.py
  config.yml
  main.py
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-vtt-file-processing-and-model-evals/data/
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-vtt-file-processing-and-model-evals/data/metrics/
  filtered_titles_for_eval.csv
  model_distribution_count.csv
  recommended_model.csv
  summary_metrics.csv
  overall_evaluation_report.csv
  model_eval.csv
  processed_evaluation_prompts.csv
  per_request_results.csv
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-vtt-file-processing-and-model-evals/data/source_data/
  particle_physics_meeting.json
  particle_physics_meeting.vtt
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-vtt-file-processing-and-model-evals/data/title_completions/
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-vtt-file-processing-and-model-evals/data/title_completions/particle_physics_meeting.vtt/
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-vtt-file-processing-and-model-evals/data/title_completions/particle_physics_meeting.vtt/meta.llama2-13b-chat-v1/
  chapter_1.json
  chapter_3.json
  chapter_2.json
  chapter_4.json
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-vtt-file-processing-and-model-evals/data/title_completions/particle_physics_meeting.vtt/anthropic.claude-3-sonnet-20240229-v1-0/
  chapter_1.json
  chapter_3.json
  chapter_2.json
  chapter_4.json
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-vtt-file-processing-and-model-evals/data/title_completions/particle_physics_meeting.vtt/anthropic.claude-3-haiku-20240307-v1-0/
  chapter_1.json
  chapter_3.json
  chapter_2.json
  chapter_4.json
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-vtt-file-processing-and-model-evals/data/title_completions/particle_physics_meeting.vtt/mistral.mistral-7b-instruct-v0-2/
  chapter_1.json
  chapter_3.json
  chapter_2.json
  chapter_4.json
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-vtt-file-processing-and-model-evals/data/title_completions/particle_physics_meeting.vtt/amazon.titan-text-express-v1/
  chapter_1.json
  chapter_3.json
  chapter_2.json
  chapter_4.json
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-vtt-file-processing-and-model-evals/data/processed_data/
  processed.csv
  chapterized.csv
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-vtt-file-processing-and-model-evals/data/prompts/
  mistral_template.txt
  llama_template.txt
  eval_template.txt
  titan_template.txt
  llama3_template.txt
  anthropic_template.txt
source/amazon-bedrock-samples-main/ops-tooling/
  bedrock_app_custom_dashboard.py
  bedrock_cloudwatch_dashboard.py
  README.md
source/amazon-bedrock-samples-main/responsible-ai/
  README.md
source/amazon-bedrock-samples-main/responsible-ai/guardrails-for-amazon-bedrock-samples/
  Guardrails with LangChain.ipynb
  guardrails-api.ipynb
  Apply_Guardrail_with_Streaming_and_Long_Context.ipynb
source/amazon-bedrock-samples-main/responsible-ai/guardrails-for-amazon-bedrock-samples/images/
  agent_guardrails.png
  chatbedrock_guardrails.png
source/amazon-bedrock-samples-main/responsible-ai/guardrails-for-amazon-bedrock-samples/data/
  shareholder_letter.txt
  financial_story.txt
docs/
  .DS_Store
  modify-prompt-input-restrictions.md
  modify-prompt-input-restrictions-example-ddb.png
docs/sagemaker-payload-examples/
  alexaTM-20B.md
  meta-llama-2-7b-chat.md
  huggingface-falcon-7B-BF16.md
  huggingace-mistral-7B-instruct.md
docs/architecture/
  usecase_architecture.png
  deployment_dashboard_architecture.png
deployment/
  get-cdk-version.js
  build-s3-dist.sh
deployment/cdk-solution-helper/
  index.js
  README.md
  .gitignore
  package-lock.json
  package.json
.github/
  PULL_REQUEST_TEMPLATE.md
.github/ISSUE_TEMPLATE/
  feature_request.md
  bug_report.md
.git/
  ORIG_HEAD
  config
  .COMMIT_EDITMSG.swp
  HEAD
  description
  index
  packed-refs
  COMMIT_EDITMSG
  FETCH_HEAD
.git/objects/
.git/objects/61/
  9eded2b69694847165919857496f9a57daf4b4
.git/objects/0d/
  ede31376b63b55afcf7d5fd74b7caff066018e
  2d47c31f2315dc89633610b6d136956a0ea22e
  af8b40ae878a6a07ccb37c5f731c4a1cd846c9
  b60439ca7ee551a548ef63ff92f552320fa95f
  43abf7fea9f87014f56a76cce1d859b51e1e8f
  f86ccdd6cdcc15a8818ba77cdbed16d1800c1b
  0eebaa250c1a5916933ae96a046daaf93f5b81
  5edb87c8e8e615544ca2b800d8b9f90a7c558a
.git/objects/95/
  9157dcbbb8b49e79e47474a6d4dd53d624abfb
  2b0f820c814d2ed80b5f8e2ef3a49afd59388a
  859b2d2f9b20df29f555d9a69ba55930a386ac
  40193f6f6903b0ce43642a96d08015ce1107aa
  fc0b96ac9fcf6402a2145431c6a54e17d91484
.git/objects/59/
  dff2f87cb69ceb4ebc8f83fe0a34f2d1161146
  07a095f0003eff440c0ddb5b3cbe45ac96555c
.git/objects/92/
  eb868f0a7f3df70d585f8bd9c8b9e871d59c82
  2af9c27bcb18f2e9c7f807fda5a314e25fb47c
  41d1019eae64546259d8341496df688e8d5660
  7094516e657a51b839e046aad0a1372acd33cd
  9e9aa2307cc594a939529377c95c78e8594c7d
.git/objects/0c/
  c5881229c7c6d86574fa6d9ac279acd30d9afe
  202f312324ac0abf48b4d2296541387812483d
  e9d49b7cfb5a3da916e220c406ead451d046b0
  4c874fb8a56473c4e1cc34e3725cf6ea97ab63
  be20946c93fdda36c1c3d2774cea3cb8f000ce
  a90639a24fe32bdf1c303d4fed7d81a3f78000
  d251ee5f88cf841adf6839c278516d4b9a49a0
.git/objects/66/
  844d1c0f381ca6dd31d656c9661897abc1ab23
  ac69e8a9d6e4ab8d532254f017fd0c6d119a58
  b5e947e100262733163fcc1334c9e9964cff4e
  c1bca5f59904846031e8581a590fe04050ed1b
.git/objects/3e/
  c221c39ebb1901033fd7f4539b631e509b35fe
  e42b7419be43e0f5972e7f963f534741f1d2f6
  6ac5c10f2ecc1baa98e77a2a0437c69c5f317c
  765cfbeecb19013c417f30263435523d72375d
  0069d228eb86abded0b72a59a6e1c84c6f2a6b
  f2ce4fd88e88eb37df0aa0cf554cfccb8b3bd1
  df631f23b05d512118e8be4b72d260830a9cf8
.git/objects/50/
  a4f0366293490923d45ed948e7f7f64421e152
  ac3fa7bae7174250908dd70fb8c116a7bfd2e7
.git/objects/68/
  08bc1e7d199034b11ee5f6f5f25aaf9932fc54
  6d506582daa9327f4912755d30a05142bdce11
  168d5fc8cbe9ea9604568a6e012bc51f26d331
  abefee7c8a09b71b1e55e1ed63988aa2e0fbc0
  5acc186646ac723c2f0f035dd90747c1a8508a
.git/objects/57/
  a9e47b90ac1e09a8a74471ee9ccc3b22bf536b
  d8fcbebbfabba8db51019912b219538a148a5d
  6b63c7cf23f6d006187398ab9af6f49b2aba11
.git/objects/3b/
  555b84b062f189c191c3af2972faa513265ffd
  6fcda1b0edc69f8ae93fe89f37c6f1bc0a2865
  8eb3fd1a5d98a9587b993f125735b1d09dd31f
  5c7e121b8ebd297439ef55ff9c98626dc01be5
  d6359dcf38478d8434d7cfc51570a0f9896f28
  8907d30e0abb419947b0ef778ca06d5726fd3b
  1fad48b4465e62061d26773587595435879bc3
  f4b3e8c13493e4d8381066ef1dbf1616f9167c
  1e3f8dccb2898688096392070eb9b11650658e
  cbe2acbe6245278c1273fbd3b33c40b975fbb3
  709c2a8c4c50932b7f7a7b38e00d135c11ece3
.git/objects/6f/
  7886e05b02323a6563bd6242aa64dcb8d5c514
  485ed05380674c593f6f8ae3907cc8f416d5a7
  1eab2d3a2d22d2ff8c3edab7c0edaaf282d3ee
  440cec3090487ee4b34d5c88dce92be292b84b
  49a1b041e342548aa0544eb85a78bca53369c5
  99d81909b9b24e496ca9742448751266fc03f8
.git/objects/03/
  bc5ba4dbdb2b0b5566f47bf2f27ae19d7892ce
  9dec846b476590cb2e78383daf21282bab8c5a
  5dbd50ca63ca89c50f994abc517f6de25d9c2c
  50c8e1b2c6855712fe9a102e64ce77dcaa4674
  4b0c6d5739bb70550b7664a5b75396a8665598
.git/objects/9b/
  5254b371174eea4d6e1744c4e234d9549bbb5b
  752d4b698c4d67fa8b1a6de27bdb629c15095d
  3cb10fb4d934eaeed017af7f319e42ba38f5e5
  f690b27131c2f9dfff280be1ece5133cedae18
  8088cd9b249484bbc1f0a0ce1d247667099a1d
  9fce4fb2058c8b63f4df2ad77e88511c35fefc
  a7a9df1957acb07aa85185a1a9c52096c5d570
.git/objects/9e/
  d026949703db32d89a58a88736dcc48b21ae44
  728d43b6241c90ca4870dff861e40e7d0b804b
  1a83442abd75d0be9a242b4017f15b5ef0c2b3
  41eb9740925c9d611adcb29b8e5315e487b477
.git/objects/04/
  1429e7f2f510dde04dcca7ba842d8a4f7c1cac
  2366ed61ae287548fbbf165841686418167da6
.git/objects/6a/
  3deaf090fae9ac00baa4e3aa9edf4c2eba7528
  977e2aa7f53dda7c7ee1a652fa98c037f63cc4
  012cbd7fcf00b2950b2a7c3475bda6e3163f73
.git/objects/32/
  5a12057fa357d6151df03450f582420b77101f
.git/objects/35/
  416e61cfa894d11e3d62aa440cbd6cbed3630b
  722d297f74c82ec70bf70bd18d53ff27e7d9ed
  17b315aeb132310998d3226f26f20cc68c16b8
  1007c6330cf0158ebb56e363856686b7990f63
.git/objects/69/
  9831003168015e08a5e9c9351e1e8d73146b2e
  e107503e5a6a35654e46937e58fdfc732f8b3b
  0a192dd8b2abb5e241355a709cb9dca705f829
  15f2585984361ce97884469b66377d0699a22f
  6d538db4e05f7d64d7aaf07881adfa4065647d
.git/objects/3c/
  5407035a6544020e4e3290a3a5bcabe5581d98
  c1489593ec01c300650946b64ca315a6a127d9
  461e8ec512181094fb488513db732fc54d2981
  f6cf8864a7bcfcbe19ce1182b0f26890d0ad93
  8fab99405da7e727fd6b96fbf0f20a6953779f
  6dd0e67f011634b11ed02c79f2173dfde680d2
  caff137284e0533f9fc52706256e415a7540d8
.git/objects/56/
  a66b6bf0bf5c1090facdd7c216b95ff6d648d6
  3fbb574ba3f803806111f0b604d5c2d40b550a
  e8a993f65f951f6b349437e45de56a1df84713
  5670423a928b4bdbf33c5c5b8e41d25b6d7f87
.git/objects/51/
  e9c86a4338fa7aa9a4ea25f0bf4f53ba6b3477
  8cd35952a6a219a985706eb3e28932c2c8f3ff
.git/objects/3d/
  2fbab5e44f0182f6e661dfb6db3125518232f6
  1588686b1f5adeb65e865b714f6a1cdd553222
  b4772b9e13eb7950d92ef148c3ca757689ad26
  b58d31fe0e0afb57981c88afca85952fd7fb06
  759da42f75651fffe1f1c3a3b704c92bfd3680
  7862da1f8090ee24224439cc2bf07b0b6dec43
.git/objects/58/
  41dc4e4827eb87b0e356abcf11e6e430da6015
  2aae049e6ecf7c809ad2f0aacae7942a7a9a5e
  57ceeb340387ed32787dd193454b81558ba446
  c2f716575230785704bb61f56f3717c5e4fa8c
  286de5fe559147f5b381129cfb14a643f464dd
.git/objects/67/
  626528d5669ebea42d51d79dbd333d467eece8
  fe52f8a35b8d691cd30c730f15fd0c3f0c4946
.git/objects/0b/
  b71cdf3cd8018d35283f717acbcbb03425df7d
  450ea96e33bbb574ed4b22f381091f99973355
  75fe75d795f0d4cb6bff8bec2112abd4aa3c28
.git/objects/93/
  67fa454dad1457174e89ae63f085dc70921148
  81f22f5d9407efc866b6cb8e46a2ec2691718a
  49dae0fff5e318e9dede087f2d51454149d549
  c1c46592268e638279fd27f807a62f7305543e
.git/objects/94/
  650048aa72c89fc371dcc74ca5674ef141b871
  191e34cd569aee7fbaacc67e0fdafab7e4542d
  01f44691eac5753b22f69d2b81dfeee7701366
  df8772c83b1b7780065663f796f19857ff8fbb
.git/objects/0e/
  0f11717ab82684a5a4369c271022e15418e64c
  2b023abfe5b367589013414a0389f56de6fd31
  0666c822dfe086f2c44d4d30877b1ee842dcaa
.git/objects/60/
  219b85c8bd57678d9cdc6468dedc9cdf1ab448
  383f1d192557e0c1196ffbc6fae32497e5c652
  1beda977a1961c8467e82f01f1bb63bf5909d2
.git/objects/34/
  be8106ac243e45b82d92b25701d230ee7f982f
  33f1694f1e1975dec8fac90906fa28b137c5dd
.git/objects/5a/
  780f8f1ddee9134f4d442560ea7d5f70d63ae6
.git/objects/5f/
  9fa055dbdb69cf79246b049e6d211eb6620c77
  cdab4075aafd0f0cf5acc0ca1fa8cc768774c5
  522b038db62e12e2a6d5a242918b41a00219fd
  e876719918d8b3d42d8c47a2a4fbe577a76061
.git/objects/33/
  78581a526ef6d4d70d80980c16267f86feb135
  8c603716422904b0533d9ba3b9f0306036c18c
  ab988baf3fa43d5fb400955764bf7b880d12fd
  3b22cd28d1129ec24ede446fa89dd4e328b88b
.git/objects/05/
  04dcc09b3da18ad65e2a6a953a13e9600f3335
  548445f4e16d7586b0c219bb44e90e53fc7d6f
  fee2ae4e0102598d992e880698d4ae121f55ec
.git/objects/9d/
  a16aadeab474a589a141bb2a73d94ca42fdf10
  e58eb064afe98bd9d281b64c6eac59a1efb446
  f48b43ad57d5e8669f3189a50350a5d96d7eb6
  f11a5cecde7a8b8b1ccf563d40522e22326539
  38a0d9518495ba0a2503cc4a82bdec96a3a75e
  85509b785b0166dcc4f9ed19d11e837c588596
  b0522e5f4926e0b90669546aad29faf654a5d5
  8fcafafb1e3c19faaa4c6b274ff1a01dc535e3
  a83bc00052f56b44755c16924bc188de87ea18
.git/objects/9c/
  b1736d7f7e9aa093ef51343f7db605a8eb98bc
  27571704f8c41d7bf1d686e98312890f780807
  3707c6bfb7b9cbf7ae12e7772ae531885ed80d
.git/objects/02/
  3e0b1660d515d81f2c39e04ed8239497dda213
  edf8ab319e8229431e17669888fcb2b5ed63fb
  e42ef95163d20a3aef8b57cf5c54dbc4869834
.git/objects/a4/
  4ecceca96c0f510f7951cb199723ffb3049d28
  ca4f40d2015cf8bfc970b8c3dda590e8e69ac1
  499355c53dc7e51d761fa3fde9471499e73485
  28d18d572b89a31a3f3c8f5b03548ea4486149
  8505033dd026634e53167edbc41e5720efa5e9
  05feb4a9156e9d5f91d64cadef010e4cebcf3c
  cd353aeaba74bdceed36eaf1f9187c0130ce48
  492cd8b739b2932cbf089ba9119af17f88ef6b
.git/objects/a3/
  bede2d214201f140e2ebaa977c29b9dfd249e4
  13156297c51996a60bfd844b30d42c9b663e14
  0979a4502439372a3d849d1971ca01b41f674d
  d838ddc4585c4f18762b431181d89b00baa39f
  56f262500e568283a4d694148fecae28ff3707
  d34a39f3c29a77b751dc01b7e96ea53150b9cd
.git/objects/b5/
  d62be11444b5a19406f2b18757fd8991de4248
  afe927f5c4fa1e6c2cc227bc0ec4e09c6a17c6
  64f9d491719d5eb1a075df6c5501b94c52375d
.git/objects/b2/
  a5a1bf0ab052fb1f951329a0cf28401612af19
  59383682c65843984a9a98a865f309341eec07
  73cc78101ddaa94e8d72c5e61a719739b08065
  7be910b52d3e5e808470f151a25512433caf34
.git/objects/d9/
  8de5ff087d84d4990e926c2750108e3b5a8635
  a26d784112a5b1eb5e0b9a65b2c675401327a7
  46c05ba259ceee49002b23160946cd01e5010e
  b00ad88e2115b32d8144f3519921ef195e3e22
  d808ef104a28994c21b824df44ebe9fc783d6c
.git/objects/ac/
  39d5c11d6f6818eeb3f8a4b6e899704185bfcf
  1109aa1f00f9565966cbaf401a7f4e2a9213f6
  f146fd1bb8bfe68abe6321ed635694bae4fe15
  aa601efd49b31d4f26f5e8987e001b9b27a624
  b8e473834bfebc227d1383ff3bb48a61b13846
  35723b367b5aba05e21bdc05280b424464ae6b
.git/objects/ad/
  7c2d24e78c772f1c02dc841cd5a186fce975b8
  22ddd5e8ee597f512fe95aea0a263bedc0cdf8
  7bb6623a34ab6f112d2d2a76b7c810081a65db
.git/objects/bb/
  74e02c8eb45436e3234f7034a9976d469c614e
  c56e91a2989700ac96678ba87cf60bd9367e4c
  c763061d987c1bfb4b2824916187c73a331fce
  b33b3c6870edf0c86c815f12372286a03f76c8
  ba5a7c69409687b75ec9c35ca4b51131842af6
.git/objects/d7/
  33dfd7f6a9dd8595cf61efa5de38ab74fe684d
  d341c8be83065ac64a31695368219c3552fc92
  23db8ea6ab90e0562139d4e0d432a927453b26
  820dfec561c070343257532cce2eff492712bb
  917f8f2d638534eb51a42bfb3b89c0d2f49e60
  65fcac49f5fd51b44d3b8314b82b4888933e94
.git/objects/d0/
  96ad401cd7f4d45cff3837b5ad4b1845bc8aaf
  f4dd0fba2a8033e3eb3aab05804dbf048bdfac
  e8ff28b8260e3680815f8f6506aa366ff3fbd7
.git/objects/be/
  06247daadfdc15a7458e179d96a45fdc6cb519
  019b51b68af71cd510bf271ccc6b7451d3d34b
  04ebd73916c1699e2a6cf7c20a4f227ecaf600
  59896bdfb4058f7aec51702f4550b8424e4496
  719c63f167a057529232a28c54d59141c599c3
  28c2ad51395389349546769533ad781d32a0d7
  20368f71429dd7aab2fac1985efbee795355b8
.git/objects/b3/
  40b5db70d44780d621372e0fb7ab40c419bccb
  42dece1c01e5565eb8a0e4b0e115ee4828fdf1
  5b056f4ce145e3033bb3cfced65051452ba54e
  4e7ed822fef6883096ce2f8f721ecf46df0216
  072ef52b3bb3a774a18d42923ea4d3e71d658c
  ff525bfc5c7f3810ec3d70c54386fed5076248
  a02130ef429422494ad4f0faf6405eaf19ddca
  05466f838fb102440b101432bd5072b05b99b7
  c8251fe72fe105b045bd2d801a668da796eeaa
.git/objects/df/
  7dde00b9ebd4db12a3107846d237602e49c173
  0c7648329f3ed950fb541a03290ad26e95670a
  e902fb3ad78ea3c49282b81381edb937e9d6b5
.git/objects/da/
  c5fcfd50f4a875ab5ef94d527abcfd7bb2c4cf
  01968c34c9ad507f89b7a2e31121b53720287d
  c0ab7094c36a7331d3f8da15b389123c0ae28f
  801acc1b5593aaa57f034b9c4d1bad1b9093a0
  168895459dc6266760ebdcb2e06e3b1c618513
  dd59e617d8fb035f4fbec5904772f76275d118
  4ded2a32d152b219c01f557bafa5907a66224c
  72431eeb3a053338e67a1977fa4460eaaabeaa
  c4740137031bfdb61ae89c10de5321b7a98515
.git/objects/b4/
  f9c1e3a83bf749c17df957a07d59e2c651abbd
  5caf8055e99da0eb2de5ce1d30ec58b0810ad1
.git/objects/a2/
  d348fe3f1b21d59a233a02ae426ecfe253f71c
  275638a48e18d2e141bd7794beee0a3ae7f08d
  b78d440ce449ac0b44a2320659d729a0c78d23
.git/objects/a5/
  3291c0f3de675df3892b4e909dacbf0ef356e0
  a26db90f474f9b644f0b271a3d423aa0e530d3
.git/objects/bd/
  766da3f597ba49024bbb62022006a52f63c2b2
  52c6358c43ad63553ae80f98d599c087bd1118
  0c850ef550f706383910592d3e4cad9fbc7958
.git/objects/d1/
  d1a42f99828ed3db84ed2da6dd47cd8c2cb90e
  edb1a553995d071bca703b6b5e068558309ddb
  b9e5dadb3f23dd00d1b5db87397153ca84c5a6
  a82bc07915ab41a8bc785522d0c3774d5a57eb
.git/objects/d6/
  c23283f6325192e9ad6d5e0ac8a8903a6d19fa
  de095b8609e657c09f7ac7da203973b6bb7ea9
  1e268dea1953c6c84c2c33a97e9d5a888b9070
  aa68b1e56bfaf64a277c28ef381d8cf8bb69f5
  a247ee58ba1e22ad0719d06f869f555ed9f296
  7fa0396205397db2184987da60bf9fdacf36b1
.git/objects/bc/
  38d9b210bcc430dec3a55878c77ebf95344dbe
  96a263245cd644cf9be7da00fbe72f85b7d5d4
  13d3f8e9953bdd22579b1e875f3bc9724ab9cb
.git/objects/ae/
  011e7dc7c17840f5626df3a4c5c23bacc7cde8
  74b3d3456c2639d7cc875a27595414cf7da3eb
  0cbfa480ac855df30742da86b9a559424149fa
  2812b7b1d2bd7126ccb0fbe96bbc6d534f61a4
  08ac3ef497c0865f17a6d0ac6376d26af685d4
  3b259c5352fa58ad28c40e7b1e4daa700a7a07
  79140f6959899f88c8d1b204b54e7672b00e97
.git/objects/d8/
  6e96605b2ee0a808b8891d477c712f708eaac7
  8b718bfa479d3b4cd8ebb35eb48dcb1083800b
  a7b465ad47712963bb9fe474f2296adb2739fd
  a64ae408021ef9f4e7778ab24ecc03b2e72ce3
  7b2278952d10fe41d06b40192fb67ff714f765
  4843b2b0ced31f6b026e962ed0a5ba453da700
  5075f17cbbe15ab16e883359795857596732e4
  a69bc18c8867056bb568dde248ee2f8d922ba0
  ecf48c922d111258b2366d09ee38419a81ce14
.git/objects/ab/
  e28caf6683c11bdbb0ba6b6dddfe1b67699ef4
  de4cb040abe498d062bc9f0452cc008200104d
  6fbbeaeed1be63b747c13493627ec56e56087f
  453b2a5febb85c90ec3394a51cec0fd99d0ea2
.git/objects/e5/
  3c01611abeb089b3eac51b8828b76a8cacd6ac
  5dafeaaa253655532da618b07704faea405bea
  e89bce668cf634cdbfb05e5775793b0d7856fb
  df9a1305cb973c93dabd2c7bd330cd365993b4
.git/objects/e2/
  c69ee38400a7d9afe7f53683cca785b8352980
  d53816342cc894f14be41c3d210a4e99cc1b88
  fc4285d23734d318f8886dfde13a9c288003a3
.git/objects/f4/
  917de36953c30baeb403cfa9a6adbd3b00a953
  c8fd4cf37eb3a7986b4aca7940e74110e2b8e3
  415081c80d5d6bf368211be1a42bb5b7584007
  18e07f4efb4e8cf43bfb01a55f95eda8d9506a
.git/objects/f3/
  c79a66c2052dd765b8587a0196af4aa2c8d785
  effbdf60b5565cba5633c1e2cb9c272fccc44c
.git/objects/eb/
  14b1d24d489e4d8af427f3c043a82c9eb5944d
  a3f314171e68871b8b81bf449443a3b6973ce1
.git/objects/c7/
  7e90a3880d46a3edd987b5cee6f0110d4ef4aa
  dbdcd42d41bc4fef72d4719bdbe96c8242c792
  ec76b57a44f23214c551c199d986fb5d040b19
  a385fc3fac1ea02c91caa90aa2506c7a39c9ab
  c856782ae0711985b4489a9016fce2aea6dfd9
.git/objects/c0/
  9eefeea22f442058142731410c395767d157bb
  3416a0a73133fd9eaddfac68898c537300d1ec
  350e21b60af2e1754132b74bfb09cb2ab8947b
.git/objects/ee/
  1b2d35fc282a83240e1e485407209b46853d27
  57d06e74ae9fca282b1ce72962bd4eeccafe6b
  7204676c297990058849cec7fa29d92220d97c
  5ea64009fd538b8b59236a818c6faf3214c332
  18295ac71db984a4c6ad2bcf34b54ac22aeaf1
.git/objects/c9/
  050a161fa954370fcb766d031ec5356ad1b54f
  998f096b688970e032434c5b2820c08ff98a57
  419a1c4a16e56c4d455dd064cca4de14f95fb4
.git/objects/fc/
  04f63c74979c4e1b1b2198ec4f3571851d29ee
  f115152762747a9f0d92619bfb80e79641d7b2
  837da42491a8b1c0561d3903fab885365a4328
  1877af0ab2ec7a2e3581e1dd3e21b7a5fae7ed
.git/objects/fd/
  6536a72cc552ea3a75c909e7ae279d6c971ce7
  13e7d87c7eb6a37e4061b20729c99f0743e9b1
  b329832498090eb7ae973a3fb07e15a1daa123
  812976e2ca38160cac7a8b58d37471007f39e8
  94c1074be48783d7f5ab319bac489da43dea0b
.git/objects/f2/
  4ae17aa9bcb0916f060abc38f1f5ad07da0c8d
  c51389e7961453f49e4a0348bc33debf2bfd27
  f16d9a262b16d140ac6da9661f214ff13ca519
  bc9e3fb740a7b7994c507f15a89712f51ac177
  84b6691ce1b13487a536a34b40a812b65f40cc
  b1068eb73ce02d6650602324910ae0f608aecd
.git/objects/f5/
  a4c6e4c6ddafe079c4cc1ecb734b5477f8b8b9
  f3bc830272c6c3f1972831193ef5c8bce5d4a5
  adb7410a183a543c4854a9acc0e0663627c71e
  a4c28c10f17e506a9dd11de0df9d1e2762b8fd
  9283c327205470a8abe08b5d89e5e5ac5d102d
  645029f6f417db1184fac630682adebe5302d8
  a402f3eaeb2421ca32ea8c7c62565211d33f54
  8ef10f2285ced92319d19da9ec309b647ee560
.git/objects/e3/
  6f08dc182a6696b866ceb39f60cb26d99756e1
  ea6bab964b09081947d1454eb66b252862aa44
  e98ede74e940f2376547ef322ddaade6f0f2ea
.git/objects/cf/
  9eaea36ed9e2a0ef7a07ef6fc7a856b467ab90
  af08f1b791c46e348480bce322ecb89b801729
  b1267e45352afb29f718ae663f69f5a42fd6b6
  50366ef5ad0fab44745755a8b21e3647d3906a
  d3a04c050b2b6819cd0a5cec5fe9e028dc84de
  1c2a3ba96e5646102e86c36adfeaa79ca78c14
  011d6a1d9bc59d8345e007b54adf8475b0e96d
  20b52972f3f06e008670f5ffebcb82ab877ae2
.git/objects/ca/
  a97716311618c15355480f19349b067f4c1ec2
  7e3aa099f4eae3a2a94cdf80f5daa23bbb8afd
  9ce78beb13daf375e8643d00aa92fdf8fb1a4d
  e8e42c1bd57511885ec7c1175c1764265f56f7
  814f22ae932cb805fede8ee8d6f809b51997d7
.git/objects/e4/
  64c5da2a2cf987e5b1cd29d3abb3e5d42c9c87
  626295763a8115ec78a4a54350c6e64b5dfac3
  99d0630bb14c05ef1d243d1f5d923099121820
  62312bb43710d03560cb18ba7f1f40976f3b77
.git/objects/fe/
  4b63decf4d668f80cfb48af22b2ac0958916f4
  8deb2a21ca088ca79475a9a237b7ad2c3fc0d3
  6eecd4399278367036f0b7faca89a8e55c3136
  94cd21a936328e6bb7085a3f1b459e3d86bf5b
.git/objects/c8/
  05a73c1db6e146091e8d6b59d4c327864de306
  9ad41a8848a37727c24c678a70994bae89755c
.git/objects/fb/
  a469bdd241a5f2bb031b84c5f89947748c22e1
  401195a56420e046ac619de47d2c9b00fc700a
  558af24a348ccde4e345ea1a9b42d1b6484669
  f80b50980e82ffe18f6f6f1b48ebc54b6b64bc
.git/objects/ed/
  a60561e5daa143f1bcb090bf2e4efa763d63b1
  04f4da302d3126ba17c53e019cc532f49d7347
  47909cf66a096b5019198070d0455f9323f528
  7ab9ea01a49da3add1546b800d08fbd389b9c0
.git/objects/c1/
  d6d45dcf388eb07c3879d309dd5e4fb06d26ef
  587dbab85d0dd71fa5ddfff7445c2067fc0409
  ce1c0632df188486ee3f6d5d674893b4fe2d74
.git/objects/c6/
  246d347f2d01755b4de7827848055b693fe2bb
  1e6f2331109c720bacf6c82a53a28e68250002
  428d04206563e13c584e7b587cd40ececf26e0
  2ad631108108a7b25d74c470c89b2ec3db9f53
.git/objects/ec/
  eb9bda266b9bc9968f564be877b967ed2d51f9
  93a9d9d8b63c4383486bd8dbcf2ce9a6def275
  dad054260cfb8e71328f7446f60025b48d5b69
  094833e623ab7f591690fbb68483bcd52ccb26
  2585e8c0bb8188184ed1e0703c4c8f2a8419b0
.git/objects/4e/
  763839f6951ec780a693ffd67ec7c4378ee5e0
  c2d6d5d3e760c5032da105bb0f2f5a17bb01e6
  b40cec2553d8a4abf079175c2f476d57e86530
  fa5ad191dea08e1efc372963c6422829a444bd
.git/objects/20/
  e4c1e704652000f36782896c3cb35f9a61b694
  e4047c9f8d34b2fd1423671411bcd70b1a6cfe
.git/objects/18/
  a0e4e590add46d7c5355c06d91ceb38ecd7835
  2b419553d1b699900c9d9cf7f0f9eb91dbbae3
  420316ea79696f17773ab28f86506a4e1fa151
  c8ed3fb8d00bb309d5a1d9cf8110b8e19b5450
  d4a4907a20b00a0b8f924b6cf8c12bca2e29d7
  e705fec8fed849c52eb6b1195297aaf20b39c7
  e6b88b0ecec5d700d93f4e6ce5ba0886b2fe98
  f08e96b4f6caebbf15afdae48e89d6e9130417
.git/objects/27/
  b9bb26c530ea49b080dea8ac20b03d6bf3afa6
  363af7a4264959d983560a5aea18784e7d2758
  344b8b1ddc075575c1737bb2db3be781a48578
  e17962b7f8f0d7386247fb25ef64e9f74f7d46
.git/objects/4b/
  9ceae6b1445f8e3497142cfa125750cd1bb7ad
  267e56c483255a19b335bf74c3459b46ddef14
  3eaf5ddd322d07405fbd3b221b45b1d4977435
.git/objects/pack/
  pack-c8b69764c29e6d2ad6ab5210e31811c3d1132f58.idx
  pack-c8b69764c29e6d2ad6ab5210e31811c3d1132f58.rev
  pack-c8b69764c29e6d2ad6ab5210e31811c3d1132f58.pack
.git/objects/11/
  c19d6e5a230b1154b58dd8cf46f2c81fe90831
  dae65b2603f57b6e1473b5c7c020015a0742c2
  a17d2827f2129060ab82c474327983dd6ad509
  28d874b93a45055c1d9d39eab62c41c1fa6ae8
  5f948e02b0e0f03b051be9b6f8375f78c64b1e
  353b1fab89c2055f214fb566d78c71ac094951
  5b59c378ecde2480e22478b98051f9e3148065
  d64d0dcc7033d861606b3939e1f4a685c64e1e
.git/objects/7d/
  282a59cd165c8bd0e03355a1fcce5a785051fc
  3137622b1783189dfc2fa14329efe4a939ca51
.git/objects/29/
  21cbfc95208d6bd3cf13f7c552b15964f13f8b
  0d0ae3ea1c9a0a834916b6e493c9c3536570d7
  cbb47edce7a7949fcde6b4edd89f831867a2c5
.git/objects/7c/
  8e07bb811125f1465f275b7ef70957c9a546a2
  0d87e1a944564c6e9c418a066c1ee2a6692681
  0b53b6f2efc6a9a69fb4cb570314fe48f54abb
.git/objects/16/
  2fc7926badda7aa9eda33ccf1d41d2b2a39238
  dcad625a29eef58aaa7281d8fe1237ab24d82d
  ddc57f87e1f45b359c33da0192c53538e817d9
  d1e7feefbb5e8ac429b8823a44492eac186330
  b5cc27d8f5836aa2ed3234cbccc3e7f39a25ee
  1b4098709c33623a4928626af9b12542f96987
.git/objects/42/
  5a798c09e489858a4d477b33b181df436e3170
.git/objects/89/
  0eb2f56b1bb9eef788d9d0e73d4ab1f23914d9
  a516a69a00c323ed4570912c8276e4b33a8764
.git/objects/45/
  8614e29f1a2431e73e6a374c94129af9e5cc21
.git/objects/1f/
  f079d35fb18ebcb1e16ae22d7ae8325b38125b
  03afeece5ac28064fa3c73a29215037465f789
  82f2bea0556db5c9f62bd9146f3f1a6931c023
.git/objects/73/
  9b360f62523e7ab8896ed8f703cd5b265d7550
  6ef96d38e6e3b889651e524d9676afc020e634
  b7ac7dfaed77ac696efa7d31bb4b42fd967c7f
  5b5c4f7ab62a0302ed445ac350dc5932d579da
  481325a7ba8882ac2a5a74d841792b17eb1acb
.git/objects/87/
  096dc6787286485f73b3752a003a81f9207664
  278a0af1560975a221a5087dbb045360d9fd53
  cd496705299a951337c78972530e5173dfd74c
  65e3b6acd1f958dda0d6dd2244b767bdaaa6ed
  b79b38ab8efd67efb06ee014f251ffd5665303
  911fdfc48a9017cbcca447fceb6a1a950d9d44
  28d40fd6e65c61d137d1e228c2c7babada4235
.git/objects/80/
  05478fac19d8b726dcf195b8a18bf245be6289
  74db2e96d59078d40f2ae1ad84561025ab1ca7
  a4d18784467f0b0fd1a462196e37e6c526062b
  3934cf222273a445bb3ac8b58cac72d1eedd49
.git/objects/74/
  c849c90153348f4df7eeb526f1b026bc0d271d
  8617a42694fdb4504236d244c3ddfb7c044776
  876864dd3cd9bc3870480bd18f83f05e5e67a7
  9ce37891138af0108163bae4a6d31c5e6930a3
  ce87075df2531773341dc827c5b59cd3c89aac
  16c1fba495122810b6b2b54e75791f271de65a
.git/objects/1a/
  93af45fe697ed687fbce48ffe5aa20e2d100d9
  4899d0fd7d0aeeea9517160accd7fdc476d8c9
.git/objects/28/
  5e125a10ddd82efcb6fd6fc8c73f4c028ffdc9
  674136486cdc116eccce5ad70856606801a56b
  6b47e203cd4ec21bc26ea850b18e464a66a20d
  5a79786dd67d23abc96bef7c33797e3646d78b
  e76e0bac06e62566d0d1bc81dcd27fdd3b5709
  5e3c30e7d8d33893684b98656a6a053a3134ee
  56966a590f583a75892737e0b500ee3f116e63
.git/objects/17/
  950963e6f74c62ed3dc6243f5f459529afe4fa
  8ad583c20d796a027a1f47ba1f80354521dacc
  0e1a988c13ed31417bfcf48eb56e26a8d15fe5
  42494255e5036852d8e2d77ffb98353642c6fb
.git/objects/7b/
  dd28df27caf3ce57da6fdfc48c8bbc319b3474
  400f17f43df1ba4c8d7a2eb465822827bcec80
  81b9880eac42f19ce3342d1ab0411754d764e5
  048d571d2b57bf887bab3b5a287889e7734ed6
.git/objects/8f/
  dc8e84ff78bd019948fc7c99696494375c3ee8
  f736c3b8482587c4e0d07beb2573413d296de5
  e85cbe3494dda55943f3ef1ee37a65d53e0eae
  2609b7b3e0e3897ab3bcaad13caf6876e48699
.git/objects/8a/
  a3f9d6723a4faced13d9d7e9d809e590810027
  9f3cc277a274af13958cf8927e03b1826e1125
.git/objects/7e/
  9ad10878ddfb49456c14783283020b5da176fe
  91aa4dd8774222a2a295878bdc46410f98fb4b
.git/objects/10/
  cf23fd4abbac08ab4243666c0304f8bdd85cd0
  ddd941c337b94c694a5e596a8d36670b7433db
.git/objects/19/
  43b430ec7ee5c19287fa4ad5b6dae0434e4eb1
.git/objects/4c/
  e89e68dc369f66d016f6ea249922dceee14cd8
  abf2aacb723d7b2f866c84d8662872121c9a68
  a6d949958aad8bdd1eebecd5efe269fdb3a0d9
  0f4b898c419493ea0702fa0566867b249b03f7
.git/objects/26/
  5d32a89af09ccb0974bbbabb1884fb26e61d32
  f41c719028068e76b5424db1093ceb541f465e
  7c6181ebd817a00536fbda0955b3a376b7a503
.git/objects/21/
  94b700930fdf3d28ee671407c7595f367562cf
  8b094c0f0a5f6af09f31659644272b292bb700
  d4930b8e5bfeaa0565c60465396e90469b5637
.git/objects/4d/
  da1d2d21a501b7e9fb0508bf41fada55df0f38
  5269a874c7518b50a3c60c08333d4413479330
  ab27c3703952aff651b81378edb8304eb34442
.git/objects/75/
  c6d44c7e7f3f9b03949e6672a2f3a4354f061a
  fe1cda217b6e7ec615cc2d3bc742fd70786114
  a1cb88246759b8c6e6340d4421cd6aab0ee5c8
  56ad9bec2865179900b4d59a6ce326035ae513
  5cfba80e2654bfebb413c20c3da61dba04c83e
.git/objects/81/
  6be8a17f115063591fb62ca8d5c49c0f81b9c4
  7107fdfa75dbd6d7e7881a6771307f93101c6c
.git/objects/86/
  27be797033166f6cad863d78c4a6f92ab4750b
  6823e8b1173c12110b91c33b2c45d3bb131c7a
  fa1e83a9b5b76f466c1dc26ce2b0016c4f081d
  6895b6447607ef5fae01a1f5c1bb3e66cc90f2
  15c19c95c2460867c4eaec94545334f5d4c778
  119f0fbffb97d9413a304bd61351969c6f4395
.git/objects/72/
  c4f852d5a7203ab1671dcdac1196de48dde1be
  be1874afcaf6526075f30027b5f7148e789147
  76daafbd2147aa1a53f507c1d67d06152a80b2
  685ff6f0f113e6daf0573a21360b8bddf4e5f1
  c22582adcf70e92c655a9a09acd7db7510b533
.git/objects/44/
  7f6c7debed53347254bdb2263b2555ba9dae52
  16b0ca4fa1f7a5dd666f698990327a0176bdb3
  dd4b0ba24796fae131ae6bc8f76d1c80b62b53
.git/objects/2a/
  b7504a5ec0ca7d8c9284cc9b2dcc5af2211f8a
  38a2d99cbfc0a770869380b66b99b17e31c64c
  17b7e88548a3ff22f359d974b8635a12d322b6
  033c80454d3e62f28dd128bbec9470c4dd7ca2
  ad244f40625c03cf8e838ea56d29ad138d64d9
.git/objects/2f/
  fdc7e9bbf7adb6f524fea48dba8b6f12ae3026
  a6d149176e2d902595ec58f984d680a8c745a5
  f711de29680b4830174124449afa0f071145bb
.git/objects/43/
  6992e98fcc2ecc72a3229b20a514ee900a1751
  05cf91b864fc275b0c36f9260ffe7a0dc4e55f
.git/objects/88/
  c3460688f6538add28edf1942ddd114748c996
  01f8175f427f477a8e68fd6ddd54f39bcd48aa
  8b85068fe034faf0b3c9fc4953c7531377f101
  750a8905bb16f75069be7afba959f2102bb972
  a3d5cb99586b06cb593754f02bf5bcb9eb9595
  818dde68bff011c130ec465e9576f013d8afe3
.git/objects/9f/
  4de2cee6135a59ed7c9533eb6ce6889f4c1ac5
  3382cb5bfaa034574fe6e2157c6fb811a5c689
.git/objects/6b/
  bb069536537fc4f07c2080b862262720995612
  eae1dd76e36f9fc7f547d94a8f226d00708bf5
  57b748072ff3f44f11ffcb221f0b0d1e66c16a
.git/objects/07/
  7ad25941c90e6445028cac7d745d8225ac9155
  42c6e3905cfaf12a2fa01d3ddff480a52d943a
  d4233efbc13a96552fd8bc88631bb1254898b1
  414639ce15488f2a1c01e22990f513f1964b5d
  37b7b8d7108af893e945134b09ada5f0d836bc
  02752216d74d7425679772d281da37538d9303
.git/objects/38/
  24794d9a78d96e146a6c78f00e1e6140e1de38
  309ecb0c23275d6dde44ff9eede5d12a7ef23c
  a5961d8642471470115fa7590036ab98451bd3
  ec3d80e4614a9fe49244dd3036919dd86945e3
  aa1fda0bc1a2a8990b8f843d850a62d101b843
  f92264ec22de96565e45015e35d36741a414d0
.git/objects/00/
  8c69eb86c553a0117aa3de8e2cd4d9b1d95f7a
  fb91fab5c802ad45d5d9b076baf725f06b14a2
  d9b0b9c76c3dacd6f5485adcc4408ea3b9828b
.git/objects/6e/
  1d9391565940b24461362da45489bb67efba91
  4fbb7e2363a1fbc5f5c37e5cb0a8577c5d3c59
  4651993c8acb7ae4a1f71f753b4742cf862676
.git/objects/9a/
  6485e9a08a5d198a65418c68f1f7e50497a254
  ab8ead445561f8679e28fe03922c05b1c91ad1
.git/objects/36/
  f87fb87b56f0eb0acf279a7dff61de088071fd
  9bd44f48941674e990dce4009bb582ade6b4a7
  200f43dc0a939fd2863812077fbd4474249f3b
  09bdf9f3147e5c04295f7947a1fee46a7aed66
  27cbf5a2ec65c8e6c0f589497c2d25c6f0c6f4
.git/objects/5c/
  ba64e92ca5f663aa428b30e3ef822428e8f6be
.git/objects/09/
  8a8bf87038bc1c312597937fbe9a9dc7cf5a0a
  1d6bc76925b726e5fb99646bb611a056d04e12
  506889957bc0f21af222ad28d145c9d33a6460
  951d9f8743a65d034616e602995a40a56c5cbd
.git/objects/5d/
  2f06a3146191027d4bddc2c4b8d5bb4a61571b
  9a05b5e8f9f4522e5a57b4ab551e298d541b01
  70fff0be696cfc5cfefa0b361391a5d67d3dd8
.git/objects/31/
  78ab7be299ba0ffeafad490d9eddfc22e86816
  e4688eea5665b956c9983a0e3208c447614e6d
  140f5450ec08b89d28fe28fe1c90205a909600
  01cbba2cc1093eb916c361aa3712cf81239969
  8ba1e38d9685c6366d28dc7ed0aa571d9f74c0
  eade085f0ac95a609423535b9a808c0aba9c40
  d964f057931c4c39b65bb773fb6aeccab4a80e
.git/objects/info/
.git/objects/91/
  c12a7d4f7a829f2be06f9651ad3b462a8b0105
  b7969e8c107b5e4d78d89707e3c1401b1a6f2b
  bd97608ffc622782694b01b88f63144d72e6b0
  76d6d1e8ed60dd7e6a8928ce08cddeb573f253
.git/objects/65/
  9e2e09002c328e3a0e4ba5e20af4de061ab0d7
  4270efb42f3b3c36f1bf31719262a3f23aa2c2
  41465e8e2106b6121522d0bf0419579e5a971f
.git/objects/62/
  5e139fd07fa85df79108f0aa458df1bed9c3b3
  630cda3f23234a6ccb1e375e4355cc9ddbec3f
  a5fc8f50f17c4e18ecff0109d64976805bc091
  a2728a7da5042bf64f609961d2775aeeeebc2d
.git/objects/96/
  0b849cfa0881c5a93c6a2914a042c59b1d2b2f
  a6b40b868bbd93a807e595a547df0779b66ccd
  094740ebd404f65a35a4ee7d3341bebec72c9a
.git/objects/3a/
  8be66cb51f8ecbbb06582cb9f470cb41971520
  38ecb036be64ef0ec527f65e57ecb8515c8a4f
  34f2403d06e0dcb37f955404a7f3b4daa01f76
  2901689f281640d0097a13cdf3b5a186dbd704
  b0960c49a0fc55a436ed21fc4499afa598b0d2
  ab51fc8845b52d10bf49ceb22b740afa7fc39b
  6df74df5758d074bff4bd0d7b1019c4b5b2b9c
.git/objects/54/
  22ce098e2b039ed37ec3939739387d3ee609f5
  33cbc04269c30911a9c1b70a07ecd60b7b2b9b
  dd88e122ef311ecec72c9e6c286bb06e4162d8
  cc333aaaa726e37c6bf9df879bd13a56fa710d
  28e335abb1e9f9f5e938b5c4c65709a2bed2f6
.git/objects/98/
  e10c60763488d5ec4f61cb0ec9075c0a392325
  5a6f956c3bc7fcb5c4c25d1f8e5fb3e583e9e2
  6f2014df7d7120525abbacc681a04a5f66bf35
  3c219aa2ab67725095cd1371a82a496494892e
  d8aa8b8b1121cfad79aa28789c57a8820a10dd
  3d7c1f6c7ef607a81a82817f838062aebec6e7
  e19fe1721cc33d6d2e46fa11ea1708b4237ac9
.git/objects/53/
  d8314d2cf41078d0e544a0acd571b82c544e12
  c2d3e34912d0d74e5db41a70532d517330f564
  d9157eb7ab50e0e3d548ca83c6e7311a7854aa
  a823d2943dc6b1ecb73e5cfe2b2a00e21352b0
  ba9fc9715dfafb5eef96f9cd5d2503f43549b0
  ac3682501f790a1abe47dadc2a2699204e5428
  8a1e14858429f8f7e1d5567812208c6fd9c7be
  157d9cf51c592f4bf62798a98890e494f62582
.git/objects/3f/
  e7891fffdcba9d0e1356c54ece0c63292c3f3e
  07f1d4fc84c1920f851dec0e036e680916fd7e
.git/objects/30/
  c8e61318099c1658e1e60f742cf90fced54283
  81d57af018debf71f26dcf31ad735d4900ecb5
  bcb658b846da3a62a19c53d41e7331d2facfdf
  ef3e134b651846198f579df9a9ed922b134167
.git/objects/5e/
  78111591116ff4c74921c3ba77b141f2be7504
  9afb91195fd1297af6ffd8ddf98fd10ca6b79c
  bb491b20a79385df941f558dcb8f402b8b7681
.git/objects/5b/
  5606b4bda2c879bad93fb0a5eb2ec91a7928ca
  a2156ceae8b64a7cfe1fba80ba4e070e74ea32
.git/objects/37/
  9d3c9501119ead16e67cab203795da232bdfea
  833f8beb2a38d990931d38228e9481cac2c1f2
  59bda4aa5e10b67116cd9dea9cbffe7e4ca2a1
  aef0fb4744670b170907bdec4eac685049bb2b
  a472633074abfed24aeee17f7327abe23b8033
  c70658d93f35eca732a29f69d2aa292a77e36e
.git/objects/08/
  0d6c77ac21bb2ef88a6992b2b73ad93daaca92
.git/objects/6d/
  166f2be946ddba91c2e2b1d9abef190745fede
  61f869831940f324786d7e7c2ead2062e650a1
  58f3de4887c59f191340189552eccec10aca4a
  d00c360d3b7aeb69846fe9c1315bbb75fa9de3
.git/objects/01/
  b9f81cccb0de91c7fb485dc1b37252adc3eadc
  cc09e96c5c0f5a02d0f970a4a247fcbf585df7
  6a39936a2adbde3cc327f4f7551be490311372
  fe2d89496feae4466d36dd08ab61b2832b2152
  f9666e023e1a469cf8267218feb1a54cafc26b
.git/objects/06/
  8aa30c1246be4c8250860f59c4bfac514e06a8
  fb8d0e027e8dab3651a3f8dd5debc03d2e5cd5
  34f25db182f1a17b2665eb0cbfd17892b8926a
  ff759bbc6964e94eeb2fa63ad97be1638a2b70
  a29fc27ba70d0d2312dad759f32a8aaf388f0e
  c7aab87f74cc496bfaf9079d76d0069e818b10
  742dbb0fda12fa6a947f2d403f2d83990736b8
.git/objects/6c/
  949e31f5488beac7e8919bf8564f021b16dfe8
  a06cd86329ef0155cdc20a146ef03a4db0441c
  73f6020a66911fbef6d7b03a07644754d1ad50
  71f0eab9d4330815a61c6da8ff4640eb1e5523
  6625c72a0dd937718729ca64ccf625bb50394d
  e98892f8e1e30278017e4e03d3d78348c317e1
.git/objects/39/
  99d25ddaf5503343a4ab3cf50dd1fa92757e92
  badd9577eac3890e9ea5ef9262598a16bc84fa
  8163454ab860799b81166bfbc2892bd058f69f
  a610d561ce9e3b07d18a433018f69c1419d49c
  4fb972aca65df5f0a6ec8c9a06bb76ba65d259
.git/objects/99/
  1cb9ce03c8452ad13fcdc874dff73fd2fba544
  2eb0a2303978975262e67676a77a00a98c7b36
  c835f743296168e8977bee77f3bdbbd52e158d
.git/objects/52/
  190aaf84599070bde9bf73e9594d9c033aedc9
  0fae1c8ebc687788ae434681c8e112c8ee19e5
  5e7e4dc6c51546a15a614565cb17cb9c74c06f
  d642b13fee68b46a89620d1a7a01c68648ada5
  8b766fd7a4b7ed7e6d49383f3c2ef767baf30c
  b88d2d922870183d5583b063023277a87bb7f9
  256567bf6fbc387f72923cc724b1747b4e234c
  f56b9663fe28aa4c39e240579bd2c836e3be56
  53d3ad9e6be6690549cb255f5952337b02401d
.git/objects/55/
  e05de8dfc3d4e953e55b60e54100039444bf50
  f73c55be572c5225dc49407cc7a8f99e7dd566
  39a6785802a65abf0606106bf2f2deea0ec707
  e1ca876d27cd8ffcc324caa9d109761e5f3ea1
.git/objects/97/
  e4667c1bf9c0572a66243f36da66146fe477ca
  0fbbc82135c692e8b202ea00c0e25a29b141eb
  8de888b67870b7dc8efe858c31d80b017d5f92
  86c6f91e4d476f8563817aa87c4e1b911dab3c
  a1f731a24d0c19cbc2e3e3f3ee33b154cdb81f
  314a977eda178d47df01c869d9dde8f67f0469
  88c7dd8a01b52968ce523079ca354732d3d398
.git/objects/63/
  5520386255cb6b17c9f47171e085e8970308b2
  ab64bcd0f8d577a7a29597779bb601e4a3eb66
  8b3228b4b451ee701f9a6c2d25899063c173ad
  17c87957ab7ac1eb07b691f83201b235485483
  bc0d4321f79fc6985d2fdbbb37ccd4362d2dfd
.git/objects/0f/
  6e123a824b11bd45046ef886455abf4846a93d
  5df75423a9be70accac2a15667cdf1b3c8d128
.git/objects/0a/
  b98f9d1a485bfd42a84ba9c18a28370a615d57
  85395ab32f06675ffca2766f44bd50e2092a41
  d038b808f953d2ef7609f6021a065ff80c34eb
  aa5d8fb3952649617fc1630acaeae887be156f
  2c4ec79d1ba99a1e3ec9d8e2d7a6c278f7b286
  b99884c5d82bc65ca7deee93622a95ee71dc10
  3287410db44fd8b9b99617a489c6c13c5fccda
  75b2e7a78c2fbda9158b230a09bd934b979710
.git/objects/64/
  4271bda4bba1b39159252bfc800606c0bf11c5
  9fb5a662b4ea027f4aa7a8b6e932e59e186d21
  90fa8c3e1c1280e506c57e3199d1667b38208a
  f7ab23dad3cf78ade2a4294b4f193f4506106f
.git/objects/90/
  9875ad95db944feb13d6d029a37db94622684b
.git/objects/bf/
  15e07da66f77d22b3742a32c6c0187f3680415
  0d5c31d11d58e75ade63cc1ac96a2c5acfbe02
  fa0d1ca7ba2dfdb53bed9fa20b8fa15e0d4407
.git/objects/d3/
  30eece278bd1b5c305f2a555b8c3f8db91d388
  430c34a1c0b311efb15f390ddf217ff2873b3b
  8bb2409411fb110bfda29da7cfdedc143cf812
  95bb62ae190946e05c6419bd6af53889b4442a
  2698284c021a45abd5824274ec0abcf4b67270
  45f2df8bb4e31ab7c660b69311f89f02581cbb
  88a2e1ea23ce56146666ea899b5a8b6cb779a4
.git/objects/d4/
  adcc0f65a99296ec957a17dcc01bfacd8ed4b9
  86eabefb86f10e45a2f5948ad36f1523255d42
  c9a45c71ec883a2ce1c0444402871bc1d83019
.git/objects/ba/
  32ce9bc846a445af6235ef3d8b45a06c0ed049
  926ccd7b34e036b381563f7cdad29e6e14bb21
  fcf0f0596ffe36aed946046b3c34c3de0b6935
  abf2ab7d0f11723e0446ed7e1572ebbca2d3af
.git/objects/a0/
  82d6eb16e4528ff97cc75a56d8dc2dfe114df7
  23889c7e7ff2bac0c14776f70b07cffee92ade
  19dc1bb95d011d8be8b44019036859ae3a2b9d
  c2ccf257559cbf9c07f167b55f2c357f67b02d
.git/objects/a7/
  a6322bd266a44ede40d7b463e91b6e2007dcdd
  69269c6e5583bbdc3a33c590365c3d86a41607
  92ec725a02a031d263b0160ea59837561ea04d
  ce70e332c02b0178a78819acebcf66bc36c73e
.git/objects/b8/
  97681d70509de126d4c4df085dfd0950b2aee1
  3e57b36817c85635d0f5a11797fa4b110157e7
  27b49814a57280d4065f15b68ecbda0c333e71
  b30551f0f0e195860c0362c78f7513dfa5c6de
.git/objects/b1/
  5a0d31db80244d1dc9290520837f1ceabdb2d8
  d4adf89f6d15f26850095e8398b277b4a6bd77
.git/objects/dd/
  b9ba7321ba0b8f9839dc7d39537816d687fefb
  1026744f0420cf62f0dcbe7fc438c7131e8a7b
  1265cb389ac1b6edbf6c3c95e969e95c4b57aa
  be26cd8f72c1113299ae9a35355b7924c89360
.git/objects/dc/
  86331a47401eaf42819ae91f05808486f66ebc
  6b3c018a1a824a716399477e9e85cbb27f9223
  bdc73bb15180d00070ccf6943fd770e8a8207f
.git/objects/b6/
  618dbbae8589ba1c23cbed2652cfd7840e510c
  9b0da2650e172d9e0effe9391dcd9a9ddf9359
  568b18435a159680fdf9c030dd3720d734f635
.git/objects/a9/
  2551e95d98705fba7942733d98dcc8241626ef
  07138e8ee6fc64368551b2c8d1dc717d6fa2d2
  b0a3def9e5c8a04b9e855744ee74045f4fd048
  7454f006738bd30fe6543458c5809c5b9ce4bc
  b241c352f203b810b4e75ed4393472c781a4ee
  2f28b4b2fab340b7b54112c332518f3f0f99b6
.git/objects/d5/
  cea83b29464ea7eab3aa53cae1d80ddd70b1ce
  f2d10e74b2e7b1e5eee1b9cad34464341115a6
  32db1efa2f61f1ca4d06d40036ec376d22411d
  c78bd06afbb5046ed5a23aec0211e82a1afa01
  3222e843e80c82fcf42e36a0fca9790409586e
  ba34298d7ac8b4bf5a20deea941f2a0833603e
  236f80929167deab227bb4aa7aaeadc4e7dacb
  19d79a36ec57b5b0b4bc1ac64c61e10247edf6
  63c0fb10ba0e42724b21286eb546ee4e5734fc
  abdc06692636721e47f0bc247ddef1ac40a093
.git/objects/d2/
  26fb7180c7bf5ec6d7c6350fc8971de93668d7
  811434cddcdc30ae525eb09c5c6013465154ac
  62df0ef440f03a051fdbca84c733cf7a278932
.git/objects/aa/
  069f27cbd9d53394428171c3989fd03db73c76
  b3c6b58f5727e3a14d462cf1a2e8872fa25b61
  7fef8417abcdd15ae4de48ba31a96642162403
  80141d544eb3a2afb0a4e7ceab5f7e71b38824
  e3201511ad33b90a2daedbdcfa62544134f440
  8755282345ad6525361dbc1df0f860ba6135ac
  8cb5b41e1c588f18314a38e2cd33ba1a233ea8
  a7dc510f1d2a4e3478c37ea1bee78d20aaf7f5
.git/objects/af/
  910100a92eb8519759bcded9587bc8852bc13e
  b4e917c38ecd072df90d87b5c56fb5e879fe81
  8a67446629a78211913018333bef220960ee8c
  d398cf6bc608730d05f6c8e55f2f93abeb523a
  95ce456aee66d61844fbd1a79f6071e5415754
.git/objects/b7/
  e0318018f4efeade5b74eb49c247de13fb0e6e
  188d529f7c3fcb0d343250628a915488883eba
  a77da075580af6137b471fd94485bc1061f476
  f7ae8b5a22bcbabe71044ca294c106be9ff5cd
  d6c491d64087c56f5e0487546a0e13f4671379
  39baebecd211af9f1c98f8080eccfb4dbab91b
  82708d32e678a36e6120c85edd694857a05a97
.git/objects/db/
  b9a35fbfdc485085aa9543b5c226789416e24d
  4e5cf985c05c7cce7c372d8f97fa830c270bd7
  d6a522ea7862044454836a05e3a766648fcd41
  12372f7ef86452987daddc12c1468c70fde13f
  6f20d99a167816cff4dfb55c25b14a2d2a9f8a
.git/objects/a8/
  660dcbd58d51f02813524d8f232240fc867490
  dec3f352b89356bfb113dbeba6aa6fac475a03
.git/objects/b0/
  94063756bd2ab065a3b804e5294436a0f07780
  c4149c319b3caf8edc9b8e65f430d50f4517a6
  5b30e325ae99230ab2a0f2d1e34c8fd058229e
  5d83c93e549d2a2f274d8d6095f1524c097383
.git/objects/a6/
  6e04471baaab2029f5399a7ec6fd539ea15aff
  ce5b5d70218c03ed08d8755b22392fc97ce585
  5f473ee32700b4636d9fc077d5dd8cf1d7ec5e
  36d15e52c4753783df05d1c6f60b440cbfd14f
  54606c03bfde882a36e1b6b37bf0f58d2d5ad2
.git/objects/b9/
  0f0b906406dab283c41443fdf4bec765b292ac
  363d6e48837292410105e397db08d2883873e2
  0256cff2f933358f353f75ed4ab829f96c537f
  aa1fe6d2a7d2bdfc7a08053971464bc836f222
  48888c95c2c5970c89a739796e8a0d5adc01ab
  4e4d83edd9cbe8649a32c611316cf3b6cb01ff
  db5852f76864f615348a89b31bf9bd68e29f04
.git/objects/a1/
  6879eee7e25ce15a656b6e979bd300efd33e16
  f73ac2b64783345787c74a622d174d20f53b63
.git/objects/ef/
  bdf0b23d4c99befe177cc4abbbad79a8c011fb
  40771dd6ab4eb403b82e7ae2921b95a5f50dca
  9def8079e670494e0e673236c02eded9b540fd
  a8cf3d44813d70595756b71c57ae7c89f8b823
  fb8fad5bb5e533465e79d48d5706ba1e03403c
.git/objects/c3/
  81fbd7f8c37614a42acb44f04205ba6ba62fff
  23eefbc74c3d565c141b08ed1efeeccb9f8495
  51936e3745e8e41d49bcef2dd40d54ab3b69ca
  75e534562c2dc2495d53b04141a57aa310f6f1
  b8aa53f3c007c69a8030e356bb3fb2f568873e
  f569b9e532b7bef4586e51025e2e85c97c980c
  72ed219b64442356e77b182959322332a29dbc
.git/objects/c4/
  17eeaf8ff4183c6ca64d51c3b46c5e5f11412c
  38173f1addc7ef962f39b50065bb99c25700f8
.git/objects/ea/
  a6cb07efb1f248fc3e5e120648a474d1cb3441
  aa7b12de0f86d02b4f7d5a0ecf9e1f0f7e7c8e
  967c2480367282eb4cb495dc6fd631137b7caf
  9e056c23d052980ccf4e91cb9091fdf0549408
  ff9397d9ecb36282ec536548be14c0afeac66a
.git/objects/e1/
  dd6864112a6859af34f9313205168d10b5aa30
  2a091c99728db19245302356624e213548db1c
  7beaedf59a6b1d30291c1928ed48b370f3fcdb
  ed7a97cc54ba6417e42c94058eaaf8a18fe28c
.git/objects/cd/
  65547ff5b850fff81e5df4e697546b2c46523a
  aa9d94aeb7e867fa70e581fa08e4b210ac4a90
  b2ee6b5aea0e676479a74e5fa564fb50b0cbe4
.git/objects/cc/
  627a4810b032514206a7a91741e5170ae2ea4a
  afa055c7f5e5b00109704f7d777f309bdc39cb
  315cab296e495ae84ea8d2554dada48e988fcd
  7c3705cebb79a41dfa3428f4983ff1f6555bae
  7511ad10adb5cf9fc05d91eb8896e628dac520
.git/objects/e6/
  9b31bd5e9d7758fc7f5f3fce0a27ecf518a3f7
  92215deae2117bc3ed359d6bdf5b70db72b0e1
  dacbe2f59d673706c48926d8d911991d811401
  cc7ac38908ccfc09f3822f1b05728c7d0c643d
.git/objects/f9/
  4a8b5ad6dcae20152c17820359d79aab76456a
  a55a4e2f3955c3de7a8e29f014a30d2dea74a8
  f2b1b9dfffe1ab63450707dc6226cbaea7fae6
  d4a24873dcdb4da1907eac52366c6a9246b7e3
.git/objects/f0/
  ae6239a5b6e18483a5ab9c03e7e8851d99bba6
  eb1da1bd4601738bd5b09ce802d3378521c56d
.git/objects/f7/
  851d0fe6610ba8f87cadaa3acd2c0a789a22a4
  378c723495bbd8b0597bf0c22ceca79f242226
  e9b76f14fd8e7c9099541146a8d28c192ff4cc
  c89f3384d80fec809dc1818339cbe36e9e1d57
  d29ae63a5f670da8bd6d254afbb4122d660aff
.git/objects/e8/
  637d2a7b20a1b789c330d75fd732298d80e99a
  d96e63c9fcdc08792314bc20960f8ac4fcf172
  66af8330c7fecaf0146492ac40fdec6b3def43
  bde7b6f6d100dbf972dde85d53636004e152f8
  ba44e28f6f28017bb78fff7b8a97ef7960cb2d
  b5b38385f29c3e6a06c4d368abffa95e45f2e0
.git/objects/fa/
  da14573f229dd17e4e6b0ea7ebfc4c8c79c78a
  90655fcab19e7e040ee18993dd6b472cb13704
  84fcb66bca960e1afda9e091b28164633e711f
  e887c4674c48fa16b1474555d246558bd20628
.git/objects/ff/
  5ba3631d27174d1b14dd29129d9f20189f8228
  e46be96bea492fde089929b6e5f5ffdd007f54
  950d588344403d198c72cd4c2e6e2afff66bef
.git/objects/c5/
  9935bd483c3bd51e0e94814589d2a2b6d2e827
  34089509e1f9f1b6e2eb5fd5ddfb8552bfd87a
  87f4530eb79efcbd6c95b00de172a604196de3
  b71dd8be4309162daa54d3ea0164535a494041
.git/objects/c2/
  4d1b4852410bf5db614fb3a5118834c2f3519a
  285ab7de8075d2a4e94c1e233ff11be23ba357
.git/objects/f6/
  c232221554a95d8069e4baf642d1e08767df6f
  9bb1f5c6914abc23931fa02c5b41bbd9068a73
  652caa46578bc2de6ed86bfb23b093ec723a59
  8aab404a0ee8361de1be5c63c361b6c138c61a
  9c800c8ca175f9a6ad125dd87079bd4d41463c
.git/objects/e9/
  48756e70b27e7c0bdc181de9527f335d2a4390
  524487af213cf4bbea9881cb720a3a886bc27f
  93d1720405b87139fd5fff3da8571ed76479c2
  6f37f10f28eb5523262028f1eaf0bec335f631
.git/objects/f1/
  c5ab8e2a05f38680530814c04a196f3db73034
  94b8c1b7ef0bc8cf2310dd17d87551232e890f
.git/objects/e7/
  9a54bce1c1e19617e4261441a0dae433a75375
  65936ac7a32268345af1d4538da8ba1d832066
  585a12f508741709c2652256c7fc5429576812
  84864528b91653299387c1f5fe6f14d23ade54
  b79e4b405e20b4d1659498fa2e78d0abb19e74
  3f3806a0c36c3115955821f3c9cc888b221687
  29449c2cf6d09e8d95816328589ab314db63b2
  3cfbc1c9e86987a5efa0328ef3bbdce8d7151c
  2050591542c55b3ec68263c69412574fcc80d0
.git/objects/cb/
  80fe3816234e2669f4343e481e2a152ed52392
  e70e92508196cee8de03772899337b5dfdb053
  0d9409b1a6f055231f96ca0b8edde336f36157
.git/objects/f8/
  411df4cb73dc80aa79f5ed667888defb74e64f
  c19295241301308eb0970076a4f9ab612f2937
  63a872e98341db46852b28bb9243b3ed092156
  6e058d8dbca124af7fc5d793221d638ac934ba
.git/objects/ce/
  335e608451cb610f9420a36e44d69a8766848c
  3a7a1c05c07785f34eae504c78c0a26fb1696d
  197ce2b2c196459189e71e3883403a91e83b61
  7ede8d42e18515b03273003057a103e0b6d9ec
  31d431d7cea5f87f87cd5bcac5e371192e2909
.git/objects/e0/
  0e287357514523df5168cd76d3c963eaf6754e
  8bbc3da690c7654f550514a4f01040e9eee57e
  8e4111cfe04fda5e3126dff56f335eb28b6e5e
  5bc40228177447f45705d7e0c8255077042aae
  9dc03a98a07051b38492a1e7c3f0ba6a9d2bae
  662348b08fe6ac8d693f5fb1254338a834e060
  1638c7c9d2dddf7229f6f1249d52dcf4b111ee
  f2ecd5b011af41d9f5ad29eb91b0d552448f1f
  6ca7aaddb19e3fe6bfda64be0c0093dcdcfb6f
.git/objects/46/
  49b0aa7214f62f3531202a544dbf2f7a856dcf
  a734d168e5913c61d7973fb1f452a880f45096
  327526640f81d5863e5744f06d01438f176041
.git/objects/2c/
  2b726ebdcc889a43208334702f1dbaa4bcd161
  3f3d9d4c63da15f5ac7e576b966a7f6ed75c2a
.git/objects/79/
  c22e906610bbc61193a9beff20e9060af086b1
  f6fdd003722590e374f95097b1398032862c1b
  723c4043767c6104fbb979765b8e47ef1afdfb
  c12f54a65037913c0d402152a8322340f11486
  0213e27d1b6259b509bfdabf7fe4ff368c86cb
  60b37b2bd3fe7f0dff68ca0ecb1b08cbab3c0c
.git/objects/2d/
  c1d2c422bc3cfe2ee6011cbafba922951ebb14
  eb2af202a4ce567007b01478cce6aa0c385a89
  fe405ecc2131f1680504eafb4d9495bc7188fd
  254d5ddec5ba0eed16053d1e7281744aba6190
.git/objects/41/
  0ec0f4340c18f75b9aa8371fdc9ccfa77fb319
  f11615b7a360d1fbe6d4bfa028c340ed784622
  8f50cdf3ce834098cc544258d3260edbdef53e
  88ea3e758a8f6d74e768ee28ec582ab2dbf307
  a640c2eae9dd3f5b2f432cbc83104bd482372e
  c87f96e12db1bdc258330d6d6e1686133ad6eb
  90821302a3a9e3cdb6496be4af60027c67fb82
.git/objects/83/
  0d8679f72a12eb90b2bd7457035bef30cc470b
  74278870aa3bffa5e1ebc56fdce343d7ba21af
.git/objects/1b/
  da451d0964a548a95b492d9b9009343bb78f4e
  38a42206aa5387c38ccdf739db8ee2c69b7b53
  6f9d53d1f9150c77203b67875f05942f169204
  38c174775a1e6cf7a1ac031a7442383726c78a
  c14bf1e83928c512992dc70c2184db5ae23f65
.git/objects/77/
  2dc8468ede0d2c46168d729a9489f487d8fa57
  7116676d6782e61d46d1a723668e750c2ef6b3
  3a6f4b19a34964ee6346862cb42f063effb718
  fd162bd37b3d58539f77491f97364cfe346f86
  c34490ef55a25af8cfe89ad9bfb4be1e9be7b1
  1b91d206c7b9e94aac070891329686a39fcfa5
  7835ea02c012b016da6ece090281cdd79b49be
  f4fc3d75f963debd8a0101444b3029f158b294
.git/objects/48/
  db5d649c563760aae7aa6fb407db052f98c9a0
  63b2761ed5f038ea553912492b848e2de88e6d
  dfa97752640e8054831a8a644e7b09d03c8d42
  b897e06381c0569fb6f448b2f657afa3ee2e52
  5087296db500f9ae1c56f283b75204f92ff0a6
  7019bdde73785cc62051ec0e701ad381d5698a
.git/objects/70/
  b409820e0d7fb56fba5c30df52f0d94a9f7732
  f951b8c916dc321e83e29adedee9f841672402
  d39ba4d86b69d724b5e5a4b3afa8e95f53439a
.git/objects/1e/
  52394f182d5f18dea0d1c37e961b7a789d7b56
  bc9039d82e000ceccce2dd5391db00b5562d59
  0ea23bd80090532563bb1c0efc712cfe8546f9
  8b64ac0e4d12a56e7edf8bc2f5778efbda7a12
.git/objects/84/
  e3f4850069a52dac5a5ad0d4365dd9cb1c7437
  5f9e4922d379908e0cd9f9073ead69d47c675c
.git/objects/4a/
  b2ff6a4f10d80e1f2525b2140f5faa42a6be39
  8ae0bd5378e7d0070cf40e848e318c99485f29
.git/objects/24/
  a42877fa310ffec5193d07a4d4ef5bee6fca2e
  b12f5031d57868a32948448798d83ee05cad1d
  66cdee4bbdadaae4e70ebc21da33fb06c0043b
.git/objects/23/
  366c283c216ffb1a7a047009ad8c3db2665bb6
  80f3b1e6e7769051164792d4c82984b881884d
  b528b2510478cec88c9f2b8522c0576f6b9073
  fba57e508e3a5b1ca5e31cfbb1dc0d64106dfc
  78e48cb8e36584b0a018a67de4c476aed5a6b2
  9d82ad8f2e0c00883d248bf922a4018de52673
  a48a01957ae46cf3062fe16383665b16a589f2
  c24b90a1822360e1319e3dedd51fe4cdda334b
  dfad8b944810a62a3dfc26ae145cea798a19e1
  1b5f106fd8cc3c00425ddf9aee79c22719a705
  a3a7373c5c7b6809716c9dfb135bba37023f36
  37296380d3cfaee514fcefb3eba8b1bfee56a2
  09e4e7915b55c4b6aa5dcaff2e3ff5e4044c87
.git/objects/4f/
  8c100591a7fb43900b5fe3d2717e1cd950ebf2
  d82168f148ab6515941ad8266030276b356a21
  00b684c19b9b89cdf58c1d0efbeb646bd8942c
  c443d1eecc7c71b6ba7305177d1a437585e5f7
.git/objects/8d/
  0f147ee2ab18601fe8a19a31676ff8739b94cb
  debbc04af600ab86ac32eb911999f2929f10cc
  56a6793f69eea692c5fb2be6c558013a27d6a3
  4bd539542a3e31fed682ea4e83521a06b7bf87
.git/objects/15/
  fe7b8b3f5f673d0a1c407a15b5d454b444392e
  e3ad36b1b76e88dca31b34b76d9255b8e4a08e
  2572897547d3f866c56376a1e9096a8cc0b04d
.git/objects/12/
  0b5c7533ede85a8ba1fad8a558b7773cd8ff31
  d9d9fe79185a2b1e9e30f9f4feec1e9a863fb9
  56f839dd9ba4a8aa62059aee49301e5cfe3838
  939ab2b345f68971734bd878aee37693bdbdb9
.git/objects/8c/
  320358d880105b9862f20ff2a9cae3f6421b91
  acc46da619474a080f7eb2b78fe6c0079dab9e
  1f47e6540cf1c811ef28b75ce5831889bc7418
  cf992d0ca53b1f55cddd25c75409faa7f63dbf
.git/objects/85/
  5fa1b7ff29de25de901b212d2d08f089826ad3
  62b37dd26bbd5f5b4c28c52fb15ff6b092358e
.git/objects/1d/
  55e334065eecbcfcae6969d57a9f330212b71c
  c3768e43c370865934bd4c6ce70e332c5d0fb4
  cbd60d5eaf445b25082b68da41e576072059a2
  1f64a87c2e79665a46b0cae87f25b393dfa5f8
.git/objects/71/
  ea9783eba1620b243d957e43213606486eb6e5
  078e32cd7254a4b3c4653b2cb71413e4d2f652
  e79545922bfde1aded905d414bc2420aade41f
  3ca26ee15192fa206a7d8f00e3c4a2d7dde566
  b0d32b489f734a663cad1b96f60bd95089e879
  6c0503ad25ab8b5edd0972966effeca0cbf5f3
  e1051108d4328a939449150ba23baa65a38836
.git/objects/76/
  5237ca6067cf3b33b22fd642b00ea7cd0dc828
  b0c9b4f1416dd4c85f6b6893bbe58dfcf750fa
  f62a01fbaef6389be79a41e0e4d298cee67003
  cbd4c9bbe14a7937a666dd1c3aadd431b9daa7
  b0c989e22142295fe0846b9d12c9c86566b441
  9890afa136eefd7d663c04142aaffebbaa0c64
  de239c7346b17ab77d938cac5fd267cd40200c
  d567c50cfcaef1e9f324fc6a9c0a8981666c22
.git/objects/1c/
  b61ae7ff3977926e7af32e6c0a6c7e913aae99
  7186f12cb41293c94cef4261e945b4d514a9cd
  a46d2df1f9e94eb2b77ecc6c488de3ac623112
.git/objects/82/
  596e01972e9cc5df3af7979a1395f85ed1f9e1
  82b89418e1b20de6a6c35cbc9db1c630f2bd77
  01079f1324a0105e9e142f20b9ef371b135870
  ba900d84306247bcb47ddf2325186fdbf33bf2
.git/objects/49/
  eda6fc623151282b86b4a7480b1444291067d8
  17fa7236729a0db7568fec8e627ef198ec40ad
  8474ffd7113fc5e37084b08ccc8dbcaff4275b
  570cabda8071e7be651133e7f8d797ed095967
  a589f9384a5287c3d8d9561383f5b1445dc647
.git/objects/40/
  107c975500bf161ad936fd315559108919300d
.git/objects/2e/
  46793ec66dbd732b32d3eb77768d503bcc1eb4
  1430bf9a3b24e232fd517a18d884276736f901
.git/objects/2b/
  41256609a66978d553ce205b7a6712ae00636f
  5eb638ac64690c10673d488d6b71bb2cc81f77
  28b61b99f9a1fc926e76d8074a881c5643f969
.git/objects/47/
  30a0e5495bb61fbd4a6a09ceac3cb2fa33c547
  9c652c28c41211011fc47f81b6791b78bc6f4a
  be5777b0db9c5b783ab3e85845f7065fb2d4fe
  4ef1844cccc77bcb07430ca1d66908e5d09f38
  ef530ef3e1411c645294120f02fcf49daa4d09
  d04e3446cfaa02a354428907f9b933c195c8a5
.git/objects/78/
  7a71dd6e881e0992b427890870e0b3fe723842
  1cd4f04ede0eda007d5364c7248a8691c3c572
  e13b21288bfc9efac185b4a4517e2079e27e53
  110fb2c221912994da13f3b490206c808df5f3
  2233fe773deff55cec4e26ed31cad678e3a99d
  5bc6d50e22328e645dfa15ab8ff41ee8be6dc8
  cc64da8f529f44020b337755e1eae0db07c79d
  ac6ea609584248c0b171a5d8f7a45bbbfdb9eb
  28e7ee65f0c74a6244da44dd4aaa13f1b92398
.git/objects/8b/
  b334935e9ed756f7a569eb8ecdd0cafbcf97f1
  6f2da70e4d7a16e442fb9f75771b3b54f7b230
.git/objects/13/
  61f81a69ab2ab323cf231da388280de350b0ec
  e5d7ab135cb1cf93b1b74e997094e74b432b49
  1dada145ea2c2b67b16fdad22deafc5669f1a6
  1b89ae0c99bb5123540dd0878638632ff15b3e
  a756f83245fe463dc7b21dfcdf00a7a377adc3
  92baf650b55ae0b1ccef9ce10e6a99cd8940b6
.git/objects/7f/
  e845e04b1070bc904e869245aa200a4769fb55
  1d931e4ebc2286d020a862d310e11f9a86a734
.git/objects/14/
  f7aa772e9b90c0301c69e0ca96857e2eb6f5ce
  a25244bd3463c03ba20244818e893e991eb880
  d993a4e091d9147925043cbd902961f15e53e2
  7f4292d60b482ece941e3c94b1b638391f0f36
.git/objects/8e/
  423233338ebf815915c1b4541bb58fb9907d80
  9c169e153ea2641423540895baf18ba27902a7
  c72eaa7c95bf0ae34cb86801ec4e7aaf57e375
  a80557c5dad978d986a0b7c10d7dd21967fdf1
.git/objects/22/
  92ea400b69085ca747935d85011a97c4b15635
  660eaa92c546faaf03cb97a3d658889d7ef4e5
  6de75efd9fb882223e17ec5a8713ae04c59a54
  8fbadbaa5f3a6f6b11ffade2a4b4d74a5bc006
  d97ad1cf803e3fc3afcc3adac5ee5e2f6c9919
  8cf0ac80260ab31607b22fc742da9c143ae9a3
.git/objects/25/
  5dfbd886bd615a933c89c3f031f97f22774dcb
  c8abfbed188a0a87cd925dbfbef8670fc6ec34
.git/info/
  exclude
.git/logs/
  HEAD
.git/logs/refs/
.git/logs/refs/heads/
  DS-28-migrate-RDS-to-S3
  main
.git/logs/refs/remotes/
.git/logs/refs/remotes/origin/
  DS-28-migrate-RDS-to-S3
  HEAD
  main
.git/logs/refs/remotes/origin/dependabot/
.git/logs/refs/remotes/origin/dependabot/pip/
.git/logs/refs/remotes/origin/dependabot/pip/source/
.git/logs/refs/remotes/origin/dependabot/pip/source/amazon-bedrock-samples-main/
.git/logs/refs/remotes/origin/dependabot/pip/source/amazon-bedrock-samples-main/generative-ai-solutions/
.git/logs/refs/remotes/origin/dependabot/pip/source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-vtt-file-processing-and-model-evals/
  pip-4dba54cdaa
.git/hooks/
  commit-msg.sample
  pre-rebase.sample
  sendemail-validate.sample
  pre-commit.sample
  applypatch-msg.sample
  fsmonitor-watchman.sample
  pre-receive.sample
  prepare-commit-msg.sample
  post-update.sample
  pre-merge-commit.sample
  pre-applypatch.sample
  pre-push.sample
  update.sample
  push-to-checkout.sample
.git/refs/
.git/refs/heads/
  DS-28-migrate-RDS-to-S3
  main
.git/refs/tags/
.git/refs/remotes/
.git/refs/remotes/origin/
  DS-28-migrate-RDS-to-S3
  HEAD
  main
.git/refs/remotes/origin/dependabot/
.git/refs/remotes/origin/dependabot/pip/
.git/refs/remotes/origin/dependabot/pip/source/
.git/refs/remotes/origin/dependabot/pip/source/amazon-bedrock-samples-main/
.git/refs/remotes/origin/dependabot/pip/source/amazon-bedrock-samples-main/generative-ai-solutions/
.git/refs/remotes/origin/dependabot/pip/source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-vtt-file-processing-and-model-evals/
  pip-4dba54cdaa
.git/branches/

README Summaries:
root README: Generative AI Application Builder on AWS > **_NOTE:_** If you want to use the solution without any custom changes, navigate to Solution Landing Page and click the "Launch in the AWS Console" in the Deployment options for a 1-click deployment into your AWS Console. The Generative AI Application Builder on AWS solution (GAAB) provides a web-based management dashboard to deploy customizable Generative AI (Gen AI) use cases. This Deployment dashboard allows customers to deploy, experiment with, and ...

source/ui-chat README: Generative AI Application Builder on AWS - WebApp This project is the web interface (UI Application) that provides the front-end experience. The application is based on Reactjs framework and uses components from the AWS Cloudscape Design System Local Configuration Setup To build and run the application locally, the setup requires -   Nodejs 18.x or higher installed Follow the below steps before building the web app for local execution -   The backend infrastructure stacks from `source/infrastruc...

source/ui-deployment README: Generative AI Application Builder on AWS - Deployment Dashboard This project is the web interface (UI Application) that provides the front-end experience. The application is based on Reactjs framework and uses components from the AWS Cloudscape Design System Local Configuration Setup To build and run the application locally, the setup requires -   Nodejs 18.x or higher installed Follow the below steps before building the web app for local execution -   The backend infrastructure stacks from `sou...

source/amazon-bedrock-samples-main README: Amazon Bedrock Samples This repository contains pre-built examples to help customers get started with the Amazon Bedrock service. Contents - Introduction to Bedrock - Learn the basics of the Bedrock service - Prompt Engineering  - Tips for crafting effective prompts - Bedrock Fine-tuning - Fine-tune Bedrock models for your specific use case - Custom Model Import - Import custom models into Bedrock - Generative AI Solutions - Example use cases for generative AI - Knowledge Bases - Build knowledge...

source/amazon-bedrock-samples-main/bedrock-fine-tuning README: Fine Tuning This folder contains examples related to Fine-tuning Bedrock Models Contents Fine-tuning Amazon Titan Image Generator G1 - example code for fine-tuning Amazon Titan Image Generator G1 model Fine-tuning Meta Llama 2 for text summarization - example code for fine-tuning and evaluating a Meta Llama 2 foundation model for text summarization Contributing We welcome community contributions! Please ensure your sample aligns with AWS best practices, and please update the **Contents** section...

source/amazon-bedrock-samples-main/bedrock-fine-tuning/amazon-titan-image-generator README: Amazon Titan Image Generator Model Fine-tuning Overview This repository provides resources and notebooks for fine-tuning the Amazon Titan Image Generator Model with Amazon Bedrock. Amazon Titan lmage Generator is a cutting edge text-to-image model that is able to understand prompts describing multiple objects in various contexts and captures these relevant details in the images it generates. It can perform advanced image editing tasks such as smart cropping, in-painting, and background changes. ...

source/amazon-bedrock-samples-main/bedrock-fine-tuning/meta-llama README: Fine-Tuning Foundation Models with Amazon Bedrock You can customize Foundation Models(FMs) on Bedrock through fine-tuning. We provide examples on how to set up the resources, fine-tune and evaluate the customized model, and clean up the resources after running the examples. Contents - 00_setup.ipynb - Setup for running customization notebooks both for fine-tuning and continued pre-training using Amazon Bedrock. In this notebook, we will create set of roles and an S3 bucket which will be used for...

source/amazon-bedrock-samples-main/function-calling README: Function Calling With function calling, we can provide LLMs with descriptions of tools and functions it can use. An LLM is able to intelligently decide based on user query when and how to use those tools to help answer questions and complete tasks. This repository contains examples and use-cases to get you started with Function Calling on Amazon Bedrock Contents - **Amazon Bedrock Converse API function-calling (tool use) examples** - The Converse or ConverseStream API is a unified structured tex...

source/amazon-bedrock-samples-main/agents-for-bedrock README: Agents for Amazon Bedrock Agents for Amazon Bedrock helps you accelerate the development of GenAI applications by orchestrating multistep tasks. Agents uses the reasoning capability of foundation models (FMs) to break down user-requested tasks into  steps. Agents for Amazon Bedrock can perform the following tasks: - Breakdown user requests into multiple smaller steps - Collect additional information from a user through natural conversation - Decide which APIs to call and provide the necessary pa...

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/product-review-agent README: Custom integration with knowledge base The agent integrates with the knowledge base **without an explicit association** to it. Essentially, based on the function invoked in the function definitions, it can choose to query the vector DB directly by filtering or the knowledge base through both filtering and semantic similarity. This is useful when you want to leverage on the managed knowledge base for data maintenance (create,delete,update of documents in vector database), and exert more control o...

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation README: Insurance Claim Lifecycle Automation Using Agents and Knowledge Bases for Amazon Bedrock --- Content - Overview - Agents and Knowledge Bases Architecture - Cost - Deployment Guide - Testing and Validation - Clean Up Overview You can now use Agents for Amazon Bedrock and Knowledge Bases for Amazon Bedrock to configure specialized agents that seamlessly run actions based on user input and your organization's data. These managed agents play conductor, orchestrating interactions between foundation m...

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/ai-powered-assistant-for-investment-research README: Generative AI and Multi-Modal Agents in AWS: The Key to Unlocking New Value in Financial Markets This file walks you through how to set up the infrastructure and applications, and run the code to create a multi-modal agent using Amazon Bedrock. The blog post provides a detailed discussion of this solution. Technical Achitecture Diagram <img src="images/architecture-diagram.png" width="680"/> Implementation Steps Prerequisites This solution uses Lambda functions, which are serverless, event-drive...

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/text-2-sql-agent README: <h1 align="center">Text to SQL Bedrock Agent</h1> Authors: **Pedram Jahangiri** @jpedram, **Sawyer Hirt** @sawyehir, **Zeek Granston** @zeekg, **Suyin Wang** @suyinwa Reviewer: **Maira Ladeira Tanke** @mttanke Introduction Harnessing the power of natural language processing, the "Text to SQL Bedrock Agent" facilitates the automatic transformation of natural language questions into executable SQL queries. This tool bridges the gap between complex database structures and intuitive human inquiries,...

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/customer-relationship-management-agent README: Customer relationship management (CRM) Bedrock Agent Authors: Sawyer Hirt @sawyehir, Zeek Granston @zeekg, Eashan Kaushik @eashank Reviewer: Maira Ladeira Tanke @mttanke Introduction The Customer Relationship Management (CRM) Bedrock Agent is a conversational AI solution that utilizes natural language processing to facilitate interactions with customer data and management of customer relationships. This agent bridges the gap between complex customer information systems and user-friendly communic...

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/agentsforbedrock-retailagent README: Build a Foundation Model (FM) powered customer service bot with agents for Amazon Bedrock Introduction From enhancing the conversational experience to agent assistance, there are a plenty of ways that generative AI and foundation models (FMs) can help deliver faster, better support. With the increasing availability and diversity of FMs, it is difficult to experiment and keep up-to-date with the latest model versions. Amazon Bedrock is a fully managed service that offers a choice of high-performi...

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/hr-assistant README: HR Assistant Using Titan Text Premier with Agents and Knowledge Bases for Amazon Bedrock --- Authors: Anupam Dewan @dewanup, Jie Lie @liaji, Han Liu @haliuz Reviewer: Maira Ladeira Tanke @mttanke Content - Overview - Agents and Knowledge Bases Architecture - Deployment Guide - Test Conversation - Clean Up Overview Amazon Titan Text Premier is the latest addition to the Titan family of Large Language Models. It is a high-performing, cost effective and model engineered to deliver superior performa...

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/text-2-sql-agent-cdk-enhanced README: Text to SQL Bedrock Agent CDK Enhanced Authors: - **Pedram Jahangiri** @iut62elec Reviewer: - **Maira Ladeira Tanke** @mttanke Introduction Harnessing the power of natural language processing, the "Text to SQL Bedrock Agent" facilitates the automatic transformation of natural language questions into executable SQL queries. This tool bridges the gap between complex database structures and intuitive human inquiries, enabling users to effortlessly extract insights from data using simple English pro...

source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples README: Agents for Amazon Bedrock - Features examples In this folder we provide you example implementations for the main Agents for Amazon Bedrock functionality: 1. Create Agent with Function Definition: Example of how to create an HR assistant agent defining the Action Group function and parameters as JSON object that is associated with the Action Group invocation. It connects with an AWS Lambda function to execute the actions 1. Create Agent with API Schema: Example of how to create an Insurance Claim...

source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/06-prompt-and-session-attributes README: Prompt and Session Attributes In this folder, we provide an example of an HR agent using Agents for Amazon Bedrock with prompt and session attributes. For greater control of session context, you can modify the SessionState object in your agent. The SessionState object contains two types of attributes that you can use to provide conversational context for the agent during user conversations. * sessionAttributes – Attributes that persist over a session between a user and agent. All InvokeAgent req...

source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/07-advanced-prompts-and-custom-parsers README: Advanced Prompts and Custom Lambda Parsers In this folder, we provide an example of an HR agent using Agents for Amazon Bedrock new advanced prompt and custom lambda parser capabilities. Agents in Amazon Bedrock take a sequence of steps to process a user query: Pre-processing, Orchestration, Knowledge base response generation, and Post-processing. For each step in the sequence Prompt templates are the basis for creating prompts to be provided to the FM. Agents for Amazon Bedrock exposes the defa...

source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/02-create-agent-with-api-schema README: Create Agents with API Schema In this folder, we provide an example agent using Agents for Amazon Bedrock integration with API Schema and Lambda functions. When creating Agent’s action groups, you can define actions by providing the function details or passing an API Schema. When providing the API Schema, you can define actions more explicitly and map them to API operations in your system. This option requires your API schema file to have the OpenAPI format. You add the API schema to the action ...

source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/03-create-agent-with-return-of-control README: Create Agents with Return of Control (Function Calling) In this folder, we provide an example of an HR agent using Agents for Amazon Bedrock new capabilities for function definition and return of control for function calling. Return of control for function calling allows developers to define an action schema and get the control back whenever the agent invokes the action. This provides developers more options to implement business logic in addition to the already available Lambda approach. Furthe...

source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/05-create-agent-with-knowledge-base-and-action-group README: Creating Agent with Knowledge Base and an Action Group connection In this folder, we provide an example of creating an agent with Amazon Bedrock and integrating it with a Knowledge Base for Amazon Bedrock and with an Action Group. With this integration, the agent will be able to respond to a user query by taking a sequence of actions, consulting the knowledge base to obtain more information, and/or executing tasks using the lambda function connected with an Action Group. Agent Architecture In th...

source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/04-create-agent-with-single-knowledge-base README: Creating Agent with a Single Knowledge Base In this folder, we provide an example of creating an agent with Amazon Bedrock and integrating it with Knowledge Bases for Amazon Bedrock. With this integration, the agent will be able to respond to a user query by taking a sequence of actions, consulting the knowledge base to obtain more information, and finally responding to the user with an answer. !Agents with Knowledge Bases for Amazon Bedrock In this notebook you will learn how to create an Amazo...

source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/10-create-agent-with-memory README: Create Agents with memory In this folder, we provide an example of travel agent using Agents for Amazon Bedrock new capabilities for memory. When creating you agent, you can enable the memory capabilities using the `memoryConfiguration` parameter. You can then invoke you agent with a `memoryId` to track sessions and summarize them to your memory. In this example we will create a test agent with the following architecture: !Agent architecture The code below shows how to configure the memory capab...

source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/09-fine-grained-access-permissions README: Designing secure generative AI Application workflows with Amazon Verified Permissions and Agents for Bedrock Link AWS Blog: https://aws.amazon.com/blogs/aws/ \ Link to Amazon Verified Permissions: https://aws.amazon.com/verified-permissions/ This is sample code we will demonstrate how to design fine-grained access controls using Verified Permissions for a generative AI application that uses agents for Bedrock to answer questions about insurance claims that exist in a claims review system using t...

source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/01-create-agent-with-function-definition README: Create Agents with Function Definition In this folder, we provide an example of an HR agent using Agents for Amazon Bedrock new capabilities for function definition. When creating Agent’s action groups, you can define actions by providing the function details or passing an API Schema. When providing the function details you can simplify the action group creation process and set up the agent to elicit a set of parameters that you define. You can then pass the parameters on to your application and...

source/amazon-bedrock-samples-main/prompt-engineering README: Prompt Engineering This folder contains information to get you started with prompt engineering on Amazon Bedrock. !Prompt Engineering Prompt engineering is the practice of optimizing the quality and performance of your foundation model's response to your request. Prompt engineering may involve: - Word choice - Phrasing - Providing examples (few-shot learning) - Use of line breaks and content separators - Following established formats that align with how the model was trained - Use of stop sequen...

source/amazon-bedrock-samples-main/prompt-engineering/session-4/multimodal README: Working with multimodal data using Amazon Bedrock With the `Amazon Titan Multimodal Embeddings G1` model, you can create embeddings for multimodal data, specifically text and image data. These embeddings can then be used for multimodal search and Retrieval Augmented Generation (RAG) use-cases, for example searching images by text only, images only or a combination of text and images. !Amazon Titan Multimodal Embeddings G1 Contents - Multimodal RAG - Multimodal RAG using the Amazon Berkley Object...

source/amazon-bedrock-samples-main/prompt-engineering/session-4/multimodal/faiss-multimodal README: Build a contextual text and image search engine for product recommendations using Amazon Bedrock and Amazon OpenSearch Serverless [WIP - 02/07/2024] This repository aims at building a Large Language Model (LLM) powered search engine prototype to retrieve and recommend products based on text or image queries. This is a step-by-step guide on how to create Amazon Bedrock Titan models to encode images and text into embeddings, ingest embeddings into Amazon OpenSearch Service Serverless index, and qu...

source/amazon-bedrock-samples-main/introduction-to-bedrock README: Getting Started with Bedrock With the Amazon Bedrock serverless experience, you can quickly get started, easily experiment with FMs, privately customize FMs with your own data, and seamlessly integrate and deploy them into your applications using AWS tools and capabilities. This repository contains examples to get you started with the core Amazon Bedrock APIs for each of the foundational model providers. !Bedrock Models Contents - Getting Started with Bedrock Converse API - Notebook - Example no...

source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application README: Create your first Amazon Bedrock generative AI application This repository contains the code for deploying your first application with Amazon Bedrock using AWS CDK For this exercise, we will create and application that processes the text content from emails and extract information from them. For simplicity and in order to ensure compatibility with multiple customer setups, two options are presented: * **process-dynamodb-table-bedrock:** assumes that your emails have been extracted to a dynamoDB ...

source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-emails-bedrock README: Processing Emails with Amazon Bedrock Sample Authors: Aditi Rajnish, Maíra Ladeira Tanke, Raj Pathak This repo contains an AWS CDK solution for automatically processing emails using Amazon Bedrock, Simple Email Service (SES), Amazon Simple Notification Service (SNS), AWS Lambda, and Amazon DynamoDB. To get start and set up your environment: Navigate to the cdk-app Install dependencies The `cdk.json` file tells the CDK Toolkit how to execute your app. This project is set up like a standard Python...

source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-dynamodb-table-bedrock README: Processing an Amazon DynamoDB table with Amazon Bedrock This repo contains an AWS CDK solution for automatically process an Amazon DynamoDB table using Amazon Bedrock via an AWS Lambda function. The following architecture is deployed with this repository !Architecture Diagram Pre-requisites This repository assumes that Amazon Bedrock has `Antropic Claude-V2` enabled. Check the Model Access documentation for more details. Deploying Solution Follow the next steps to deploy this solution Navigate t...

source/amazon-bedrock-samples-main/introduction-to-bedrock/java README: Java Bedrock REST Api Samples This repository contains sample of how you can call `invokeModel` REST API and sign it with AWSSigV4 for Amazon Bedrock using Java programming language. The example uses Meta LLama 2 model but you can substitute it with any currently available model isd found on AWS website. Contents - Run invokeModel API with Java - Call invokeModel Amazon Bedrock REST API and sing it with AWSSigV4 using Java programming language Getting Started To get started with the samples, fol...

source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge README: Get inferences and model evaluations using an _LLM as a judge_ This examples demonstrates how to evaluate LLM responses with another LLM acting as a judge. Responses are generated from multiple LLMs and then another LLM is asked to evaluate the responses based on a rubric (conciseness, clarity, correctness) and pick a response that best matches this criteria, additionally we also ask the judge LLM to provide an explanation why a particular model's response was selected and why responses from oth...

source/amazon-bedrock-samples-main/rag-solutions README: Retrieval Augmented Generation Solutions This folder contains examples and solutions of Retrieval Augmented Generation (RAG) applications on Amazon Bedrock Contents - Semantic Search - Sample embeddings search application with Amazon Titan Embeddings, LangChain, and Streamlit - SQL Query Generator & Executor - Sample SQL query generator and executor application with Amazon Titan Embeddings, Amazon Bedrock Claude Model, LangChain, and Streamlit - Multimodal RAG -  Multimodal RAG with PDF files us...

source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase README: Build Contextual Chatbots using Amazon Bedrock Knowledge Bases Modern chatbots can serve as digital agents, providing a new avenue for delivering 24/7 customer service and support across many industries. Their popularity stems from the ability to respond to customer inquiries in real time and handle multiple queries simultaneously in different languages. Chatbots also offer valuable data-driven insights into customer behavior while scaling effortlessly as the user base grows; therefore, they pre...

source/amazon-bedrock-samples-main/rag-solutions/sql-query-generator README: SQL Query Generator & Executor Example This demonstrates a simple application using public Northwind with Amazon Titan Embeddings, Amazon Bedrock Claude Model, LangChain, and Streamlit for the front-end. The example receives a user’s prompt, generates a SQL query using in-memory vector database and few-shot examples. We then run the query using SQLite database and display query results in the user interface. For simplicity, we use the in-memory Chroma database to store and search for embeddings ...

source/amazon-bedrock-samples-main/rag-solutions/multimodal-rag-pdf README: Multimodal RAG for PDF files This is an example for RAG with pdf files and includes the data ingestion pipeline and inference flow. Contents - Multimodal RAG - Multimodal RAG with PDF files using both bedrock titan text embeddings and claude LLM. Contributing We welcome community contributions! Please ensure your sample aligns with AWS best practices, and please update the **Contents** section of this README file with a link to your sample, along with a description.

source/amazon-bedrock-samples-main/rag-solutions/semantic-search README: Semantic Search Example This demonstrates a simple embeddings search application with Amazon Titan Embeddings, LangChain, and Streamlit. The example matches a user’s query to the closest entries in an in-memory vector database. We then display those matches directly in the user interface. This can be useful if you want to troubleshoot a RAG application, or directly evaluate an embeddings model. For simplicity, we use the in-memory FAISS database to store and search for embeddings vectors. In a r...

source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase-guardrails README: Build Contextual Chatbots using Amazon Bedrock Knowledge Bases Modern chatbots can serve as digital agents, providing a new avenue for delivering 24/7 customer service and support across many industries. Their popularity stems from the ability to respond to customer inquiries in real time and handle multiple queries simultaneously in different languages. Chatbots also offer valuable data-driven insights into customer behavior while scaling effortlessly as the user base grows; therefore, they pre...

source/amazon-bedrock-samples-main/rag-solutions/rag-foundations-workshop README: AIM307 2023 - Retrieval Augmented Generation with Amazon Bedrock Welcome to re\:Invent 2023! Large language models (LLMs) are often limited by the data they were trained on and don’t always provide up-to-date responses, or worse, they make things up. To overcome this limitation, you can supplement prompts with up-to-date information using embeddings stored in vector databases, a process known as Retrieval Augmented Generation (RAG). With supplemental information in the prompt providing more cont...

source/amazon-bedrock-samples-main/knowledge-bases README: Amazon Bedrock Knowledge Base - Samples for building RAG workflows Contents Contains following folders: - 00-zero-setup-chat-with-your-document - 01-rag-concepts - 02-advanced-concepts 00-zero-setup-chat-with-your-document - 0_chat_with_document_kb.ipynb - Enables you to chat with your document without setting up any vector database. You can either upload the document or simply point to the document in your S3 location. 01-rag-concepts - 1a_create_ingest_documents_test_kb.ipynb - creates necessa...

source/amazon-bedrock-samples-main/knowledge-bases/03-infra/e2e-rag-using-bedrock-kb-cfn README: Deploy e2e RAG solution (using Knowledgebases for Amazon Bedrock) via CloudFormation This is a complete setup for automatic deployment of end-to-end RAG workflow using Knowledge Bases for Amazon Bedrock. Following resources will get created and deployed: - IAM role - Open Search Serverless Collection and Index - Set up Data Source (DS) and Knowledge Base (KB) Pre-requisite: - You already have s3 bucket where your documents are stored - The documents must be in one of the following supported form...

source/amazon-bedrock-samples-main/knowledge-bases/use-case-examples/metadata-filter-access-control README: Access Controls for Knowledge Bases on Amazon Bedrock This notebook guides users on creating access controls for Knowledge Bases on Amazon Bedrock. Metadata filtering in knowledge bases enables access control for your data. By defining metadata fields based on attributes such as user roles, departments, or data sensitivity levels, you can ensure that the retrieval only fetches and uses information that a particular user or application is authorized to access. This helps maintain data privacy and...

source/amazon-bedrock-samples-main/knowledge-bases/02-advanced-concepts README: Advanced Concepts Contents 0_chunk_size_evaluation_for_KB_RAG.ipynb - This notebook provides sample code for chunking size evaluation for building optimum RAG applcation. For each chunk sizes (you want to evaluate), following steps are repeated: - Create execution role for Knowledge Bases for Amazon Bedrock with necessary policies for accessing data from S3 and writing embeddings into vector store (OpenSearchServerless). - Create an empty OpenSearch serverless index. - Download documents (or poi...

source/amazon-bedrock-samples-main/multimodal/Titan/titan-multimodal-embeddings README: Working with multimodal data using Amazon Bedrock With the `Amazon Titan Multimodal Embeddings G1` model, you can create embeddings for multimodal data, specifically text and image data. These embeddings can then be used for multimodal search and Retrieval Augmented Generation (RAG) use-cases, for example searching images by text only, images only or a combination of text and images. !Amazon Titan Multimodal Embeddings G1 Contents - Multimodal RAG - Multimodal RAG using the Amazon Berkley Object...

source/amazon-bedrock-samples-main/multimodal/Titan/titan-multimodal-embeddings/amazon-bedrock-multimodal-oss-searchengine-e2e README: Build a contextual text and image search engine for product recommendations using Amazon Bedrock and Amazon OpenSearch Serverless [WIP - 02/07/2024] This repository aims at building a Large Language Model (LLM) powered search engine prototype to retrieve and recommend products based on text or image queries. This is a step-by-step guide on how to create Amazon Bedrock Titan models to encode images and text into embeddings, ingest embeddings into Amazon OpenSearch Service Serverless index, and qu...

source/amazon-bedrock-samples-main/multimodal/Titan/titan-multimodal-embeddings/rag README: Multimodal RAG example This example demonstrates how to implement a simple multimodal RAG solution using the `Amazon Titan Multimodal Embeddings G1` model for multimodal embeddings and the `Anthropic Claude v2` model for text generation. !Multimodal RAG 1. We download a subset of data from the Amazon Berkley Objects dataset. The data includes Amazon products with metadata and catalog images. The metadata includes multiple tags that provide short text description of the product in the image. The ...

source/amazon-bedrock-samples-main/multimodal/Claude3 README: Claude 3 Features and New Messages API The multi-modal capability of Claude 3 allows for the input of not only text but also an image that you can ask questions about. An example of the new mulimodal capability of the Claude 3 model is shown below with the new Messages API structure. In addition, an example of using Claude 3's vision capabilities in a RAG workflow is shown using Langchain. We also have a best practices guide for improving performance with Claude 3 Vision. For Claude 3 Integratio...

source/amazon-bedrock-samples-main/security-and-governance README: Security and Governance This folder contains examples related to Bedrock security and governance. Contents This repo is still under construction, come back soon! Contributing We welcome community contributions! Please ensure your sample aligns with AWS best practices, and please update the **Contents** section of this README file with a link to your sample, along with a description.

source/amazon-bedrock-samples-main/generative-ai-solutions README: Generative AI use-cases This repo explores various generative AI use-cases and integrations with Amazon Bedrock. Contents - Connecting API Gateway & Lambda to Bedrock - Sample pattern connecting Amazon API Gateway and AWS Lambda with Bedrock - Java Connection - Sample code for creating a connection to Amazon Bedrock through the AWS Java SDK - AWS Genai LLM Chatbot - A modular and comprehensive solution to deploy a multi LLM powered chatbot (Amazon Bedrock) - `VTT file processing and model evalua...

source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-lambda-layer README: Here is a draft README.md file: Using Bedrock with AWS Lambda Overview The new Bedrock AI service from AWS provides powerful generative AI capabilities through API calls. However, the default Boto3 included in AWS Lambda has not yet been updated to support Bedrock. To use Bedrock in Lambda functions today, you need to create a Lambda layer with an updated Boto3 that contains the Bedrock service definitions. This README provides steps and code snippets to create a Boto3 layer and deploy Lambda fu...

source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-rekognition-sample README: AWS Serverless Multi-Modal Image Text Validation Repository hosting sample AWS CDK code for the AWS Serverless Image Text Validation sample code. Use Case There are scenarios when delivery drivers take the picture of restaurant operating hours as a proof to show that its closed. However, given the wide variety of store operating hours signs, it can be challenging to validate the driver's claim, leading to potential fraud. We aim to solve this use case in this sample solution. We demonstrate the ...

source/amazon-bedrock-samples-main/generative-ai-solutions/metadata-tagger README: Claude 3 - Metadata Extraction Capability This repo provides code samples for Claude 3 to extract metadata from text. The schema for the metadata is provided as part of the prompt. This example uses synthetic data to demonstrate the metadata extraction capability for Claude 3. The extracted metadata is provided in JSON format so that it is parseable by downstream applications. Bring your own Schema/Documents 1. To use your custom schema, enter the schema in the notebook as given in the example b...

source/amazon-bedrock-samples-main/generative-ai-solutions/java-connection README: Connecting to Amazon Bedrock with the AWS Java SDK This directory contains a simple maven project for how to interact with Amazon Bedrock though the Java SDK. Prerequisites * Install Java (17.0.8 used in this example) * Install Maven (3.9.4 used in this example) * Authenticate to an AWS IAM role which has the correct permissions to invoke Amazon Bedrock models (This example uses Claude V2 from anthropic) How to Run Inside the `my-app` directory, run these two maven commands. The first packages y...

source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-api-gateway README: Call the Bedrock APIs from your API Gateway, using a Amazon API Gateway, AWS Lambda layer with Boto3 The Cloudformation template cfn-template.yaml deploys: * a Lambda Layer containing the Python Boto3 SDK updated to support Bedrock * a Lambda function for consuming Bedrock **invoke_model** API * a REST Api for invoking LLMs through Bedrock using `invoke_model` The template defines a CloudFormation custom resource function that dynamically downloads and uses the latest published Bedrock SDK files...

source/amazon-bedrock-samples-main/generative-ai-solutions/recordings-summary-generator README: Recordings Summary Generator Summary This solution will automatically transcribe a recording that you upload and then create a summary of the recording and then send it to you. The solution uses Amazon Transcribe for the transcription and Amazon Bedrock for the generative summary creation. Architecture The solution is orchestrated using a Step Functions state machine that is triggered when you upload a recording to the S3 bucket: !Architecture 1. Store recording in asset bucket 2. Trigger state ...

source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-vtt-file-processing-and-model-evals README: Meeting transcript chapter title generation and comparison across FMs with Amazon Bedrock This example shows how to generate chapter titles for `Video Text to track (VTT)` files using different Foundation Models (FMs) available in Bedrock and then evaluate the quality of the generated titles. The evaluation is done by comparing the titles generated by FMs with human written titles if available using quantitative metrics such as ROUGE#:~:text=The%20metrics%20compare%20an%20automatically,produced%...

source/amazon-bedrock-samples-main/ops-tooling README: Operational Tooling This folder contains helpful samples to help with operationalizing your work with Amazon Bedrock Contents - Set up CloudWatch dashboard - Create CloudWatch dashboard using AWS Python SDK - Set up custom CloudWatch dashboard for Bedrock app - Create a custom CloudWatch dashboard using the AWS Python SDK to track relevant metrics of your Bedrock app Contributing We welcome community contributions! Please ensure your sample aligns with AWS best practices, and please update the *...

source/amazon-bedrock-samples-main/responsible-ai README: Responsible AI This folder contains examples related to Responsible AI on Bedrock Contents Guardrails for Amazon Bedrock Samples - Examples of Building, Updating, Versioning and Testing your Guardrails Contributing We welcome community contributions! Please ensure your sample aligns with AWS best practices, and please update the **Contents** section of this README file with a link to your sample, along with a description.

deployment/cdk-solution-helper README: cdk-solution-helper A lightweight helper function that cleans-up synthesized templates from the AWS Cloud Development Kit (CDK) and prepares them for use with the AWS Solutions publishing pipeline. This function performs the following tasks: Lambda function preparation Replaces the AssetParameter-style properties that identify source code for Lambda functions with the common variables used by the AWS Solutions publishing pipeline. - `Code.S3Bucket` is assigned the `%%BUCKET_NAME%%` placeholder v...


Script Summaries:
integration/summarize_code.py:
  Function: summarize_script
  Function: summarize_readme
  Function: process_repository

source/lambda/layers/custom_boto3_init/helper.py:
  Function: get_session
  Function: get_service_client
  Function: get_service_resource

source/lambda/layers/custom_boto3_init/custom_config.py:
  Function: custom_usr_agent_config
  Function: check_env_setup

source/lambda/layers/custom_boto3_init/test/conftest.py:
  Function: aws_credentials

source/lambda/layers/custom_boto3_init/test/test_layer_env_config.py:
  Function: test_when_usr_agent_not_set
  Function: test_custom_usr_agent_config
  Function: test_with_wrong_usr_agent_key_value

source/lambda/layers/custom_boto3_init/test/test_service_instance_creation.py:
  Function: user_agent
  Function: test_get_session
  Function: test_get_service_resource
  Function: test_get_service_client
  Function: test_get_service_resource

source/lambda/chat/sagemaker_handler.py:
  Function: lambda_handler

source/lambda/chat/huggingface_handler.py:
  Function: lambda_handler

source/lambda/chat/anthropic_handler.py:
  Function: lambda_handler

source/lambda/chat/bedrock_handler.py:
  Function: lambda_handler

source/lambda/chat/clients/bedrock_client.py:
  Class: BedrockClient
  Function: __init__
  Function: get_model
  Function: construct_chat_model

source/lambda/chat/clients/sagemaker_client.py:
  Class: SageMakerClient
  Function: __init__
  Function: get_model
  Function: construct_chat_model

source/lambda/chat/clients/llm_chat_client.py:
  Class: LLMChatClient
  Function: __init__
  Function: builder
  Function: builder
  Function: llm_config
  Function: llm_config
  Function: rag_enabled
  Function: rag_enabled
  Function: connection_id
  Function: connection_id
  Function: check_env
  Function: __validate_user_id
  Function: __validate_event_body
  Function: __validate_user_query
  Function: __validate_event_prompt
  Function: check_event
  Function: get_llm_config
  Function: construct_chat_model
  Function: get_event_conversation_id
  Function: get_model

source/lambda/chat/clients/anthropic_client.py:
  Class: AnthropicClient
  Function: __init__
  Function: check_env
  Function: get_model

source/lambda/chat/clients/huggingface_client.py:
  Class: HuggingFaceClient
  Function: __init__
  Function: check_env
  Function: get_model

source/lambda/chat/clients/builders/bedrock_builder.py:
  Class: BedrockBuilder
  Function: __init__
  Function: set_llm_model

source/lambda/chat/clients/builders/llm_builder.py:
  Class: LLMBuilder
  Function: __init__
  Function: llm_config
  Function: llm_config
  Function: is_streaming
  Function: is_streaming
  Function: conversation_memory
  Function: conversation_memory
  Function: knowledge_base
  Function: knowledge_base
  Function: callbacks
  Function: callbacks
  Function: llm_model
  Function: llm_model
  Function: api_key
  Function: api_key
  Function: errors
  Function: errors
  Function: model_params
  Function: model_params
  Function: rag_enabled
  Function: rag_enabled
  Function: connection_id
  Function: connection_id
  Function: conversation_id
  Function: conversation_id
  Function: model_defaults
  Function: memory_key
  Function: input_key
  Function: output_key
  Function: context_key
  Function: human_prefix
  Function: ai_prefix
  Function: set_model_defaults
  Function: validate_event_input_sizes
  Function: set_knowledge_base
  Function: set_conversation_memory
  Function: set_api_key
  Function: set_streaming_callbacks
  Function: set_llm_model

source/lambda/chat/clients/builders/anthropic_builder.py:
  Class: AnthropicBuilder
  Function: __init__
  Function: set_llm_model

source/lambda/chat/clients/builders/sagemaker_builder.py:
  Class: SageMakerBuilder
  Function: __init__
  Function: set_llm_model

source/lambda/chat/clients/builders/huggingface_builder.py:
  Class: HuggingFaceBuilder
  Function: __init__
  Function: set_llm_model

source/lambda/chat/clients/factories/knowledge_base_factory.py:
  Class: KnowledgeBaseFactory
  Function: get_knowledge_base

source/lambda/chat/clients/factories/conversation_memory_factory.py:
  Class: ConversationMemoryFactory
  Function: get_conversation_memory

source/lambda/chat/test/conftest.py:
  Function: context
  Function: ssm
  Function: kendra_stubber
  Function: dynamodb_resource
  Function: secretsmanager
  Function: apigateway_stubber
  Function: ssm_stubber
  Function: bedrock_stubber
  Function: sagemaker_stubber
  Function: setup_environment
  Function: setup_bedrock_environment
  Function: setup_secret
  Function: chat_event
  Function: llm_config
  Function: bedrock_llm_config
  Function: sagemaker_llm_config
  Function: dynamodb_defaults_table
  Function: huggingface_dynamodb_defaults_table
  Function: huggingface_endpoint_dynamodb_defaults_table
  Function: anthropic_dynamodb_defaults_table
  Function: bedrock_dynamodb_defaults_table
  Function: sagemaker_dynamodb_defaults_table

source/lambda/chat/test/clients/test_anthropic_client.py:
  Function: llm_client
  Function: test_get_model
  Function: test_construct_chat_model1

source/lambda/chat/test/clients/test_huggingface_client.py:
  Function: llm_client
  Function: test_parent_get_llm_config
  Function: test_construct_chat_model1

source/lambda/chat/test/clients/test_llm_chat_client.py:
  Function: simple_llm_client
  Function: llm_client
  Function: test_no_body
  Function: test_empty_body
  Function: test_missing_user_id
  Function: test_body_missing_required_fields
  Function: test_prompt_valid_length
  Function: test_empty_prompt
  Function: test_empty_question
  Function: test_multiple_length_issues
  Function: test_get_event_conversation_id
  Function: test_env_not_set
  Function: test_env_set
  Function: test_parent_get_llm_config
  Function: test_parent_get_llm_config_missing_env
  Function: test_parent_get_llm_config_parameter_not_found
  Function: test_parent_get_llm_config_client_exceptions
  Function: test_construct_chat_model_failure
  Function: test_construct_chat_model_missing_params
  Function: test_construct_chat_model_new_prompt

source/lambda/chat/test/clients/test_sagemaker_client.py:
  Function: llm_client
  Function: test_get_model
  Function: test_construct_chat_model1

source/lambda/chat/test/clients/test_bedrock_client.py:
  Function: llm_client
  Function: test_get_model
  Function: test_construct_chat_model1

source/lambda/chat/test/clients/builders/test_sagemaker_builder.py:
  Function: test_set_llm_model
  Function: test_set_llm_model_throws_error_missing_memory
  Function: test_set_llm_model_with_errors
  Function: test_set_llm_model_with_missing_config_fields
  Function: test_returned_sagemaker_model

source/lambda/chat/test/clients/builders/test_llm_builder.py:
  Function: test_knowledge_base_builder
  Function: test_conversation_memory_builder
  Function: test_api_key_builder

source/lambda/chat/test/clients/builders/test_huggingface_builder.py:
  Function: test_set_llm_model
  Function: test_set_llm_model_with_errors
  Function: test_set_llm_model_with_missing_config_fields
  Function: test_set_llm_model_with_missing_config_fields
  Function: test_returned_huggingface_model

source/lambda/chat/test/clients/builders/test_anthropic_builder.py:
  Function: test_set_llm_model
  Function: test_set_llm_model_throws_error_missing_memory
  Function: test_set_llm_model_with_errors
  Function: test_set_llm_model_with_missing_config_fields
  Function: test_returned_anthropic_model

source/lambda/chat/test/clients/builders/test_bedrock_builder.py:
  Function: test_set_llm_model
  Function: test_set_llm_model_throws_error_missing_memory
  Function: test_set_llm_model_with_errors
  Function: test_set_llm_model_with_missing_config_fields
  Function: test_returned_bedrock_model

source/lambda/chat/test/clients/factories/test_conversation_memory_factory.py:
  Function: test_get_ddb_memory_success
  Function: test_get_ddb_memory_error
  Function: test_get_ddb_memory_missing_table_name
  Function: test_get_ddb_memory_missing_memory_type

source/lambda/chat/test/clients/factories/test_knowledge_base_factory.py:
  Function: test_get_kb_memory_success
  Function: test_unsupported_kb
  Function: test_get_kb_missing_kendra_index
  Function: test_get_kb_missing_config
  Function: test_get_kb_missing_type

source/lambda/chat/test/utils/test_helpers.py:
  Function: test_validate_prompt_template_valid
  Function: test_validate_prompt_template_invalid
  Function: test_validate_prompt_template_valid
  Function: test_valid_type_casting
  Function: test_invalid_casting
  Function: test_count_keys
  Function: test_dict_pop_null_values

source/lambda/chat/test/shared/memory/test_ddb_chat_memory.py:
  Function: test_init
  Function: test_load_memory_variables_with_none
  Function: test_load_memory_variables

source/lambda/chat/test/shared/memory/test_ddb_enhanced_chat_message_history.py:
  Function: setup_test_table
  Function: test_add_message
  Function: test_add_message_with_ttl_env_var
  Function: test_adding_multiple_messages
  Function: test_getting_different_messages_for_different_conversations
  Function: test_instances_with_same_user_conversation_are_equal
  Function: test_works_with_existing_ddb
  Function: test_no_messages
  Function: test_clear
  Function: test_get_message_generic_error
  Function: test_get_message_no_resource_error
  Function: test_add_message_error
  Function: test_clear_error

source/lambda/chat/test/shared/defaults/test_model_defaults.py:
  Function: test_model_defaults_success
  Function: test_model_defaults_failure
  Function: test_model_defaults_missing_values

source/lambda/chat/test/shared/knowledge/test_kendra_knowledge_base.py:
  Function: test_knowledge_base_construction_fails
  Function: test_knowledge_base_construction

source/lambda/chat/test/shared/knowledge/test_kendra_retriever.py:
  Function: kendra_retriever
  Function: get_kendra_result_stubbed
  Function: load_kendra_response
  Function: kendra_query_expected_response
  Function: test_kendra_retriever
  Function: test_kendra_query
  Function: test_get_relevant_documents
  Function: test_kendra_throws_client_error

source/lambda/chat/test/llms/test_anthropic.py:
  Function: streamless_chat
  Function: streaming_chat
  Function: temp_anthropic_dynamodb_defaults_table
  Function: test_implement_error_not_raised
  Function: test_generate
  Function: test_model_get_clean_model_params
  Function: test_model_default_stop_sequences
  Function: test_exception_for_failed_model_incorrect_key

source/lambda/chat/test/llms/test_sagemaker.py:
  Function: streamless_chat
  Function: streaming_chat
  Function: test_missing_values
  Function: test_implement_error_not_raised
  Function: test_generate
  Function: test_exception_for_failed_model_response
  Function: test_model_get_clean_model_params
  Function: test_clean_model_endpoint_args

source/lambda/chat/test/llms/test_bedrock.py:
  Function: streamless_chat
  Function: streaming_chat
  Function: temp_bedrock_dynamodb_defaults_table
  Function: test_implement_error_not_raised
  Function: test_generate
  Function: test_exception_for_failed_model_response
  Function: test_model_get_clean_model_params
  Function: test_model_default_stop_sequences
  Function: test_guardrails
  Function: test_bedrock_get_llm_class
  Function: test_bedrock_get_llm_class_no_env

source/lambda/chat/test/llms/test_huggingface.py:
  Function: chat
  Function: inference_chat
  Function: temp_huggingface_dynamodb_defaults_table
  Function: test_implement_error_not_raised
  Function: test_inference_error_not_raised
  Function: test_exception_for_failed_model_incorrect_repo
  Function: test_huggingface_model_api_error
  Function: test_huggingface_inference_api_error
  Function: test_generate_huggingface
  Function: test_exception_in_generate
  Function: test_model_get_clean_model_params
  Function: test_endpoint_get_clean_model_params
  Function: test_model_default_stop_sequences
  Function: test_endpoint_default_stop_sequences
  Class: MockConversationChainClass
  Function: predict

source/lambda/chat/test/llms/test_base_langchain.py:
  Function: chat
  Function: rag_chat
  Function: test_placeholder_replacements
  Function: test_get_validated_prompt
  Function: test_get_clean_model_params_success

source/lambda/chat/test/llms/models/bedrock_params/test_anthropic.py:
  Function: test_anthropic_params_dataclass_success
  Function: test_anthropic_v3_params_dataclass_success
  Function: test_anthropic_get_params_as_dict
  Function: test_anthropic_incorrect_params

source/lambda/chat/test/llms/models/bedrock_params/test_cohere.py:
  Function: test_cohere_params_dataclass_success
  Function: test_cohere_get_params_as_dict
  Function: test_cohere_incorrect_params

source/lambda/chat/test/llms/models/bedrock_params/test_amazon.py:
  Function: test_amazon_params_dataclass_success
  Function: test_amazon_get_params_as_dict
  Function: test_amazon_incorrect_params

source/lambda/chat/test/llms/models/bedrock_params/test_meta.py:
  Function: test_meta_params_dataclass_success
  Function: test_meta_get_params_as_dict
  Function: test_meta_incorrect_params

source/lambda/chat/test/llms/models/bedrock_params/test_ai21.py:
  Function: test_ai21_params_dataclass_success
  Function: test_ai21_get_params_as_dict
  Function: test_ai21_incorrect_params

source/lambda/chat/test/llms/models/sagemaker/test_content_handler.py:
  Function: test_replace_placeholders
  Function: test_transform_input
  Function: test_transform_output
  Function: test_transform_output_raises

source/lambda/chat/test/llms/rag/test_bedrock_retrieval.py:
  Function: llm_params
  Function: titan_model
  Function: temp_bedrock_dynamodb_defaults_table
  Function: test_implement_error_not_raised
  Function: test_generate
  Function: test_exception_for_failed_model_incorrect_key
  Function: test_bedrock_model_variation
  Function: test_guardrails

source/lambda/chat/test/llms/rag/test_huggingface_retrieval.py:
  Function: knowledge_base
  Function: llm_params
  Function: streamless_huggingface_model
  Function: streamless_huggingface_endpoint
  Function: test_implement_error_not_raised
  Function: test_implement_error_not_raised
  Function: test_generate
  Function: test_exception_for_failed_model_incorrect_api_key
  Function: test_exception_for_failed_endpoint_incorrect_api_key
  Class: MockConversationChainClass
  Function: invoke

source/lambda/chat/test/llms/rag/test_anthropic_retrieval.py:
  Function: llm_params
  Function: anthropic_model
  Function: test_implement_error_not_raised
  Function: test_generate
  Function: test_exception_for_failed_model_incorrect_key

source/lambda/chat/test/llms/rag/test_sagemaker_retrieval.py:
  Function: llm_params
  Function: sagemaker_model
  Function: temp_sagemaker_dynamodb_defaults_table
  Function: test_implement_error_not_raised
  Function: test_generate
  Function: test_generate_error

source/lambda/chat/test/llms/factories/test_bedrock_params_factory.py:
  Function: test_sanitizer_passes
  Function: test_sanitizer_fails

source/lambda/chat/test/handlers/test_huggingface_handler.py:
  Function: test_huggingface_chat_handler
  Function: test_huggingface_chat_handler_empty_conversation
  Function: test_missing_llm_config_key

source/lambda/chat/test/handlers/test_anthropic_handler.py:
  Function: test_anthropic_chat_handler
  Function: test_anthropic_chat_handler_empty_conversation
  Function: test_missing_llm_config_key

source/lambda/chat/test/handlers/test_bedrock_handler.py:
  Function: test_bedrock_chat_handler
  Function: test_bedrock_chat_handler_empty_conversation
  Function: test_missing_llm_config_key

source/lambda/chat/test/handlers/test_sagemaker_handler.py:
  Function: test_sagemaker_chat_handler
  Function: test_sagemaker_chat_handler_empty_conversation
  Function: test_missing_llm_config_key

source/lambda/chat/utils/custom_exceptions.py:
  Class: LLMBuildError
  Class: LLMInvocationError

source/lambda/chat/utils/enum_types.py:
  Class: KnowledgeBaseTypes
  Class: ConversationMemoryTypes
  Class: LLMProviderTypes
  Class: BedrockModelProviders
  Class: CloudWatchNamespaces
  Class: CloudWatchMetrics

source/lambda/chat/utils/helpers.py:
  Function: get_metrics_client
  Function: type_cast
  Function: validate_prompt_placeholders
  Function: format_lambda_response
  Function: enforce_stop_tokens
  Function: count_keys
  Function: pop_null_values

source/lambda/chat/utils/handler_response_formatter.py:
  Function: format_response

source/lambda/chat/shared/memory/ddb_enhanced_message_history.py:
  Class: DynamoDBChatMessageHistory
  Function: __init__
  Function: messages
  Function: add_message
  Function: clear

source/lambda/chat/shared/memory/ddb_chat_memory.py:
  Class: DynamoDBChatMemory
  Function: __init__
  Function: buffer
  Function: load_memory_variables
  Function: memory_variables
  Function: _get_input_output

source/lambda/chat/shared/callbacks/websocket_handler.py:
  Class: WebsocketHandler
  Function: __init__
  Function: connection_id
  Function: conversation_id
  Function: client
  Function: connection_url
  Function: source_documents_formatter
  Function: send_references
  Function: post_token_to_connection
  Function: post_response_to_connection
  Function: format_response

source/lambda/chat/shared/callbacks/websocket_error_handler.py:
  Class: WebsocketErrorHandler
  Function: __init__
  Function: connection_url
  Function: trace_id
  Function: trace_id
  Function: client
  Function: connection_id
  Function: post_token_to_connection
  Function: format_response

source/lambda/chat/shared/callbacks/websocket_streaming_handler.py:
  Class: WebsocketStreamingCallbackHandler
  Function: __init__
  Function: is_streaming
  Function: connection_id
  Function: connection_url
  Function: conversation_id
  Function: client
  Function: source_documents_formatter
  Function: on_chat_model_start
  Function: post_token_to_connection
  Function: on_llm_new_token
  Function: send_references
  Function: on_chain_end
  Function: on_llm_error
  Function: format_response

source/lambda/chat/shared/defaults/model_defaults.py:
  Class: ModelDefaults
  Function: __init__
  Function: set_model_defaults

source/lambda/chat/shared/knowledge/knowledge_base.py:
  Class: KnowledgeBase
  Function: retriever
  Function: retriever
  Function: source_docs_formatter

source/lambda/chat/shared/knowledge/kendra_retriever.py:
  Class: CustomKendraRetriever
  Function: __init__
  Function: _get_relevant_documents
  Function: _kendra_query
  Function: _get_clean_docs

source/lambda/chat/shared/knowledge/kendra_knowledge_base.py:
  Class: KendraKnowledgeBase
  Function: __init__
  Function: _check_env_variables
  Function: source_docs_formatter

source/lambda/chat/llms/base_langchain.py:
  Class: BaseLangChainModel
  Function: __init__
  Function: api_token
  Function: api_token
  Function: streaming
  Function: streaming
  Function: verbose
  Function: verbose
  Function: conversation_chain
  Function: conversation_chain
  Function: prompt
  Function: memory_buffer
  Function: conversation_memory
  Function: conversation_memory
  Function: knowledge_base
  Function: knowledge_base
  Function: model_params
  Function: model_params
  Function: temperature
  Function: temperature
  Function: model
  Function: model
  Function: llm
  Function: llm
  Function: stop_sequences
  Function: stop_sequences
  Function: prompt_template
  Function: prompt_template
  Function: prompt_template_placeholders
  Function: callbacks
  Function: callbacks
  Function: rag_enabled
  Function: rag_enabled
  Function: prompt
  Function: memory_buffer
  Function: get_conversation_chain
  Function: generate
  Function: get_validated_prompt
  Function: get_clean_model_params
  Function: get_llm

source/lambda/chat/llms/sagemaker.py:
  Class: SageMakerLLM
  Function: __init__
  Function: sagemaker_endpoint_name
  Function: sagemaker_endpoint_name
  Function: input_schema
  Function: response_jsonpath
  Function: endpoint_params
  Function: get_llm
  Function: generate
  Function: get_clean_params

source/lambda/chat/llms/huggingface.py:
  Class: HuggingFaceLLM
  Function: __init__
  Function: inference_endpoint
  Function: inference_endpoint
  Function: get_llm
  Function: generate
  Function: get_clean_model_params

source/lambda/chat/llms/anthropic.py:
  Class: AnthropicLLM
  Function: __init__
  Function: get_llm
  Function: generate
  Function: get_clean_model_params

source/lambda/chat/llms/bedrock.py:
  Class: BedrockLLM
  Function: __init__
  Function: model_family
  Function: model_family
  Function: get_llm
  Function: generate
  Function: get_clean_model_params

source/lambda/chat/llms/models/llm.py:
  Class: LLM
  Function: __post_init__

source/lambda/chat/llms/models/custom_chat_anthropic.py:
  Class: CustomChatAnthropic
  Function: _default_params

source/lambda/chat/llms/models/llm_params.py:
  Class: LLMParams
  Function: get_params_as_dict

source/lambda/chat/llms/models/bedrock_params/mistral.py:
  Class: BedrockMistralLLMParams
  Function: __post_init__
  Function: get_params_as_dict

source/lambda/chat/llms/models/bedrock_params/llm.py:
  Class: BedrockLLMParams
  Function: cleanup

source/lambda/chat/llms/models/bedrock_params/anthropic.py:
  Class: BedrockAnthropicLLMParams
  Class: BedrockAnthropicV1LLMParams
  Class: BedrockAnthropicV3LLMParams
  Function: __post_init__
  Function: get_params_as_dict
  Function: __post_init__
  Function: __post_init__

source/lambda/chat/llms/models/bedrock_params/ai21.py:
  Class: BedrockAI21LLMParams
  Function: __post_init__
  Function: get_params_as_dict

source/lambda/chat/llms/models/bedrock_params/cohere.py:
  Class: BedrockCohereLLMParams
  Function: __post_init__
  Function: get_params_as_dict

source/lambda/chat/llms/models/bedrock_params/amazon.py:
  Class: BedrockAmazonLLMParams
  Function: __post_init__
  Function: get_params_as_dict

source/lambda/chat/llms/models/bedrock_params/meta.py:
  Class: BedrockMetaLLMParams
  Function: __post_init__
  Function: get_params_as_dict

source/lambda/chat/llms/models/sagemaker/content_handler.py:
  Class: SageMakerContentHandler
  Function: __init__
  Function: transform_input
  Function: transform_output
  Function: replace_placeholders

source/lambda/chat/llms/rag/bedrock_retrieval.py:
  Class: BedrockRetrievalLLM
  Function: __init__
  Function: condensing_prompt_template
  Function: return_source_docs
  Function: get_conversation_chain
  Function: generate

source/lambda/chat/llms/rag/sagemaker_retrieval.py:
  Class: SageMakerRetrievalLLM
  Function: __init__
  Function: condensing_prompt_template
  Function: return_source_docs
  Function: get_conversation_chain
  Function: generate

source/lambda/chat/llms/rag/huggingface_retrieval.py:
  Class: HuggingFaceRetrievalLLM
  Function: __init__
  Function: condensing_prompt_template
  Function: return_source_docs
  Function: get_conversation_chain
  Function: generate

source/lambda/chat/llms/rag/anthropic_retrieval.py:
  Class: AnthropicRetrievalLLM
  Function: __init__
  Function: condensing_prompt_template
  Function: return_source_docs
  Function: get_conversation_chain
  Function: generate

source/lambda/chat/llms/factories/bedrock_adapter_factory.py:
  Class: BedrockAdapterFactory
  Function: __init__
  Function: model_map
  Function: get_bedrock_adapter

source/lambda/custom-resource/cfn_response.py:
  Function: send_response

source/lambda/custom-resource/lambda_ops_metrics.py:
  Function: handler

source/lambda/custom-resource/lambda_func.py:
  Class: UnSupportedOperationTypeException
  Function: get_function_for_resource
  Function: handler

source/lambda/custom-resource/test/conftest.py:
  Function: aws_credentials
  Function: s3
  Function: ddb
  Function: cw_logs
  Function: ssm
  Function: secretsmanager
  Function: custom_resource_event
  Function: mock_lambda_context
  Function: reset_metric_set
  Class: FakeLambdaContext
  Function: __init__

source/lambda/custom-resource/test/test_lambda_func.py:
  Function: patch_powertools
  Function: test_get_function_for_operation
  Function: test_handler_for_success
  Function: test_handler_for_error
  Function: test_get_function_for_operation

source/lambda/custom-resource/test/test_lambda_ops_metrics.py:
  Function: test_lambda_handler_success
  Function: test_lambda_handler_on_exception

source/lambda/custom-resource/test/utils/test_metrics.py:
  Function: test_when_env_variables_set
  Function: test_when_solution_version_not_set
  Function: test_when_solution_id_not_set
  Function: test_sending_cw_metrics
  Function: test_sending_cw_metrics_raises

source/lambda/custom-resource/test/utils/test_lambda_context_parser.py:
  Function: test_get_invocation_account_id

source/lambda/custom-resource/test/utils/test_metrics_payload.py:
  Function: cw_stub
  Function: metric_responses
  Function: setup_metrics_environment
  Function: get_metric_data_stubbed
  Function: test_publish_metrics_success
  Function: test_publish_metrics_success_kendra_missing
  Function: test_publish_metrics_raises

source/lambda/custom-resource/test/operations/test_shared.py:
  Function: test_get_zip_archive
  Function: test_get_archive_errors_for_wrong_prefix
  Function: test_with_bad_zip_file

source/lambda/custom-resource/test/operations/test_copy_web_ui.py:
  Function: test_verify_env_setup_success
  Function: test_evn_setup_with_resource_props_wrong_value
  Function: test_evn_setup_with_resource_props_empty
  Function: test_evn_with_missing_source_bucket
  Function: test_evn_with_missing_destination_bucket
  Function: test_evn_with_source_bucket_str_empty
  Function: test_env_with_destination_bucket_str_empty
  Function: test_env_with_missing_ssm_param_key
  Function: test_env_with_non_existing_ssm_param_key
  Function: test_get_params_succes
  Function: test_get_params_failure
  Function: test_execute_call_success
  Function: test_execute_call_with_bad_archive
  Function: test_execute_call_with_wrong_source_bucket
  Function: test_execute_call_with_wrong_destination_bucket
  Function: test_lambda_handler

source/lambda/custom-resource/test/operations/test_use_case_policy.py:
  Function: test_when_operation_type_is_invalid
  Function: test_when_resource_properties_missing
  Function: test_create_with_no_admin_group
  Function: test_create_with_existing_admin_group
  Function: test_create_where_group_exists
  Function: test_create_fails
  Function: test_delete
  Function: test_delete_with_no_admin_group
  Function: test_delete_with_no_table_fails_but_continues
  Function: test_delete_fails
  Function: test_execute_method
  Function: test_lambda_handler

source/lambda/custom-resource/test/operations/test_admin_policy.py:
  Function: test_when_operation_type_is_invalid
  Function: test_when_resource_properties_missing
  Function: test_create_with_no_admin_group
  Function: test_create_with_existing_admin_group
  Function: test_create_fails
  Function: test_delete
  Function: test_delete_fails
  Function: test_execute_method
  Function: test_lambda_handler

source/lambda/custom-resource/test/operations/test_copy_model_info_to_ddb.py:
  Function: test_verify_env_setup_success
  Function: test_verify_when_ddb_table_missing
  Function: test_verify_when_source_bucket_missing
  Function: test_verify_when_source_prefix_missing
  Function: test_create_success
  Function: test_create_with_incorrect_table_name
  Function: test_create_with_bad_zip_file
  Function: test_execute_call_success
  Function: test_execute_with_missing_resource_properties
  Function: test_execute_delete_event_succesful_with_missing_properties
  Function: test_lambda_handler

source/lambda/custom-resource/test/operations/test_anonymous_metric.py:
  Function: setup_ssm
  Function: test_when_operation_type_is_invalid
  Function: test_sending_metric
  Function: test_sending_metric_missing_props
  Function: test_sanitize_method
  Function: test_lambda_handler
  Function: test_lambda_handler_for_missing_props

source/lambda/custom-resource/test/operations/test_update_s3_policy.py:
  Function: test_execute_success
  Function: test_execute_with_non_matching_policy
  Function: test_execute_with_matching_policy
  Function: test_execute_with_policy_for_different_prefix
  Function: test_execute_delete
  Function: test_verify_env_setup_success
  Function: test_verify_env_setup_failure
  Function: test_create_success

source/lambda/custom-resource/test/operations/test_gen_uuid.py:
  Function: test_regex
  Function: test_gen_uuid_success
  Function: test_gen_uuid_success
  Function: test_when_uuid_fails
  Function: test_when_operation_type_is_invalid
  Function: test_lambda_handler

source/lambda/custom-resource/test/operations/test_copy_api_key.py:
  Function: test_verify_env_setup_success
  Function: test_env_setup_with_no_api_key
  Function: test_env_setup_with_no_secret_name
  Function: test_create_failure
  Function: test_create_success
  Function: test_create_success_when_existing
  Function: test_delete_failure
  Function: test_delete_success
  Function: test_execute_create_and_update
  Function: test_execute_delete
  Function: test_execute_failure

source/lambda/custom-resource/test/operations/test_webconfig.py:
  Function: test_verify_env_setup_success
  Function: test_env_setup_with_no_ssm_key
  Function: test_env_setup_with_no_api_endpoint
  Function: test_env_setup_with_no_usr_pool_id
  Function: test_env_setup_with_no_usr_pool_client_id
  Function: test_create_success
  Function: test_create_success_with_additional_config
  Function: test_create_success_with_additional_config_marking_internal_user
  Function: test_create_success_with_additional_config_marking_external_user
  Function: test_create_success_with_additional_config_empty
  Function: test_create_success_with_additional_config_empty_marking_internal_user
  Function: test_create_success_with_additional_config_empty_marking_external_user
  Function: test_delete_failure
  Function: test_delete_success
  Function: test_execute_create_and_update
  Function: test_execute_delete
  Function: test_execute_failure

source/lambda/custom-resource/test/operations/test_cw_loggroup_policy.py:
  Function: test_when_operation_type_is_invalid
  Function: test_when_resource_properties_missing
  Function: test_create_log_policy_for_valid_principal
  Function: test_create_log_policy_for_invalid_principal
  Function: test_update_method
  Function: test_delete_method
  Function: test_delete_method_for_invalid_policy
  Function: test_create_method_for_succesful_creation
  Function: test_execute_method
  Function: test_lambda_handler

source/lambda/custom-resource/test/fixtures/cw_loggroup_policy_events.py:
  Function: lambda_event

source/lambda/custom-resource/test/fixtures/copy_web_ui_events.py:
  Function: lambda_event
  Function: web_ui_copy_setup

source/lambda/custom-resource/test/fixtures/copy_model_info_events.py:
  Function: copy_to_ddb_event
  Function: setup_model_info

source/lambda/custom-resource/test/fixtures/gen_uuid_events.py:
  Function: lambda_event

source/lambda/custom-resource/test/fixtures/copy_api_key_events.py:
  Function: lambda_event
  Function: setup_secretsmanager

source/lambda/custom-resource/test/fixtures/use_case_policy_events.py:
  Function: lambda_event
  Function: setup_ddb

source/lambda/custom-resource/test/fixtures/anonymous_metrics_events.py:
  Function: lambda_events

source/lambda/custom-resource/test/fixtures/update_s3_policy_events.py:
  Function: lambda_event
  Function: s3_stub
  Function: put_public_access_block_as_false
  Function: put_public_access_block_as_true
  Function: s3_stub_success
  Function: s3_stub_existing_non_matching_policy
  Function: s3_stub_existing_policy
  Function: s3_stub_existing_policy_for_different_prefix

source/lambda/custom-resource/test/fixtures/admin_policy_events.py:
  Function: lambda_event
  Function: setup_ddb

source/lambda/custom-resource/test/fixtures/webconfig_events.py:
  Function: lambda_event
  Function: lambda_event_with_additional_config
  Function: lambda_event_with_additional_config_internal_user
  Function: lambda_event_with_additional_config_external_user
  Function: setup_ssm

source/lambda/custom-resource/utils/metrics.py:
  Function: verify_env_setup
  Function: push_builder_metrics

source/lambda/custom-resource/utils/lambda_context_parser.py:
  Function: get_invocation_account_id

source/lambda/custom-resource/utils/constants.py:
  Class: CloudWatchNamespaces
  Class: CloudWatchMetrics

source/lambda/custom-resource/utils/metrics_payload.py:
  Function: get_cloudwatch_metrics_queries
  Function: get_metrics_payload

source/lambda/custom-resource/utils/data.py:
  Class: BuilderMetrics
  Function: __init__
  Function: __post_init__

source/lambda/custom-resource/operations/webconfig.py:
  Function: verify_env_setup
  Function: get_additional_config_ssm_parameter
  Function: create
  Function: delete
  Function: execute

source/lambda/custom-resource/operations/cw_loggroup_policy.py:
  Class: InvalidPrincipalException
  Function: verify_env_setup
  Function: create_loggroup_policy
  Function: create
  Function: update
  Function: delete
  Function: execute

source/lambda/custom-resource/operations/update_s3_policy.py:
  Function: create
  Function: verify_env_setup
  Function: execute

source/lambda/custom-resource/operations/copy_web_ui.py:
  Function: get_params
  Function: verify_env_setup
  Function: delete
  Function: create
  Function: execute

source/lambda/custom-resource/operations/copy_api_key.py:
  Function: verify_env_setup
  Function: create
  Function: delete
  Function: execute

source/lambda/custom-resource/operations/shared.py:
  Function: get_zip_archive

source/lambda/custom-resource/operations/admin_policy.py:
  Class: InvalidPrincipalException
  Function: verify_env_setup
  Function: create
  Function: delete
  Function: execute

source/lambda/custom-resource/operations/copy_model_info_to_ddb.py:
  Function: verify_env_setup
  Function: create
  Function: execute

source/lambda/custom-resource/operations/anonymous_metrics.py:
  Function: verify_env_setup
  Function: sanitize_data
  Function: get_additional_config_ssm_parameter
  Function: execute

source/lambda/custom-resource/operations/gen_uuid.py:
  Function: verify_env_setup
  Function: execute

source/lambda/custom-resource/operations/use_case_policy.py:
  Class: InvalidPrincipalException
  Function: verify_env_setup
  Function: create
  Function: _create_updated_admin_policy
  Function: delete
  Function: execute

source/lambda/reconcile-data/lambda_func.py:
  Function: determine_operation
  Function: handler

source/lambda/reconcile-data/test/conftest.py:
  Function: aws_credentials
  Function: ssm
  Function: custom_resource_event
  Function: mock_lambda_context
  Class: FakeLambdaContext
  Function: __init__

source/lambda/reconcile-data/test/test_lambda_func.py:
  Function: init_ssm
  Function: test_handler
  Function: test_handler_with_diff_user_identity
  Function: test_when_operation_not_found

source/lambda/reconcile-data/test/operations/test_dynamodb_remove_case.py:
  Function: test_reconcile
  Function: test_reconcile_failure_with_ssm
  Function: test_reconcile_with_parameter_name_missing_in_record

source/lambda/reconcile-data/test/fixtures/remove_case_event.py:
  Function: ttl_remove_event

source/lambda/reconcile-data/exceptions/operation_not_found.py:
  Class: OperationNotFoundException

source/lambda/reconcile-data/operations/dynamodb_remove_case.py:
  Function: delete_ssm_parameter_key
  Function: reconcile

source/infrastructure/test/mock-lambda-func/python-lambda/function.py:
  Function: handler

source/amazon-bedrock-samples-main/function-calling/fc_pydantic_class_converse_bedrock.py:
  Function: bedrock_tool
  Class: ToolsList
  Function: converse_with_tools
  Function: converse
  Function: decorator
  Function: get_weather

source/amazon-bedrock-samples-main/function-calling/function_calling_text2SQL_converse_bedrock_streamlit.py:
  Class: ToolsList
  Function: converse_with_tools
  Function: converse
  Function: query_athena

source/amazon-bedrock-samples-main/function-calling/fc_migrations_converse_bedrock_streamlit.py:
  Function: oai_call_to_bedrock_call
  Function: converse_with_tools

source/amazon-bedrock-samples-main/function-calling/function_calling_converse_bedrock_streamlit.py:
  Class: ToolsList
  Class: ToolsList2
  Class: ToolsList3
  Function: converse_with_tools
  Function: converse
  Function: converse_image
  Function: get_weather
  Function: get_weather
  Function: get_weather
  Function: web_search

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/product-review-agent/agent.py:
  Class: ProductReviewAgent
  Function: __init__
  Function: invoke_agent

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/product-review-agent/app.py:
  Function: get_named_parameter
  Function: lambda_handler

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation/agent/streamlit/bedrock_streamlit.py:
  Function: generate_session_id
  Function: fetch_agents
  Function: fetch_knowledge_bases
  Function: fetch_data_sources
  Function: fetch_agent_aliases
  Function: fetch_agent_knowledge_bases
  Function: fetch_knowledge_base_name
  Function: extract_bucket_name
  Function: fetch_data_source_s3_configuration
  Function: reset_session
  Function: show_csv
  Function: extract_text_from_docx
  Function: convert_docx_to_html
  Function: show_doc
  Function: show_docx
  Function: show_excel
  Function: show_html
  Function: show_md
  Function: show_pdf
  Function: show_text
  Function: process_uploaded_file
  Function: bedrock_query_knowledge_base
  Function: update_knowledge_base
  Function: check_ingestion_job_status
  Function: invoke_agent
  Function: main

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation/agent/streamlit/sigv4.py:
  Class: SigV4HttpRequester
  Function: __init__
  Function: send_signed_request

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation/agent/lambda/data-loader/index.py:
  Function: lambda_handler

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation/agent/lambda/action-groups/send_reminder.py:
  Function: get_named_parameter
  Function: get_named_property
  Function: open_claims
  Function: generate_reminder_id
  Function: send_reminder
  Function: notify_pending_documents
  Function: lambda_handler

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation/agent/lambda/action-groups/gather_evidence.py:
  Function: get_named_parameter
  Function: get_named_property
  Function: generate_upload_id
  Function: send_evidence_url
  Function: gather_evidence
  Function: lambda_handler

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation/agent/lambda/action-groups/create_claim.py:
  Function: claim_generator
  Function: collect_documents
  Function: create_claim
  Function: lambda_handler

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/text-2-sql-agent/lambda_function.py:
  Function: get_schema
  Function: execute_athena_query
  Function: extract_result_data
  Function: lambda_handler

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/text-2-sql-agent/dependencies/clean.py:
  Function: delete_crawler
  Function: delete_tables
  Function: delete_database
  Function: delete_policy_by_name

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/text-2-sql-agent/dependencies/build_infrastructure.py:
  Function: unzip_data
  Function: upload_data

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/customer-relationship-management-agent/util/bedrock.py:
  Class: BedrockAgent
  Function: __init__
  Function: new_session
  Function: invoke_agent

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/customer-relationship-management-agent/src/bedrock-agent/basic/crm-bot-lambda.py:
  Function: get_customer_interactions
  Function: get_customer
  Function: get_named_parameter
  Function: get_named_property
  Function: listRecentInteractions
  Function: companyOverview
  Function: getPreferences
  Function: lambda_handler

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/customer-relationship-management-agent/src/bedrock-agent/jira/crm-bot-lambda.py:
  Function: get_customer_interactions
  Function: get_customer
  Function: get_named_parameter
  Function: get_named_property
  Function: listRecentInteractions
  Function: companyOverview
  Function: getPreferences
  Function: getOpenJiraIssues
  Function: updateJiraIssue
  Function: lambda_handler

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/customer-relationship-management-agent/src/data/upload_data.py:
  Function: upload_data

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/agentsforbedrock-retailagent/csbot_agent.py:
  Function: load_data
  Function: return_customer_info
  Function: return_shoe_inventory
  Function: place_shoe_order
  Function: lambda_handler

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/hr-assistant/streamlit/agent_streamlit.py:
  Function: session_generator
  Function: bedrock_agent
  Function: get_file_from_s3
  Function: render_s3_image
  Function: parse_trace
  Function: main

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/hr-assistant/agent/lambda/index.py:
  Function: call_sql_database
  Function: send_email_endpoint
  Function: generate_image_endpoint
  Function: send_slack_message_endpoint
  Function: schedule_meeting_endpoint
  Function: get_availability_endpoint
  Function: handler

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/hr-assistant/agent/lambda/calendar_integration.py:
  Function: schedule_standard_meeting
  Function: find_meeting_timeslot

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/hr-assistant/agent/lambda/athena_sql_query.py:
  Function: get_data_from_database
  Function: execute_athena_query
  Function: check_query_status
  Function: get_query_results

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/hr-assistant/agent/lambda/generate_image.py:
  Function: generate_image

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/hr-assistant/agent/lambda/email_integration.py:
  Function: send_email

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/hr-assistant/agent/lambda/slack_integration.py:
  Function: send_slack_message

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/text-2-sql-agent-cdk-enhanced/claude_3.py:
  Function: invoke_claude_3_with_text
  Class: Claude3Wrapper
  Function: __init__
  Function: invoke_claude_3_with_text
  Function: invoke_claude_3_multimodal

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/text-2-sql-agent-cdk-enhanced/agent_instruction_generator.py:
  Function: analyze_csv_files
  Function: generate_instruction

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/text-2-sql-agent-cdk-enhanced/Prep_Data.py:
  Function: prep_data

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/text-2-sql-agent-cdk-enhanced/app.py:
  Class: MyStack
  Function: __init__

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/text-2-sql-agent-cdk-enhanced/lambda/agent/index.py:
  Function: get_schema
  Function: correct_query
  Function: execute_athena_query
  Function: extract_result_data
  Function: compress_data
  Function: save_to_s3
  Function: lambda_handler

source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/02-create-agent-with-api-schema/lambda_function.py:
  Function: get_named_parameter
  Function: get_named_property
  Function: claim_detail
  Function: open_claims
  Function: outstanding_paperwork
  Function: send_reminder
  Function: lambda_handler

source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/05-create-agent-with-knowledge-base-and-action-group/knowledge_base.py:
  Function: interactive_sleep
  Class: BedrockKnowledgeBase
  Function: __init__
  Function: create_s3_bucket
  Function: create_bedrock_kb_execution_role
  Function: create_oss_policy_attach_bedrock_execution_role
  Function: create_policies_in_oss
  Function: create_oss
  Function: create_vector_index
  Function: create_knowledge_base
  Function: start_ingestion_job
  Function: get_knowledge_base_id
  Function: get_bucket_name
  Function: delete_kb
  Function: delete_iam_roles_and_policies
  Function: delete_s3

source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/05-create-agent-with-knowledge-base-and-action-group/agent.py:
  Function: create_dynamodb
  Function: create_lambda
  Function: create_lambda_role
  Function: create_agent_role_and_policies
  Function: delete_agent_roles_and_policies
  Function: clean_up_resources

source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/09-fine-grained-access-permissions/003_bedrock-agent/agent/agent.py:
  Function: get_named_parameter
  Function: list_claims
  Function: get_claim
  Function: update_claim
  Function: lambda_handler
  Function: verifyAccess
  Function: verifyJWT_getUserInfo
  Function: getActionID
  Function: handle_is_authorized
  Function: construct_authz_request_from_token

source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/09-fine-grained-access-permissions/004_apigateway/invoke-lambda/invoke_lambda.py:
  Function: lambda_handler

source/amazon-bedrock-samples-main/prompt-engineering/session-4/multimodal/faiss-multimodal/utils.py:
  Function: get_titan_multimodal_embedding
  Function: plot_similarity_heatmap
  Function: get_image_from_item_id
  Function: get_image_from_item_id_s3
  Function: display_images
  Function: find_similar_items_from_query
  Function: find_similar_items_from_image

source/amazon-bedrock-samples-main/introduction-to-bedrock/model_choice_converse_bedrock_streamlit.py:
  Function: invoke_bedrock_model
  Class: ModelThread
  Function: invokeModelsInParallel
  Function: __init__
  Function: run

source/amazon-bedrock-samples-main/introduction-to-bedrock/getting_started_converse_bedrock_streamlit.py:
  Function: invoke_bedrock_model

source/amazon-bedrock-samples-main/introduction-to-bedrock/model-choice-demo-converse-api.py:
  Function: invoke_bedrock_model
  Class: ModelThread
  Function: invokeModelsInParallel
  Function: __init__
  Function: run

source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-emails-bedrock/cdk-app/lambdas/process_emails_with_bedrock/lambda.py:
  Function: get_decoded_content_text
  Function: parse_float
  Function: process_emails_with_bedrock
  Function: lambda_handler

source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-emails-bedrock/cdk-app/cdk_app/cdk_app_stack.py:
  Class: ProcessEmailBedrockStack
  Function: __init__

source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-dynamodb-table-bedrock/process_dynamodb_table_bedrock/process_dynamodb_table_bedrock_stack.py:
  Class: ProcessDynamoDBTableBedrockStack
  Function: __init__

source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-dynamodb-table-bedrock/process_dynamodb_table_bedrock/populate_dynamodb_table/lambda_function.py:
  Function: save_data_to_dynamodb
  Function: lambda_handler

source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-dynamodb-table-bedrock/process_dynamodb_table_bedrock/process_dynamodb_table_bedrock_lambda/lambda_function.py:
  Function: create_emails_tags
  Function: save_extracted_info
  Function: lambda_handler

source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/main.py:
  Function: read_config
  Function: output_handler
  Function: run_notebooks
  Function: main

source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase/streamlit/chatbot.py:
  Function: generate_presigned_url

source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase/lambda/bedrock-kb-retrieveAndGenerate.py:
  Function: retrieveAndGenerate
  Function: lambda_handler

source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase/notebook/utility.py:
  Function: create_bedrock_execution_role
  Function: create_oss_policy_attach_bedrock_execution_role
  Function: create_policies_in_oss
  Function: delete_iam_role_and_policies

source/amazon-bedrock-samples-main/rag-solutions/sql-query-generator/sql_chat_ui.py:
  Function: ask_question
  Function: is_query_present
  Function: extract_query
  Function: run_query

source/amazon-bedrock-samples-main/rag-solutions/sql-query-generator/sql_query_chain.py:
  Function: sql_chain

source/amazon-bedrock-samples-main/rag-solutions/sql-query-generator/sqlite_helper.py:
  Function: run_query

source/amazon-bedrock-samples-main/rag-solutions/semantic-search/search_lib.py:
  Function: get_index
  Function: get_similarity_search_results

source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase-guardrails/lambda/bedrock-kb-retrieveAndGenerate.py:
  Function: retrieveAndGenerate
  Function: lambda_handler

source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase-guardrails/notebook/utility.py:
  Function: create_bedrock_execution_role
  Function: create_oss_policy_attach_bedrock_execution_role
  Function: create_policies_in_oss
  Function: delete_iam_role_and_policies

source/amazon-bedrock-samples-main/knowledge-bases/utility.py:
  Function: create_bedrock_execution_role
  Function: create_oss_policy_attach_bedrock_execution_role
  Function: create_policies_in_oss
  Function: delete_iam_role_and_policies
  Function: interactive_sleep
  Function: create_bedrock_execution_role_multi_ds

source/amazon-bedrock-samples-main/knowledge-bases/use-case-examples/metadata-filter-access-control/utils.py:
  Function: create_base_infrastructure
  Function: create_kb_infrastructure
  Function: updateDataAccessPolicy
  Function: createAOSSIndex
  Function: replace_vars

source/amazon-bedrock-samples-main/multimodal/Titan/titan-multimodal-embeddings/amazon-bedrock-multimodal-oss-searchengine-e2e/utils.py:
  Function: get_titan_multimodal_embedding
  Function: plot_similarity_heatmap
  Function: get_image_from_item_id
  Function: get_image_from_item_id_s3
  Function: display_images
  Function: find_similar_items_from_query
  Function: find_similar_items_from_image

source/amazon-bedrock-samples-main/multimodal/Titan/titan-multimodal-embeddings/rag/download_images.py:
  Function: download_image_file
  Function: download_images

source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-lambda-layer/lambda_base.py:
  Function: create_layer
  Function: create_functions
  Function: test_functions

source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-lambda-layer/lambda_function.py:
  Function: lambda_handler

source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-rekognition-sample/cdk/lib/lambda/rek-bedrock.py:
  Function: get_bedrock_client
  Function: create_bedrock_llm
  Function: detect_text
  Function: detect_restaurant_closure
  Function: lambda_handler

source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-vtt-file-processing-and-model-evals/chapterize.py:
  Function: chapterize

source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-vtt-file-processing-and-model-evals/bedrock_utils.py:
  Function: get_bedrock_client

source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-vtt-file-processing-and-model-evals/main.py:
  Function: read_config
  Function: output_handler
  Function: run_notebooks
  Function: main

source/amazon-bedrock-samples-main/ops-tooling/bedrock_app_custom_dashboard.py:
  Function: knowledge_base_id_to_oss_collection
  Function: knowledge_base_name_to_id
  Function: generate_dashboard_json
  Function: create_dashboard

