Repository Structure:
root/
  CODE_OF_CONDUCT.md
  .DS_Store
  CHANGELOG.md
  README.md
  NOTICE.txt
  .gitignore
  CONTRIBUTING.md
  LICENSE.txt
integration/
  summarize_code.py
  code_summary.txt
  repo_summary.txt
source/
  run-all-tests.sh
  .DS_Store
  .prettierignore
  .prettierrc.yml
  stage-assets.sh
  .eslintignore
  pre-build-lambda-layers.sh
source/model-info/
  ragchat-huggingface-google-flan-t5-xl.json
  chat-bedrock-llama2-13b-chat-v1.json
  ragchat-bedrock-anthropic-claude-instant.json
  ragchat-bedrock-cohere-command-light-text-v14.json
  chat-bedrock-ai21-j2-mid.json
  ragchat-bedrock-ai21-j2-ultra.json
  chat-bedrock-llama2-70b-chat-v1.json
  chat-huggingface-default.json
  chat-bedrock-cohere-command-light-text-v14.json
  ragchat-huggingface-ie-tiiuae-falcon7b.json
  chat-sagemaker-default.json
  ragchat-bedrock-llama2-70b-chat-v1.json
  ragchat-huggingface-ie-google-flan-t5-xl.json
  chat-bedrock-cohere-command-text-v14.json
  ragchat-bedrock-llama2-13b-chat-v1.json
  chat-huggingface-ie-tiiuae-falcon40b.json
  ragchat-huggingface-ie-tiiuae-falcon40b-instruct.json
  chat-huggingface-google-flan-t5-xxl.json
  ragchat-bedrock-amazon-titan-text-lite-v1.json
  chat-bedrock-mistralai-mistral-large-2402-v1.0.json
  ragchat-huggingface-google-flan-t5-large.json
  ragchat-bedrock-anthropic-claude-v2.1.json
  ragchat-huggingface-ie-google-flan-t5-xxl.json
  chat-bedrock-mistralai-mistral-7b-instruct-v0.2.json
  ragchat-huggingface-google-flan-t5-base.json
  ragchat-huggingface-google-flan-t5-small.json
  ragchat-bedrock-mistralai-mistral-7b-instruct-v0.2.json
  ragchat-anthropic-claude-v2.json
  ragchat-bedrock-anthropic-claude-v3.1-sonnet.json
  ragchat-bedrock-ai21-j2-mid.json
  chat-huggingface-google-flan-t5-small.json
  ragchat-huggingface-default.json
  chat-huggingface-google-flan-t5-base.json
  ragchat-bedrock-anthropic-claude-v3.1-haiku.json
  ragchat-huggingface-google-flan-t5-xxl.json
  chat-bedrock-anthropic-claude-v3.1-sonnet.json
  chat-anthropic-claude-instant.json
  chat-bedrock-anthropic-claude-v3.1-haiku.json
  chat-huggingface-google-flan-t5-xl.json
  chat-bedrock-anthropic-claude-v2.json
  chat-huggingface-google-flan-t5-large.json
  ragchat-anthropic-claude-instant.json
  chat-huggingface-ie-google-flan-t5-base.json
  ragchat-bedrock-mistralai-mistral-large-2402-v1.0.json
  ragchat-bedrock-cohere-command-text-v14.json
  ragchat-bedrock-anthropic-claude-v2.json
  chat-bedrock-anthropic-claude-v2.1.json
  chat-huggingface-ie-google-flan-t5-small.json
  chat-bedrock-mistralai-mixtral-8x7b-instruct-v0.1.json
  chat-huggingface-ie-tiiuae-falcon7b-instruct.json
  ragchat-huggingface-ie-tiiuae-falcon40b.json
  ragchat-huggingface-ie-google-flan-t5-large.json
  ragchat-sagemaker-default.json
  chat-bedrock-amazon-titan-text-lite-v1.json
  chat-bedrock-ai21-j2-ultra.json
  chat-huggingface-ie-google-flan-t5-xl.json
  ragchat-bedrock-mistralai-mixtral-8x7b-instruct-v0.1.json
  chat-bedrock-amazon-titan-text-express-v1.json
  chat-anthropic-claude-v2.json
  chat-huggingface-ie-google-flan-t5-large.json
  ragchat-huggingface-ie-tiiuae-falcon7b-instruct.json
  chat-huggingface-ie-tiiuae-falcon40b-instruct.json
  ragchat-huggingface-ie-google-flan-t5-small.json
  ragchat-huggingface-ie-google-flan-t5-base.json
  chat-huggingface-ie-tiiuae-falcon7b.json
  chat-huggingface-ie-google-flan-t5-xxl.json
  ragchat-bedrock-amazon-titan-text-express-v1.json
  chat-bedrock-anthropic-claude-instant.json
source/ui-chat/
  tailwind.config.js
  README.md
  .gitignore
  package-lock.json
  package.json
  tsconfig.json
source/ui-chat/public/
  index.html
  favicon.png
  manifest.json
  robots.txt
source/ui-chat/src/
  App.css
  index.js
  index.css
  setupTests.js
  App.js
source/ui-chat/src/home/
  home.context.tsx
  home.state.tsx
source/ui-chat/src/types/
  prompt.ts
  chat.ts
  misc.ts
source/ui-chat/src/utils/
  constants.ts
  conversation.ts
source/ui-chat/src/styles/
  globals.css
source/ui-chat/src/components/
  MemoizedReactMarkdown.tsx
  external-link-warning-modal.jsx
  PromptTemplate.tsx
  SourceDocumentsModal.tsx
  Chat.css
  ChatInput.css
  Chat.tsx
  MemoizedChatMessage.tsx
  ChatMessage.tsx
  ChatInput.tsx
  CodeBlock.tsx
source/ui-chat/src/components/__tests__/
  PromptTemplate.tsx
  Chat.tsx
  ChatMessage.tsx
  CodeBlock.tsx
source/ui-chat/src/components/__tests__/snapshot_tests/
  PromptTemplate.tsx
  Chat.tsx
  ChatMessage.tsx
  ChatInput.tsx
  CodeBlock.tsx
source/ui-chat/src/components/__tests__/snapshot_tests/__snapshots__/
  ChatMessage.tsx.snap
  CodeBlock.tsx.snap
  PromptTemplate.tsx.snap
  Chat.tsx.snap
  ChatInput.tsx.snap
source/ui-chat/src/hooks/
  useCreateReducer.ts
source/ui-deployment/
  README.md
  .gitignore
  package-lock.json
  package.json
  tsconfig.json
source/ui-deployment/public/
  index.html
  favicon.png
  manifest.json
  robots.txt
source/ui-deployment/src/
  App.css
  index.js
  index.css
  setupTests.js
  App.js
source/ui-deployment/src/contexts/
  home.context.tsx
  home.state.tsx
  index.ts
source/ui-deployment/src/utils/
  test-utils.tsx
  constants.ts
  index.ts
  utils.tsx
  mock-context.json
source/ui-deployment/src/components/
source/ui-deployment/src/components/commons/
  external-link-group.tsx
  use-column-widths.js
  external-link-warning-modal.jsx
  deploy-confirmation-modal.jsx
  table-config.jsx
  use-local-storage.ts
  localStorage.ts
  delete-notifications.tsx
  common-components.jsx
  delete-modal.jsx
  notifications.tsx
  external-link.tsx
  breadcrumbs.js
  full-page-header.tsx
  columnDefinitionsHelper.js
  index.ts
  navigation.tsx
  use-component-id.ts
  info-link.tsx
  separated-list.tsx
source/ui-deployment/src/components/commons/copy-text/
  index.tsx
  styles.css
source/ui-deployment/src/components/wizard/
  tools-content.jsx
  wizard-components.jsx
  steps-config.jsx
  utils.js
  WizardView.jsx
source/ui-deployment/src/components/wizard/VpcConfig/
  SecurityGroupAttrEditor.tsx
  DeployVpc.tsx
  SubnetIdAttrEditor.tsx
  VpcId.tsx
  index.ts
  Vpc.tsx
  UseExistingVpc.tsx
  helpers.tsx
source/ui-deployment/src/components/wizard/VpcConfig/__tests__/
  SecurityGroupAttrEditor.test.tsx
  Vpc.test.tsx
  UseExistingVpc.test.tsx
  VpcId.test.tsx
  SubnetIdAttrEditor.test.tsx
  DeployVpc.test.tsx
source/ui-deployment/src/components/wizard/KnowledgeBase/
  KnowledgeBaseSelection.tsx
  KnowledgeBaseType.tsx
  KnowledgeBase.tsx
  AdvancedKnowledgeBaseConfig.tsx
  index.ts
source/ui-deployment/src/components/wizard/KnowledgeBase/providers/
  index.ts
source/ui-deployment/src/components/wizard/KnowledgeBase/providers/Kendra/
  Kendra.tsx
  KendraQueryCapacity.tsx
  ExistingKendraIndexOption.tsx
  index.ts
  KendraIndexName.tsx
  KendraResourceRetentionWarning.tsx
  KendraIndexId.tsx
  KendraEdition.tsx
  KendraStorageCapacity.tsx
  AdditionalKendraOptions.tsx
source/ui-deployment/src/components/wizard/KnowledgeBase/providers/Kendra/__tests__/
  KendraEdition.test.tsx
  Kendra.test.tsx
  KendraStorageCapacity.test.tsx
  AdditionalKendraOptions.test.tsx
  KendraQueryCapacity.test.tsx
  ExistingKendraIndex.test.tsx
  KendraResourceRetention.test.tsx
  KendraIndexId.test.tsx
  KendraIndexName.test.tsx
source/ui-deployment/src/components/wizard/KnowledgeBase/common/
  ReturnSourceDocuments.tsx
  RetrieveDocumentCount.tsx
source/ui-deployment/src/components/wizard/KnowledgeBase/common/__tests__/
  ReturnSourceDocuments.test.tsx
  RetrieveDocumentCount.test.tsx
source/ui-deployment/src/components/wizard/KnowledgeBase/__tests__/
  KnowledgeBaseSelection.test.tsx
  KnowledgeBase.test.tsx
  AdvancedKnowledgeBaseConfig.test.tsx
  KnowledgeBaseType.test.tsx
source/ui-deployment/src/components/wizard/Review/
  UseCaseReview.tsx
  VpcConfigReview.tsx
  KnowledgeBaseReview.tsx
  Review.tsx
  InvalidPromptWarning.tsx
  ModelReview.tsx
  ReviewPrompt.tsx
  index.ts
source/ui-deployment/src/components/wizard/Review/__tests__/
  UseCaseReview.test.tsx
  VpcConfig.Review.test.tsx
  ReviewPrompt.test.tsx
  Review.test.tsx
  KnowledgeBaseReview.test.tsx
  InvalidPromptWarning.test.tsx
  ModelReview.test.tsx
source/ui-deployment/src/components/wizard/Model/
  helpers.ts
  Model.tsx
  ModelAdditionalSettings.tsx
  index.ts
  ModelSelection.tsx
source/ui-deployment/src/components/wizard/Model/providers/
  Sagemaker.tsx
  Bedrock.tsx
  HuggingFace.tsx
  HuggingFaceInferenceEndpoint.tsx
  index.ts
  Anthropic.tsx
source/ui-deployment/src/components/wizard/Model/providers/__tests__/
  HuggingFaceInferenceEndpoint.test.tsx
  Anthropic.test.tsx
  Bedrock.test.tsx
  Sagemaker.test.tsx
  HuggingFace.test.tsx
source/ui-deployment/src/components/wizard/Model/SagemakerPayloadSchema/
  helpers.ts
  InputSchema.tsx
  SagemakerPayloadSchema.tsx
  RenderedMarkdown.tsx
  RenderedInputPayload.tsx
  index.ts
  OutputSchema.tsx
source/ui-deployment/src/components/wizard/Model/SagemakerPayloadSchema/__tests__/
  OutputSchema.test.tsx
  InputSchema.test.tsx
  helpers.test.ts
  RenderedInputPayload.test.tsx
  SagemakerPayloadSchema.test.tsx
source/ui-deployment/src/components/wizard/Model/common/
  helpers.ts
  InferenceEndpointUrlInput.tsx
  ThirdPartyLegalDisclaimer.tsx
  ModelProvider.tsx
  ModelNameDropdown.tsx
  PromptTemplate.tsx
  StreamingToggle.tsx
  InferenceEndpointName.tsx
  VerboseToggle.tsx
  ApiKeyInput.tsx
  ModelTemperature.tsx
source/ui-deployment/src/components/wizard/Model/common/__tests__/
  InferenceEndpointUrlInput.test.tsx
  ThirdPartyLegalDisclaimer.test.tsx
  ModelNameDropdown.test.tsx
  ModelTemperature.test.tsx
  PromptTemplate.test.tsx
  InferenceEndpointName.test.tsx
  VerboseToggle.test.tsx
  ModelProviderDropdown.test.tsx
  StreamingToggle.test.tsx
  ApiKeyInput.test.tsx
source/ui-deployment/src/components/wizard/Model/__tests__/
  ModelAdditionalSettings.test.tsx
  ModelSelection.test.tsx
  helpers.test.ts
  Model.test.tsx
source/ui-deployment/src/components/wizard/Model/AdvancedModelSettings/
  SelectionControl.tsx
  InputControl.tsx
  index.ts
  AdvancedModelSettings.tsx
source/ui-deployment/src/components/wizard/Model/AdvancedModelSettings/__tests__/
  AdvancedModelSettings.test.tsx
source/ui-deployment/src/components/wizard/UseCase/
  UseCaseName.tsx
  UseCase.tsx
  UseCaseDescription.tsx
  index.ts
  UseCaseTypeSelection.tsx
  UserEmail.tsx
source/ui-deployment/src/components/wizard/UseCase/__tests__/
  UseCaseDescription.test.tsx
  UseCaseTypeSelection.test.tsx
  UseCaseName.test.tsx
  UseCase.test.tsx
  UserEmail.test.tsx
source/ui-deployment/src/components/wizard/interfaces/
  Steps.tsx
  RuntimeConfig.tsx
  index.ts
  BaseFormComponent.tsx
source/ui-deployment/src/components/dashboard/
  DashboardView.jsx
  hooks.js
  common-components.jsx
  deployments.js
source/ui-deployment/src/components/__tests__/
source/ui-deployment/src/components/__tests__/__mocks__/
  deployment-steps-form-data.js
  mock-context.json
source/ui-deployment/src/components/__tests__/snapshot_tests/
source/ui-deployment/src/components/__tests__/snapshot_tests/wizard/
  WizardView.tsx
  utils.test.js
source/ui-deployment/src/components/__tests__/snapshot_tests/wizard/stepComponents/
  KnowledgeBase.jsx
  Review.jsx
source/ui-deployment/src/components/__tests__/snapshot_tests/wizard/stepComponents/__snapshots__/
  Review.jsx.snap
  KnowledgeBase.jsx.snap
source/ui-deployment/src/components/__tests__/snapshot_tests/wizard/__snapshots__/
  WizardView.tsx.snap
source/ui-deployment/src/components/__tests__/snapshot_tests/dashboard/
  Dashboard.tsx
source/ui-deployment/src/components/__tests__/snapshot_tests/dashboard/__snapshots__/
  Dashboard.tsx.snap
source/ui-deployment/src/components/__tests__/snapshot_tests/useCaseDetails/
  UseCaseView.tsx
source/ui-deployment/src/components/__tests__/snapshot_tests/useCaseDetails/__snapshots__/
  UseCaseView.tsx.snap
source/ui-deployment/src/components/__tests__/wizard/
  WizardView.tsx
source/ui-deployment/src/components/__tests__/dashboard/
  DashboardView.tsx
source/ui-deployment/src/components/__tests__/useCaseDetails/
  UseCaseView.tsx
source/ui-deployment/src/components/useCaseDetails/
  tools-content.jsx
  common-components.jsx
  UseCaseView.jsx
source/ui-deployment/src/hooks/
  useCreateReducer.ts
  useQueries.ts
  useTools.tsx
source/ui-deployment/src/hooks/__tests__/
  useQueries.test.tsx
source/ui-deployment/src/i18n-strings/
  text-filter.ts
  pagination.ts
  table.ts
  app-layout.ts
  flashbar.ts
  collection-preferences.ts
  index.ts
  header.ts
source/ui-deployment/src/services/
  index.ts
  fetchModelData.ts
source/ui-deployment/src/services/__tests__/
  fetchModelData.test.ts
source/lambda/
source/lambda/model-info/
  jest.config.js
  power-tools-init.ts
  package-lock.json
  package.json
  tsconfig.json
  index.ts
source/lambda/model-info/test/
  index.test.ts
  event-test-data.ts
source/lambda/model-info/test/utils/
  model-info-retriever.test.ts
source/lambda/model-info/utils/
  http-response-formatters.ts
  model-info-retriever.ts
  check-env.ts
  constants.ts
source/lambda/websocket-connectors/
  connect-handler.ts
  jest.config.js
  package-lock.json
  package.json
  tsconfig.json
  disconnect-handler.ts
source/lambda/websocket-connectors/test/
  disconnect-handler.test.ts
  connect-handler.test.ts
source/lambda/layers/
source/lambda/layers/huggingface_hub/
  pyproject.toml
  .gitignore
  poetry.lock
source/lambda/layers/langchain/
  pyproject.toml
  .gitignore
  poetry.lock
source/lambda/layers/aws-sdk-lib/
  package-lock.json
  package.json
source/lambda/layers/aws_boto3/
  pyproject.toml
  .gitignore
  poetry.lock
source/lambda/layers/anthropic/
  pyproject.toml
  .gitignore
  poetry.lock
source/lambda/layers/aws-node-user-agent-config/
  .gitignore
  package-lock.json
  package.json
  tsconfig.json
  index.ts
source/lambda/layers/aws-node-user-agent-config/test/
  index.test.ts
source/lambda/layers/custom_boto3_init/
  pyproject.toml
  __init__.py
  .coveragerc
  .gitignore
  helper.py
  poetry.lock
  custom_config.py
source/lambda/layers/custom_boto3_init/test/
  conftest.py
  test_layer_env_config.py
  __init__.py
  test_service_instance_creation.py
source/lambda/chat/
  sagemaker_handler.py
  huggingface_handler.py
  pyproject.toml
  __init__.py
  .coveragerc
  anthropic_handler.py
  .gitignore
  bedrock_handler.py
  poetry.lock
source/lambda/chat/clients/
  bedrock_client.py
  sagemaker_client.py
  __init__.py
  llm_chat_client.py
  anthropic_client.py
  huggingface_client.py
source/lambda/chat/clients/builders/
  bedrock_builder.py
  llm_builder.py
  anthropic_builder.py
  __init__.py
  sagemaker_builder.py
  huggingface_builder.py
source/lambda/chat/clients/factories/
  knowledge_base_factory.py
  __init__.py
  conversation_memory_factory.py
source/lambda/chat/test/
  conftest.py
  __init__.py
source/lambda/chat/test/clients/
  test_anthropic_client.py
  test_huggingface_client.py
  test_llm_chat_client.py
  __init__.py
  test_sagemaker_client.py
  test_bedrock_client.py
source/lambda/chat/test/clients/builders/
  test_sagemaker_builder.py
  test_llm_builder.py
  __init__.py
  test_huggingface_builder.py
  test_anthropic_builder.py
  test_bedrock_builder.py
source/lambda/chat/test/clients/factories/
  test_conversation_memory_factory.py
  __init__.py
  test_knowledge_base_factory.py
source/lambda/chat/test/utils/
  __init__.py
  test_helpers.py
source/lambda/chat/test/shared/
source/lambda/chat/test/shared/memory/
  __init__.py
  test_ddb_chat_memory.py
  test_ddb_enhanced_chat_message_history.py
source/lambda/chat/test/shared/defaults/
  __init__.py
  test_model_defaults.py
source/lambda/chat/test/shared/knowledge/
  mock_kendra_response.json
  test_kendra_knowledge_base.py
  __init__.py
  test_kendra_retriever.py
source/lambda/chat/test/llms/
  test_anthropic.py
  test_sagemaker.py
  __init__.py
  test_bedrock.py
  test_huggingface.py
  test_base_langchain.py
source/lambda/chat/test/llms/models/
  __init__.py
source/lambda/chat/test/llms/models/bedrock_params/
  test_anthropic.py
  test_cohere.py
  __init__.py
  test_amazon.py
  test_meta.py
  test_ai21.py
source/lambda/chat/test/llms/models/sagemaker/
  test_content_handler.py
  __init__.py
source/lambda/chat/test/llms/rag/
  test_bedrock_retrieval.py
  test_huggingface_retrieval.py
  __init__.py
  test_anthropic_retrieval.py
  test_sagemaker_retrieval.py
source/lambda/chat/test/llms/factories/
  __init__.py
  test_bedrock_params_factory.py
source/lambda/chat/test/handlers/
  test_huggingface_handler.py
  test_anthropic_handler.py
  test_bedrock_handler.py
  __init__.py
  test_sagemaker_handler.py
source/lambda/chat/utils/
  constants.py
  __init__.py
  custom_exceptions.py
  enum_types.py
  helpers.py
  handler_response_formatter.py
source/lambda/chat/shared/
  __init__.py
source/lambda/chat/shared/memory/
  ddb_enhanced_message_history.py
  ddb_chat_memory.py
  __init__.py
source/lambda/chat/shared/callbacks/
  websocket_handler.py
  __init__.py
  websocket_error_handler.py
  websocket_streaming_handler.py
source/lambda/chat/shared/defaults/
  model_defaults.py
  __init__.py
source/lambda/chat/shared/knowledge/
  knowledge_base.py
  __init__.py
  kendra_retriever.py
  kendra_knowledge_base.py
source/lambda/chat/llms/
  base_langchain.py
  __init__.py
  sagemaker.py
  huggingface.py
  anthropic.py
  bedrock.py
source/lambda/chat/llms/models/
  __init__.py
  llm.py
  custom_chat_anthropic.py
  llm_params.py
source/lambda/chat/llms/models/bedrock_params/
  mistral.py
  __init__.py
  llm.py
  anthropic.py
  ai21.py
  cohere.py
  amazon.py
  meta.py
source/lambda/chat/llms/models/sagemaker/
  __init__.py
  content_handler.py
source/lambda/chat/llms/rag/
  __init__.py
  bedrock_retrieval.py
  sagemaker_retrieval.py
  huggingface_retrieval.py
  anthropic_retrieval.py
source/lambda/chat/llms/factories/
  bedrock_adapter_factory.py
  __init__.py
source/lambda/custom-authorizer/
  jest.config.js
  rest-authorizer.ts
  .gitignore
  package-lock.json
  package.json
  tsconfig.json
  websocket-authorizer.ts
source/lambda/custom-authorizer/test/
  jest-environment-variables.ts
  get-policy.test.ts
  authorizer.test.ts
  event-test-data.ts
source/lambda/custom-authorizer/utils/
  get-policy.ts
source/lambda/custom-resource/
  cfn_response.py
  lambda_ops_metrics.py
  pyproject.toml
  __init__.py
  .coveragerc
  lambda_func.py
  .gitignore
  poetry.lock
source/lambda/custom-resource/test/
  conftest.py
  __init__.py
  test_lambda_func.py
  test_lambda_ops_metrics.py
source/lambda/custom-resource/test/utils/
  test_metrics.py
  __init__.py
  test_lambda_context_parser.py
  test_metrics_payload.py
source/lambda/custom-resource/test/operations/
  test_shared.py
  test_copy_web_ui.py
  test_use_case_policy.py
  __init__.py
  test_admin_policy.py
  test_copy_model_info_to_ddb.py
  test_anonymous_metric.py
  test_update_s3_policy.py
  test_gen_uuid.py
  test_copy_api_key.py
  test_webconfig.py
  test_cw_loggroup_policy.py
source/lambda/custom-resource/test/fixtures/
  cw_loggroup_policy_events.py
  copy_web_ui_events.py
  copy_model_info_events.py
  gen_uuid_events.py
  copy_api_key_events.py
  __init__.py
  use_case_policy_events.py
  anonymous_metrics_events.py
  update_s3_policy_events.py
  admin_policy_events.py
  webconfig_events.py
source/lambda/custom-resource/utils/
  metrics.py
  lambda_context_parser.py
  constants.py
  __init__.py
  metrics_payload.py
  data.py
source/lambda/custom-resource/operations/
  webconfig.py
  operation_types.py
  cw_loggroup_policy.py
  update_s3_policy.py
  copy_web_ui.py
  __init__.py
  copy_api_key.py
  shared.py
  admin_policy.py
  copy_model_info_to_ddb.py
  anonymous_metrics.py
  gen_uuid.py
  use_case_policy.py
source/lambda/reconcile-data/
  pyproject.toml
  .coveragerc
  lambda_func.py
  poetry.lock
source/lambda/reconcile-data/test/
  conftest.py
  test_lambda_func.py
source/lambda/reconcile-data/test/operations/
  test_dynamodb_remove_case.py
source/lambda/reconcile-data/test/fixtures/
  remove_case_event.py
source/lambda/reconcile-data/exceptions/
  operation_not_found.py
source/lambda/reconcile-data/operations/
  operation_types.py
  constants.py
  dynamodb_remove_case.py
source/lambda/use-case-management/
  jest.config.js
  power-tools-init.ts
  package-lock.json
  package.json
  tsconfig.json
  index.ts
  command.ts
source/lambda/use-case-management/ssm/
  use-case-config-view-builder.ts
  use-case-config-operation-builder.ts
  config-management.ts
  web-config-builder.ts
source/lambda/use-case-management/secretsmanager/
  secret-management.ts
  api-key-secret-operation-builder.ts
source/lambda/use-case-management/test/
  index.test.ts
  command.test.ts
  event-test-data.ts
source/lambda/use-case-management/test/ssm/
  config-management.test.ts
  web-config-builder.test.ts
  use-case-config-builder.test.ts
source/lambda/use-case-management/test/secretsmanager/
  api-key-secret-operation-builder.test.ts
  secret-management.test.ts
source/lambda/use-case-management/test/ddb/
  storage-management.test.ts
  builder.test.ts
source/lambda/use-case-management/test/utils/
  http-response-formatter.test.ts
source/lambda/use-case-management/test/cfn/
  stack-operation-builder.test.ts
  stack-management.test.ts
  stack-view-builder.test.ts
source/lambda/use-case-management/test/model/
  use-case-validator.test.ts
  list-use-cases.test.ts
  use-case.test.ts
source/lambda/use-case-management/ddb/
  storage-view-builder.ts
  storage-management.ts
  storage-operation-builder.ts
source/lambda/use-case-management/utils/
  http-response-formatters.ts
  check-env.ts
  constants.ts
source/lambda/use-case-management/cfn/
  stack-operation-builder.ts
  stack-view-builder.ts
  stack-management.ts
source/lambda/use-case-management/model/
  use-case-validator.ts
  list-use-cases.ts
  use-case.ts
source/lambda/use-case-management/exception/
  missing-value-error.ts
source/infrastructure/
  jest.config.js
  cdk.json
  .gitignore
  package-lock.json
  package.json
  tsconfig.json
source/infrastructure/test/
  bedrock-chat-stack.test.ts
  sagemaker-chat-stack.test.ts
  deployment-platform-stack.test.ts
  anthropic-chat-stack.test.ts
  hugging-face-chat-stack.test.ts
source/infrastructure/test/ui/
  ui-infrstructure.test.ts
source/infrastructure/test/layers/
  runtime-lib.test.ts
  python-user-agent.test.ts
  shared-lib.test.ts
  node-user-agent.test.ts
source/infrastructure/test/framework/
  application-setup.test.ts
  base-stack.test.ts
  use-case-stack.test.ts
  external-use-case-stack.test.ts
source/infrastructure/test/auth/
  deployment-platform-cognito-setup.test.ts
  use-case-cognito-setup.test.ts
source/infrastructure/test/mock-lambda-func/
  .gitignore
source/infrastructure/test/mock-lambda-func/python-lambda/
  pyproject.toml
  __init__.py
  poetry.lock
  function.py
source/infrastructure/test/mock-lambda-func/typescript-lambda/
  .gitignore
  package-lock.json
  package.json
  tsconfig.json
  index.ts
source/infrastructure/test/mock-lambda-func/typescript-lambda/test/
  index.test.ts
source/infrastructure/test/mock-lambda-func/node-lambda/
  package-lock.json
  package.json
source/infrastructure/test/utils/
  lambda-runtimes.test.ts
  cfn-nag-suppressions.test.ts
  asset-bundling.test.ts
  solution-helper.test.ts
  lambda-aspect.test.ts
  custom-infra-setup.test.ts
  common-utils.test.ts
  app-registry.test.ts
source/infrastructure/test/storage/
  deployment-platform-storage-setup.test.ts
  deployment-platform-storage-stack.test.ts
  chat-storage-stack.test.ts
  chat-storage-setup.test.ts
  use-case-model-info-storage.test.ts
  deployment-platform-model-info-storage.test.ts
source/infrastructure/test/search/
  knowledge-base-setup.test.ts
  kendra-knowledge-base.test.ts
source/infrastructure/test/mock-ui/
  .gitignore
  package-lock.json
  package.json
  tsconfig.json
source/infrastructure/test/mock-ui/public/
  index.html
source/infrastructure/test/mock-ui/src/
  index.js
source/infrastructure/test/api/
  rest-request-processor.test.ts
  deployment-platform-rest-endpoint.test.ts
  websocket-request-processor.test.ts
  websocket-endpoint.test.ts
source/infrastructure/test/vpc/
  external-vpc-params.test.ts
  external-use-case-vpc.test.ts
  vpc-setup.test.ts
  custom-vpc.test.ts
  deployment-platform-vpc.test.ts
  use-case-custom-vpc.test.ts
  bedrock-vpc.test.ts
  first-party-use-case-vpc.test.ts
  sagemaker-vpc.test.ts
source/infrastructure/test/use-case-management/
  management-stack.test.ts
source/infrastructure/test/s3web/
  ui-asset.test.ts
  chat-use-case-ui-asset.test.ts
  static-site.test.ts
source/infrastructure/bin/
  gen-ai-app-builder.ts
source/infrastructure/lib/
  bedrock-chat-stack.ts
  sagemaker-chat-stack.ts
  anthropic-chat-stack.ts
  hugging-face-chat-stack.ts
  deployment-platform-stack.ts
source/infrastructure/lib/metrics/
  custom-dashboard.ts
  use-case-dashboard.ts
  deployment-platform-dashboard.ts
source/infrastructure/lib/ui/
  ui-infrastructure.ts
source/infrastructure/lib/layers/
  shared-lib.ts
  python-user-agent.ts
  node-user-agent.ts
  ts-user-agent.ts
  runtime-libs.ts
source/infrastructure/lib/framework/
  base-stack.ts
  use-case-stack.ts
  ui-asset.ts
  application-setup.ts
  external-use-case-stack.ts
source/infrastructure/lib/auth/
  deployment-platform-cognito-setup.ts
  cognito-setup.ts
  use-case-cognito-setup.ts
source/infrastructure/lib/utils/
  cfn-nag-suppressions.ts
  nested-stack-parameters.ts
  app-registry-aspects.ts
  custom-infra-setup.ts
  lambda-runtimes.ts
  lambda-aspect.ts
  constants.ts
  asset-bundling.ts
  common-utils.ts
  solution-helper.ts
source/infrastructure/lib/storage/
  chat-storage-stack.ts
  rds-2-s3
  chat-storage-setup.ts
  deployment-platform-storage-setup.ts
  deployment-platform-model-info-storage.ts
  deployment-platform-storage-stack.ts
  model-info-storage.ts
  use-case-model-info-storage.ts
source/infrastructure/lib/search/
  kendra-knowledge-base.ts
  knowledge-base-setup.ts
source/infrastructure/lib/api/
  rest-request-processor.ts
  deployment-platform-rest-endpoint.ts
  websocket-request-processor.ts
  websocket-endpoint.ts
source/infrastructure/lib/api/model-schema/
  update-usecase-response.ts
  deploy-usecase-body.ts
  deploy-usecase-response.ts
  update-usecase-body.ts
source/infrastructure/lib/vpc/
  vpc-setup.ts
  first-party-use-case-vpc.ts
  exisiting-vpc-params.ts
  deployment-platform-vpc.ts
  use-case-custom-vpc.ts
  custom-vpc.ts
  bedrock-vpc.ts
  external-use-case-vpc.ts
  sagemaker-vpc.ts
source/infrastructure/lib/use-case-management/
  setup.ts
  management-stack.ts
source/infrastructure/lib/s3web/
  deployment-platform-ui-asset.ts
  static-site.ts
  chat-use-case-ui-asset.ts
source/amazon-bedrock-samples-main/
  CODE_OF_CONDUCT.md
  LICENSE
  README.md
  .gitignore
  CONTRIBUTING.md
source/amazon-bedrock-samples-main/bedrock-fine-tuning/
  README.md
source/amazon-bedrock-samples-main/bedrock-fine-tuning/amazon-titan-image-generator/
  README.md
  1-TIGFT-customization-job.ipynb
  2-TIGFT-provisioned-throughput-inference.ipynb
source/amazon-bedrock-samples-main/bedrock-fine-tuning/amazon-titan-image-generator/prompts/
  captions.json
source/amazon-bedrock-samples-main/bedrock-fine-tuning/amazon-titan-image-generator/data/
  smila_07.jpg
  smila_13.jpg
  smila_12.jpg
  smila_06.jpg
  smila_10.jpg
  smila_04.jpg
  smila_05.jpg
  smila_11.jpg
  smila_15.jpg
  smila_01.jpg
  smila_29.jpg
  smila_28.jpg
  smila_14.jpg
  smila_02.jpg
  smila_16.jpg
  smila_17.jpg
  smila_03.jpg
  ron_14.jpg
  ron_28.jpg
  ron_29.jpg
  ron_15.jpg
  ron_01.jpg
  ron_17.jpg
  ron_03.jpg
  ron_02.jpg
  ron_16.jpg
  ron_12.jpg
  ron_06.jpg
  smila_ft_2.png
  ron_07.jpg
  ron_13.jpg
  ron_05.jpg
  ron_11.jpg
  smila_ft_1.png
  ron_10.jpg
  ron_04.jpg
  ron_21.jpg
  ron_09.jpg
  ron_08.jpg
  ron_20.jpg
  ron_22.jpg
  ron_23.jpg
  ron_27.jpg
  ron_ft_2.png
  ron_26.jpg
  ron_18.jpg
  ron_24.jpg
  ron_30.jpg
  ron_ft_1.png
  ron_25.jpg
  ron_19.jpg
  smila_26.jpg
  smila_27.jpg
  smila_19.jpg
  smila_25.jpg
  smila_24.jpg
  smila_30.jpg
  smila_18.jpg
  smila_20.jpg
  smila_08.jpg
  smila_09.jpg
  smila_21.jpg
  smila_23.jpg
  smila_22.jpg
source/amazon-bedrock-samples-main/bedrock-fine-tuning/meta-llama/
  README.md
  02_fine-tune_and_evaluate_llama2_bedrock_summarization.ipynb
  00_setup.ipynb
  03_cleanup.ipynb
source/amazon-bedrock-samples-main/function-calling/
  legacy-function-calling-with-Claude.ipynb
  create_athena_catalog.py
  advanced_fn_calling_w_claude3.ipynb
  Migrating_from_OAI_Bedrock_converse.ipynb
  tool_use_with_pydantic_Bedrock_converse.ipynb
  README.md
  fc_pydantic_class_converse_bedrock.py
  function_calling_text2SQL_converse_bedrock_streamlit.py
  Extracting_structured_json_Bedrock_converse.ipynb
  fc_migrations_converse_bedrock_streamlit.py
  Anthropic_cookbook_extracting_structured_json_Bedrock_converse.ipynb
  function_calling_converse_bedrock_streamlit.py
  Function_calling_tool_use_with_Converse_API.ipynb
source/amazon-bedrock-samples-main/function-calling/images/
  bedrock.png
  weather.jpg
  AWS_logo_RGB.png
source/amazon-bedrock-samples-main/agents-for-bedrock/
  README.md
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/product-review-agent/
  main.ipynb
  requirements.txt
  README.md
  agent.py
  app.py
  main.py
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/product-review-agent/architecture/
  architecture.jpeg
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation/
  CODE_OF_CONDUCT.md
  LICENSE
  README.md
  CONTRIBUTING.md
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation/design/
  total-claim-amount-asset.png
  streamlit-app.png
  send-reminder-email.png
  kb-console-testing.png
  agent-kb-configuration.png
  agent-prepared-banner.png
  ag-configuration.png
  send-reminder.png
  kb-ds-s3-configuration.png
  agent-console-testing.png
  kb-embeddings.png
  agent-overview.png
  kb-select-model.png
  existing-claims-table.png
  demo-thumbnail.png
  agent-configuration.png
  ag-tracing.png
  create-new-claim.png
  agent-creation-banner.png
  agent-console-example.png
  kb-ds-overview.png
  existing-claims-table-2.png
  kb-console-2.png
  repair-estimate.png
  agent-prepare.png
  kb-configuration.png
  kb-console-1.png
  kb-tracing.png
  agent-console-example-2.png
  agent-console-1.png
  kb-overview.png
  total-claim-amount-prompt.png
  ag-openapi.png
  agent-console-2.png
  agent-console-3.png
  kb-creation-banner.png
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation/documentation/
  deployment-guide.md
  testing-and-validation.md
  clean-up.md
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation/shell/
  delete-customer-resources.sh
  create-customer-resources.sh
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation/agent/
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation/agent/streamlit/
  bedrock_streamlit.py
  requirements.txt
  sigv4.py
  setup-streamlit-env.sh
  bedrock_logo.png
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation/agent/knowledge-base-assets/
  Claim_2s34w-8x_Amounts.pdf.metadata.json
  AccidentReport_file_requirements.docx.metadata.json
  AccidentImages_file_requirements.docx.metadata.json
  Claim_2s34w-8x_RepairEstimate.pdf
  Claim_3b45c-9d_Amounts.pdf.metadata.json
  Claim_5t16u-7v_Amounts.pdf
  Claim_3b45c-9d_RepairEstimate.pdf
  Claim_2s34w-8x_RepairEstimate.pdf.metadata.json
  AccidentImages_file_requirements.docx
  Internal-Insurance-FAQs.xlsx
  External-Insurance-FAQs.xlsx.metadata.json
  Claim_5t16u-7v_RepairEstimate.pdf.metadata.json
  Claim_5t16u-7v_Amounts.pdf.metadata.json
  Driverlicense_file_requirements.docx.metadata.json
  Driverlicense_file_requirements.docx
  External-Insurance-FAQs.xlsx
  Claim_3b45c-9d_RepairEstimate.pdf.metadata.json
  Internal-Insurance-FAQs.xlsx.metadata.json
  Claim_5t16u-7v_RepairEstimate.pdf
  VehicleRegistration_file_requirements.docx
  VehicleRegistration_file_requirements.docx.metadata.json
  Claim_2s34w-8x_Amounts.pdf
  Claim_3b45c-9d_Amounts.pdf
  AccidentReport_file_requirements.docx
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation/agent/lambda/
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation/agent/lambda/data-loader/
  index.py
  loader_deployment_package.zip
  claims.json
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation/agent/lambda/action-groups/
  send_reminder.py
  gather_evidence.py
  create_claim.zip
  send_reminder.zip
  gather_evidence.zip
  create_claim.py
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation/agent/lambda/lambda-layer/
  cfnresponse-layer.zip
  bedrock-agents-layer.zip
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation/agent/api-schema/
  send_reminder.json
  gather_evidence.json
  create_claim.json
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation/cfn/
  bedrock-customer-resources.yml
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/ai-powered-assistant-for-investment-research/
  cloudformation.yaml
  CODE_OF_CONDUCT.md
  LICENSE
  README.md
  CONTRIBUTING.md
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/ai-powered-assistant-for-investment-research/images/
  upload_files.png
  open_jupyter_instance.png
  converted_pdffiles_s3.png
  specify_stack_details.png
  audio_output.png
  ag8.png
  ag11.png
  bedrock-access2.JPG
  ag10.png
  ag9.png
  stack_resources.png
  output_bucket.png
  studio-new-launcher.png
  architecture-diagram.png
  create_stack.png
  kb3.png
  kb2.png
  pdf_output.png
  bedrock-access.jpg
  kb1.png
  create_folder.png
  files_uploaded.png
  kb5.png
  kb4.png
  kb6.png
  kb7.png
  ag7.png
  sg-rules.PNG
  create_bucket.png
  ag6.png
  ag4.png
  ag5.png
  open_cloudshell.png
  ag1.png
  converted_audiofiles_s3.png
  upload_stack.png
  ag0.png
  enter_folder_name.png
  ag2.png
  select_files.png
  ag3.png
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/ai-powered-assistant-for-investment-research/files/
  Amazon-Quarterly-Earnings-Report-Q1-2023-Full-Call-v1.mp3
  openapi_stock_query.json
  FSI-StockQuery-BedrockAgent-4bed2482-a84f-4d9b-b53c-37220fd4b9bb.zip
  FSI-TextractProcessingFunction-b6054c5e-0286-4cfb-a2f3-55d408a9972c.zip
  openapi_portfolio.json
  openapi_sentiment.json
  Amazon-10K-2022-EarningsReport.pdf
  stock_prices.csv
  FSI-SentimentDetecttion-BedrockAgent-6aebee60-d2df-464c-b652-b93e2aef7b3a.zip
  FSI-TextractAsyncInvocationFunction-759363ea-7b4b-411c-a96f-b137a595387b.zip
  agents-layer-porfolio.zip
  FSI-Transcribe-66a4860d-390a-4af5-aa1b-05fb469be7ac.zip
  openapi_keyphrases.json
  FSI-KeyPhrasesDetection-BedrockAgent-21b0f3b8-f981-4db6-a0ce-606a13e9c35f.zip
  Amazon-10Q-Q1-2023-QuaterlyEarningsReport.pdf
  agents-layer-stock-query.zip
  FSI-PortfolioTool-BedrockAgent-9a4cdb9f-14b9-4658-9720-537735bf2b1c.zip
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/text-2-sql-agent/
  README.md
  create_and_invoke_sql_agent.ipynb
  lambda_function.py
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/text-2-sql-agent/images/
  text-to-sql-architecture-Athena.png
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/text-2-sql-agent/dependencies/
  config.py
  clean.py
  build_infrastructure.py
  text_to_sql_openapi_schema.json
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/text-2-sql-agent/data/
  TheHistoryofBaseball.zip
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/customer-relationship-management-agent/
  requirements.txt
  Dockerfile
  deploy.yaml
  README.md
  app.py
  infrastructure.yaml
  codepipeline.yaml
  architecture.png
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/customer-relationship-management-agent/util/
  __init__.py
  bedrock.py
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/customer-relationship-management-agent/src/
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/customer-relationship-management-agent/src/bedrock-agent/
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/customer-relationship-management-agent/src/bedrock-agent/basic/
  crm-bot-lambda.py
  crm-bot-lambda.zip
  crm_schema.json
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/customer-relationship-management-agent/src/bedrock-agent/jira/
  crm-bot-lambda.py
  crm-bot-lambda.zip
  crm_schema.json
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/customer-relationship-management-agent/src/data/
  data.zip
  interactions.png
  prompt.py
  upload_data.py
  customers.png
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/agentsforbedrock-retailagent/
  csbot_agent.py
  customerservicebot.json
  README.md
  csbot_agent_template.yml
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/agentsforbedrock-retailagent/workshop/
  test_retailagent_agentsforbedrock.ipynb
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/agentsforbedrock-retailagent/img/
  ML-15539-sequence-flow-agents.png
  ML-15539-agent-trace1.png
  ML-15539-AgentsBlog.drawio
  ML-15539-agents-menu.png
  ML-15539-agent-model.png
  ML-15539-agent-trace2.png
  ML-15539-agent-trace3.png
  ML-15539-cfn-launch-stack.png
  ML-15539-agent-test.png
  ML-15539-cfn-stack-delete.png
  ML-15539-agent-action-groups.png
  ML-15539-agent-alias.png
  ML-15539-agent-response.png
  ML-15539-agent-details.png
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/agentsforbedrock-retailagent/open-api-spec/
  customerservicebot.json
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/agentsforbedrock-retailagent/data/
  demo_csbot_db
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/hr-assistant/
  CODE_OF_CONDUCT.md
  LICENSE
  README.md
  CONTRIBUTING.md
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/hr-assistant/documentation/
  deployment-guide.md
  clean-up.md
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/hr-assistant/streamlit/
  requirements.txt
  agent_streamlit.py
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/hr-assistant/imgs/
  15_streamlit.png
  00_youtube_thumbnail.png
  12_agent_working_draft.png
  03_kb_review.png
  11_agent_overview.png
  04_kb_creation_banner.png
  14_testing.png
  13_create_alias.png
  05_kb_data_sync.png
  10_associated_actions_withkb.png
  01_cfn_resources.png
  06_kb_id.png
  01_agent-overview.png
  09_associated_actions.png
  08_hr_agent.png
  07_kb_ds_id.png
  02_kb_data_source.png
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/hr-assistant/shell/
  delete-hr-resources.sh
  create-hr-resources.sh
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/hr-assistant/agent/
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/hr-assistant/agent/knowledge-base-assets/
  pay-february.json
  Aglaia_Benefit_Policy.pdf
  pay-january.json
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/hr-assistant/agent/lambda/
  index.py
  calendar_integration.py
  athena_sql_query.py
  __init__.py
  hr_function.zip
  generate_image.py
  email_integration.py
  slack_integration.py
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/hr-assistant/agent/api-schema/
  action-groups.txt
  slack-action-group.json
  send-email-action-group.json
  calendar-action-group.json
  sql-action-group.json
  calendar-availability-action-group.json
  generate-image-action-group.json
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/hr-assistant/cfn/
  hr-resources.yml
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/text-2-sql-agent-cdk-enhanced/
  setup.sh
  requirements.txt
  cdk.json
  claude_3.py
  agent_instruction_generator.py
  Prep_Data.py
  Readme.md
  package-lock.json
  package.json
  text_to_sql_openapi_schema.json
  app.py
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/text-2-sql-agent-cdk-enhanced/lambda/
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/text-2-sql-agent-cdk-enhanced/lambda/agent/
  index.py
source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/text-2-sql-agent-cdk-enhanced/Data/
  EV_WA.zip
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/
  README.md
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/06-prompt-and-session-attributes/
  06-prompt-and-session-attributes.ipynb
  README.md
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/07-advanced-prompts-and-custom-parsers/
  07-custom-prompt-and-lambda-parsers.ipynb
  README.md
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/02-create-agent-with-api-schema/
  02-create-agent-with-api-schema.ipynb
  insurance_claims_agent_openapi_schema.json
  README.md
  lambda_function.py
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/02-create-agent-with-api-schema/images/
  architecture.png
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/03-create-agent-with-return-of-control/
  README.md
  03-create-agent-with-return-of-control.ipynb
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/03-create-agent-with-return-of-control/images/
  HR_DB.png
  architecture.png
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/05-create-agent-with-knowledge-base-and-action-group/
  knowledge_base.py
  requirements.txt
  README.md
  agent.py
  05-create-agent-with-knowledge-base-and-action-group.ipynb
  agenteval.yml
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/05-create-agent-with-knowledge-base-and-action-group/images/
  architecture.png
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/05-create-agent-with-knowledge-base-and-action-group/dataset/
  Restaurant_Childrens_Menu.pdf
  Restaurant_Dinner_Menu.pdf
  Restaurant_week_specials.pdf
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/04-create-agent-with-single-knowledge-base/
  agents-with-kb.png
  README.md
  04-create-agent-with-single-knowledge-base.ipynb
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/04-create-agent-with-single-knowledge-base/kb_documents/
  bedrock-ug.pdf
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/04-create-agent-with-single-knowledge-base/images/
  architecture.png
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/10-create-agent-with-memory/
  10-create-agent-with-memory.ipynb
  README.md
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/10-create-agent-with-memory/images/
  architecture.png
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/09-fine-grained-access-permissions/
  template.yaml
  README.md
  .gitignore
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/09-fine-grained-access-permissions/005_Frontend/
  .gitignore
  package.json
  amplify-headless-init-payload.json
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/09-fine-grained-access-permissions/005_Frontend/public/
  index.html
  manifest.json
  robots.txt
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/09-fine-grained-access-permissions/005_Frontend/src/
  reportWebVitals.js
  App.css
  index.js
  index.css
  aws-exports.tmplt.js
  App.test.js
  setupTests.js
  App.js
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/09-fine-grained-access-permissions/001_avp/
  template.yaml
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/09-fine-grained-access-permissions/images/
  claims-invoke-bedrock-agent.png
  claims-app.png
  bedrock-model-access.png
  Architecture_AVP_bedrock_agents.jpg
  claims-actiongroup-lambda.png
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/09-fine-grained-access-permissions/003_bedrock-agent/
  template.yaml
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/09-fine-grained-access-permissions/003_bedrock-agent/agent/
  requirements.txt
  agent.py
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/09-fine-grained-access-permissions/004_apigateway/
  template.yaml
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/09-fine-grained-access-permissions/004_apigateway/invoke-lambda/
  requirements.txt
  invoke_lambda.py
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/09-fine-grained-access-permissions/002_cognito/
  template.yaml
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/01-create-agent-with-function-definition/
  README.md
  01-create-agent-with-function-definition.ipynb
source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/01-create-agent-with-function-definition/images/
  HR_DB.png
  architecture.png
source/amazon-bedrock-samples-main/prompt-engineering/
  Prompt Decomposition.ipynb
  README.md
  Prompt Evaluation.ipynb
source/amazon-bedrock-samples-main/prompt-engineering/session-4/
  Setup.ipynb
  requirements.txt
  Chat_application.ipynb
  Function_agent.ipynb
source/amazon-bedrock-samples-main/prompt-engineering/session-4/faiss-diy/
  index.faiss
  index.pkl
source/amazon-bedrock-samples-main/prompt-engineering/session-4/images/
  embeddings_lang.png
  chatbot_bedrock.png
  terminal.png
  chatbot_lang.png
  vector_embedding.png
  api.png
  context-aware-chatbot.png
  vector_db.jpg
source/amazon-bedrock-samples-main/prompt-engineering/session-4/multimodal/
  README.md
source/amazon-bedrock-samples-main/prompt-engineering/session-4/multimodal/images/
  titan-embeddings-g1-image.png
source/amazon-bedrock-samples-main/prompt-engineering/session-4/multimodal/faiss-multimodal/
  mm_search.ipynb
  README.md
  utils.py
  CONTRIBUTING.md
  LICENSE.txt
source/amazon-bedrock-samples-main/prompt-engineering/session-4/multimodal/faiss-multimodal/images/
  departure_rate.jpg
  contextual_search_arch.png
source/amazon-bedrock-samples-main/prompt-engineering/session-4/multimodal/faiss-multimodal/data/
source/amazon-bedrock-samples-main/prompt-engineering/session-4/multimodal/faiss-multimodal/data/images/
  ea0c6da6.jpg
  075e5d67.jpg
source/amazon-bedrock-samples-main/prompt-engineering/session-4/data/
source/amazon-bedrock-samples-main/prompt-engineering/session-4/data/letter/
  2022.txt
source/amazon-bedrock-samples-main/prompt-engineering/session-4/data/book/
  book.txt
source/amazon-bedrock-samples-main/prompt-engineering/session-4/data/sagemaker/
  sm_faq_v2.csv
  sagemaker_faqs.csv
source/amazon-bedrock-samples-main/prompt-engineering/session-4/faiss-index/
source/amazon-bedrock-samples-main/prompt-engineering/session-4/faiss-index/llama-index/
  vector_store.json
  graph_store.json
  index_store.json
  docstore.json
source/amazon-bedrock-samples-main/prompt-engineering/session-4/faiss-index/langchain/
  index.faiss
  index.pkl
source/amazon-bedrock-samples-main/prompt-engineering/images/
  prompt_engineering.png
source/amazon-bedrock-samples-main/introduction-to-bedrock/
  bedrock_anthropic_claude3.py
  bedrock_stability.py
  model_choice_converse_bedrock_streamlit.py
  bedrock_amazon_titan_embeddings.py
  bedrock_api.py
  bedrock_mixtral.py
  Getting_started_with_Converse_API.ipynb
  getting_started_converse_bedrock_streamlit.py
  README.md
  bedrock_amazon_titan_text.py
  bedrock_cohere.py
  bedrock_anthropic.py
  cat.png
  bedrock_mistral.py
  Getting_started_with_Prompt_Management_Flows.ipynb
  bedrock_meta.py
  bedrock_sdk.py
  model-choice-demo-converse-api.py
  bedrock_streaming.py
  Claude-MessagesAPI-Examples.ipynb
  bedrock_ai21.py
source/amazon-bedrock-samples-main/introduction-to-bedrock/images/
  bedrock.png
  bedrock_models.png
source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/
  README.md
  GettingStartedWithAmazonBedrock.ipynb
source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-emails-bedrock/
  requirements.txt
  README.md
source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-emails-bedrock/cdk-app/
  requirements.txt
  cdk.json
  source.bat
  .gitignore
  app.py
source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-emails-bedrock/cdk-app/lambdas/
  bedrock_boto3_layer.zip
  build_lambda_layer.sh
source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-emails-bedrock/cdk-app/lambdas/process_emails_with_bedrock/
  lambda.py
  prompt.txt
source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-emails-bedrock/cdk-app/cdk_app/
  __init__.py
  cdk_app_stack.py
source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-emails-bedrock/manual_steps/
  4-create-rule-step-2.png
  3-create-rule-step-1.png
  2-activate-rule-set.png
  5-create-rule-step-3-add-action.png
  7-create-rule-complete.png
  1-email-receiving-create-rule-set.png
  6-create-rule-step-3-choose-sns-topic.png
source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-dynamodb-table-bedrock/
  requirements.txt
  Makefile
  cdk.json
  source.bat
  README.md
  requirements-dev.txt
  app.py
source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-dynamodb-table-bedrock/process_dynamodb_table_bedrock/
  __init__.py
  process_dynamodb_table_bedrock_stack.py
source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-dynamodb-table-bedrock/process_dynamodb_table_bedrock/cdk_helper_scripts/
source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-dynamodb-table-bedrock/process_dynamodb_table_bedrock/cdk_helper_scripts/zipimage/
  Dockerfile
source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-dynamodb-table-bedrock/process_dynamodb_table_bedrock/populate_dynamodb_table/
  emails.csv
  lambda_function.py
source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-dynamodb-table-bedrock/process_dynamodb_table_bedrock/process_dynamodb_table_bedrock_lambda/
  prompt.txt
  lambda_function.py
source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-dynamodb-table-bedrock/images/
  extracted_info_details.png
  tables_menu1.png
  email-processing-app.png
  tables_list.png
  navigate_lambda.png
  lambda_outputs.png
  table_items.png
  architecture_diagram.png
  extracted_information.png
  test_event.png
  navigate_dynamodb.png
  test_button.png
  explore_items.png
source/amazon-bedrock-samples-main/introduction-to-bedrock/java/
  README.md
source/amazon-bedrock-samples-main/introduction-to-bedrock/java/my-app/
  pom.xml
source/amazon-bedrock-samples-main/introduction-to-bedrock/java/my-app/src/
source/amazon-bedrock-samples-main/introduction-to-bedrock/java/my-app/src/main/
source/amazon-bedrock-samples-main/introduction-to-bedrock/java/my-app/src/main/java/
source/amazon-bedrock-samples-main/introduction-to-bedrock/java/my-app/src/main/java/com/
source/amazon-bedrock-samples-main/introduction-to-bedrock/java/my-app/src/main/java/com/mycompany/
source/amazon-bedrock-samples-main/introduction-to-bedrock/java/my-app/src/main/java/com/mycompany/app/
  App.java
source/amazon-bedrock-samples-main/model-evals/
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/
  1_get_inference.ipynb
  LICENSE
  requirements.txt
  config.yaml
  README.md
  main.py
  2_run_llm_as_a_judge_eval.ipynb
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/img/
  llm_as_a_judge.png
  llm_as_a_judge.drawio
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/9/
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/9/meta.llama3-70b-instruct-v1-0/
  model_evaluation_9.json
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/0/
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/0/meta.llama3-70b-instruct-v1-0/
  model_evaluation_0.json
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/7/
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/7/meta.llama3-70b-instruct-v1-0/
  model_evaluation_7.json
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/6/
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/6/meta.llama3-70b-instruct-v1-0/
  model_evaluation_6.json
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/1/
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/1/meta.llama3-70b-instruct-v1-0/
  model_evaluation_1.json
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/8/
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/8/meta.llama3-70b-instruct-v1-0/
  model_evaluation_8.json
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/4/
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/4/meta.llama3-70b-instruct-v1-0/
  model_evaluation_4.json
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/3/
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/3/meta.llama3-70b-instruct-v1-0/
  model_evaluation_3.json
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/2/
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/2/meta.llama3-70b-instruct-v1-0/
  model_evaluation_2.json
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/5/
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/eval_completions/5/meta.llama3-70b-instruct-v1-0/
  model_evaluation_5.json
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/data/
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/data/source_data/
  data.csv
  data_user_system_prompt_version.csv
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/data/prompt_template/
  claude_inference_prompt_template.txt
  llama3_eval_prompt.txt
  claude_final_summary_prompt.txt
  claude_eval_prompt.txt
source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/data/results/
  final_analysis.txt
  processed_eval_prompts.csv
  llm_as_a_judge_comparisons.txt
  llm_as_a_judge_pick_rate.csv
  llm_as_a_judge_comparisons.csv
  inference_latency_summary.txt
  all_explanations.txt
  all_results.csv
source/amazon-bedrock-samples-main/rag-solutions/
  README.md
source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase/
  README.md
source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase/streamlit/
  chatbot.py
source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase/images/
  kb-vectorstore.jpg
  lambda-layer.jpg
  kb-syncing.png
  kb-syncing.jpg
  kb-body.jpg
  streamlit-filled.jpg
  bedrock-left.jpg
  kb-details.jpg
  cfn-body.jpg
  share-holders.jpg
  architecture_1.jpg
  share-holders.png
  cfn-specify.jpg
  architecture_2.jpg
  kb-datasource.jpg
  kb-readysync.jpg
  streamlit-filled-withanswer.png
  streamlit-blank.jpg
  kb-ready.jpg
  kb-ready.png
  kb-review.jpg
  cfn-create.jpg
  s3-objects.jpg
  kb-sync.jpg
source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase/cfn/
  DeployKnowledgeBase.yaml
source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase/lambda/
  bedrock-kb-retrieveAndGenerate.py
source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase/lambda/layer/
  knowledgebase_lambdalayer.zip
source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase/notebook/
  knowledge_base_create_ingest_documents.ipynb
  utility.py
source/amazon-bedrock-samples-main/rag-solutions/sql-query-generator/
  requirements.txt
  README.md
  sql_chat_ui.py
  northwind.db
  sql_query_chain.py
  sqlite_helper.py
  northwind_ddl.sql
source/amazon-bedrock-samples-main/rag-solutions/sql-query-generator/images/
  sql_chat_ui.png
source/amazon-bedrock-samples-main/rag-solutions/multimodal-rag-pdf/
  README.md
source/amazon-bedrock-samples-main/rag-solutions/multimodal-rag-pdf/rag/
  multimodal-rag-pdf.ipynb
source/amazon-bedrock-samples-main/rag-solutions/multimodal-rag-pdf/rag/diagrams/
  multimodal-rag-inference.drawio.png
  multimodal-rag.drawio.png
source/amazon-bedrock-samples-main/rag-solutions/semantic-search/
  requirements.txt
  search_lib.py
  README.md
  search_app.py
  bedrock_faqs.csv
source/amazon-bedrock-samples-main/rag-solutions/llamaindex-examples/
  Basic_RAG_With_LlamaIndex.ipynb
  Router_Query_Engine.ipynb
  Multi_Document_Agent.ipynb
  2_llama_index_bedrock_kb.ipynb
  SubQuestion_Query_Engine.ipynb
  1_llama_parse_upload_s3.ipynb
  ReAct_Agent.ipynb
source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase-guardrails/
  README.md
source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase-guardrails/streamlit/
  chatbot.py
source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase-guardrails/images/
  kb-vectorstore.jpg
  lambda-layer.jpg
  kb-syncing.png
  gr-create.png
  kb-syncing.jpg
  kb-body.jpg
  streamlit-filled.jpg
  bedrock-left.jpg
  gr-image.png
  kb-details.jpg
  cfn-body.jpg
  share-holders.jpg
  architecture_1.jpg
  share-holders.png
  cfn-specify.png
  cfn-specify.jpg
  architecture_2.jpg
  kb-datasource.jpg
  gr-create-new.png
  gr-add-word.png
  kb-readysync.jpg
  streamlit-blank.jpg
  kb-ready.jpg
  kb-ready.png
  streamlit-filled-checked.jpg
  kb-review.jpg
  gr-version.png
  cfn-create.jpg
  s3-objects.jpg
  kb-sync.jpg
source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase-guardrails/cfn/
  DeployKnowledgeBase.yaml
source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase-guardrails/lambda/
  bedrock-kb-retrieveAndGenerate.py
source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase-guardrails/lambda/layer/
  knowledgebase_lambdalayer.zip
source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase-guardrails/notebook/
  knowledge_base_create_ingest_documents.ipynb
  utility.py
source/amazon-bedrock-samples-main/rag-solutions/rag-foundations-workshop/
  LICENSE
  requirements.txt
  README.md
source/amazon-bedrock-samples-main/rag-solutions/rag-foundations-workshop/faiss-diy/
  index.faiss
  index.pkl
source/amazon-bedrock-samples-main/rag-solutions/rag-foundations-workshop/data/
source/amazon-bedrock-samples-main/rag-solutions/rag-foundations-workshop/data/letter/
  2022.txt
source/amazon-bedrock-samples-main/rag-solutions/rag-foundations-workshop/data/book/
  book.txt
source/amazon-bedrock-samples-main/rag-solutions/rag-foundations-workshop/data/sagemaker/
  Amazon-com-Inc-2023-Shareholder-Letter.pdf
  Amazon_SageMaker_FAQs.pdf
  sm_faq_v2.csv
  sagemaker_faqs.csv
source/amazon-bedrock-samples-main/rag-solutions/rag-foundations-workshop/notebooks/
  04_retrieval_based_chat_application.ipynb
  03_retrieval_based_text_application.ipynb
  05_agent_based_text_generation.ipynb
  02_contextual_text_generation.ipynb
  04_retrieval_based_chat.ipynb
  01_workshop_setup.ipynb
  06_build_yourself.ipynb
  06_DO_NOT_OPEN_build_yourself_answers.ipynb
source/amazon-bedrock-samples-main/rag-solutions/rag-foundations-workshop/notebooks/images/
  embeddings_lang.png
  chatbot_bedrock.png
  terminal.png
  chatbot_lang.png
  model_eval.png
  api.png
  context-aware-chatbot.png
source/amazon-bedrock-samples-main/rag-solutions/rag-foundations-workshop/faiss-index/
source/amazon-bedrock-samples-main/rag-solutions/rag-foundations-workshop/faiss-index/llama-index/
  vector_store.json
  graph_store.json
  index_store.json
  docstore.json
source/amazon-bedrock-samples-main/rag-solutions/rag-foundations-workshop/faiss-index/langchain/
  index.faiss
  index.pkl
source/amazon-bedrock-samples-main/knowledge-bases/
  utility.py
  README.md
source/amazon-bedrock-samples-main/knowledge-bases/01-rag-concepts/
  4_customized-rag-retreive-api-titan-lite-evaluation.ipynb
  2a_managed_rag_kb_retrieve_generate_api.ipynb
  1b_create_ingest_documents_test_kb_multi_ds.ipynb
  6_customized-rag-retreive-api-langchain-claude-v2-online-evaluation-ragas.ipynb
  1a_create_ingest_documents_test_kb.ipynb
  5_customized-rag-retreive-api-langchain-claude-evaluation-ragas.ipynb
  3_customized-rag-retreive-api-hybrid-search-claude-3-sonnet-langchain.ipynb
  2b_managed_rag_custom_prompting_and_no_of_results.ipynb
source/amazon-bedrock-samples-main/knowledge-bases/01-rag-concepts/images/
  rag-eval-flow-guidelines.png
  LangfuseAPIKEY.png
  rag-eval-flow-correctness.png
  rag-eval-online-langfuse.png
  no-of-results-1.png
  rag-eval-flow-faithfulness.png
  no-of-results-2.png
  rag-eval-flow-relevancy.png
  data_ingestion.png
  LangfuseTraceDetailsGeneration.jpg
  retrieveAPI.png
  LangfuseTraceDetailsRetreive.jpg
  LangfuseTraceDetail.jpg
  retrieveAndGenerate.png
  custom-prompting-0.png
  custom-prompting-1.png
  custom-prompting-2.png
source/amazon-bedrock-samples-main/knowledge-bases/01-rag-concepts/optimizing-accuracy-retrieved-results/
  hybrid_search_and_multi_query.ipynb
  optimizing-rag-retrieval-using-metadata_filtering.ipynb
source/amazon-bedrock-samples-main/knowledge-bases/01-rag-concepts/optimizing-accuracy-retrieved-results/images/
  multi-query.jpg
  multi-query.png
  data_ingestion.png
  hybrid-search-2.png
  retrieveAPI.png
  hybrid-overview.png
  hybrid-search-1.png
  hybrid-overview.jpg
  metadata-filter.png
  retrieveAndGenerate.png
source/amazon-bedrock-samples-main/knowledge-bases/00-zero-setup-chat-with-your-document/
  00_chat_with_document_kb.ipynb
source/amazon-bedrock-samples-main/knowledge-bases/images/
  rag-eval-flow-guidelines.png
  LangfuseAPIKEY.png
  rag-eval-flow-correctness.png
  rag-eval-online-langfuse.png
  rag-eval-flow-faithfulness.png
  rag-eval-flow-relevancy.png
  data_ingestion.png
  LangfuseTraceDetailsGeneration.jpg
  retrieveAPI.png
  LangfuseTraceDetailsRetreive.jpg
  LangfuseTraceDetail.jpg
  retrieveAndGenerate.png
source/amazon-bedrock-samples-main/knowledge-bases/03-infra/
source/amazon-bedrock-samples-main/knowledge-bases/03-infra/e2e-rag-using-bedrock-kb-cfn/
  README.md
  deploy.sh
source/amazon-bedrock-samples-main/knowledge-bases/03-infra/e2e-rag-using-bedrock-kb-cfn/artifacts/
  provider-event-handler.zip
  opensearchpy-layer.zip
  custom-resource-lambda.zip
source/amazon-bedrock-samples-main/knowledge-bases/03-infra/e2e-rag-using-bedrock-kb-cfn/templates/
  main-template-out.yml
  oss-infra-template.template
  main-template-out-tmp.yml
  kb-infra-template.template
  kb-role-template.template
  oss-infra-template-tmp.template
source/amazon-bedrock-samples-main/knowledge-bases/use-case-examples/
source/amazon-bedrock-samples-main/knowledge-bases/use-case-examples/metadata-filter-access-control/
  README.md
  utils.py
  kb-end-to-end-acl.ipynb
source/amazon-bedrock-samples-main/knowledge-bases/use-case-examples/metadata-filter-access-control/imgs/
  architecture.png
source/amazon-bedrock-samples-main/knowledge-bases/use-case-examples/metadata-filter-access-control/templates/
  2-knowledgebase-infra.yaml
  1-base-infra.yaml
source/amazon-bedrock-samples-main/knowledge-bases/videos/
  LangfuseDashboardrec.mov
source/amazon-bedrock-samples-main/knowledge-bases/02-advanced-concepts/
  README.md
source/amazon-bedrock-samples-main/knowledge-bases/02-advanced-concepts/02-using-open-source-framework/
  semantic_chunking_langchain.ipynb
  requirements.txt
source/amazon-bedrock-samples-main/knowledge-bases/02-advanced-concepts/02-using-open-source-framework/images/
  semantic-chunking.png
source/amazon-bedrock-samples-main/knowledge-bases/02-advanced-concepts/01-chunking-strategy/
  0_chunk_size_evaluation_for_KB_RAG.ipynb
source/amazon-bedrock-samples-main/multimodal/
source/amazon-bedrock-samples-main/multimodal/Titan Image Generator/
source/amazon-bedrock-samples-main/multimodal/Titan Image Generator/Instant Customization/
  Introduction to Amazon Titan Image Generator Instant Customization Feature.ipynb
source/amazon-bedrock-samples-main/multimodal/Titan Image Generator/Instant Customization/Data/
  sketch_dog.png
  smila.jpg
  carton_ladybug.png
source/amazon-bedrock-samples-main/multimodal/Titan/
source/amazon-bedrock-samples-main/multimodal/Titan/embeddings/
source/amazon-bedrock-samples-main/multimodal/Titan/embeddings/v2/
  Titan-V2-Embeddings.ipynb
source/amazon-bedrock-samples-main/multimodal/Titan/embeddings/v2/images/
  embeddings_lang.png
  chatbot_bedrock.png
  terminal.png
  chatbot_lang.png
  vector_embedding.png
  api.png
  context-aware-chatbot.png
  vector_db.jpg
source/amazon-bedrock-samples-main/multimodal/Titan/titan-multimodal-embeddings/
  README.md
source/amazon-bedrock-samples-main/multimodal/Titan/titan-multimodal-embeddings/amazon-bedrock-multimodal-oss-searchengine-e2e/
  README.md
  utils.py
  titan_mm_embed_search_blog.ipynb
  CONTRIBUTING.md
  LICENSE.txt
source/amazon-bedrock-samples-main/multimodal/Titan/titan-multimodal-embeddings/amazon-bedrock-multimodal-oss-searchengine-e2e/images/
  contextual_search_arch.png
source/amazon-bedrock-samples-main/multimodal/Titan/titan-multimodal-embeddings/images/
  titan-embeddings-g1-image.png
source/amazon-bedrock-samples-main/multimodal/Titan/titan-multimodal-embeddings/rag/
  requirements.txt
  globals.py
  0_data_prep.ipynb
  README.md
  1_multimodal_rag.ipynb
  download_images.py
source/amazon-bedrock-samples-main/multimodal/Titan/titan-multimodal-embeddings/rag/images/
  multimodal-rag-Page-1.drawio.png
source/amazon-bedrock-samples-main/multimodal/Claude3/
  README.md
  Claude3-Sonnet-Multimodal-Example.ipynb
  multi-modal-rag-claude3-sonnet-langchain.ipynb
  best_practices_for_claude3_bedrock.ipynb
  animal.jpg
source/amazon-bedrock-samples-main/multimodal/Claude3/images/
  wrinkle.png
  70.png
  nine_dogs.jpg
  labeled_circle.png
  officer.png
  100.png
  circle.png
  officer_example.png
  chinos.png
  140.png
  table.png
  receipt2.png
  receipt1.png
source/amazon-bedrock-samples-main/custom_models/
source/amazon-bedrock-samples-main/custom_models/import_models/
  fmeval_imported_models.ipynb
source/amazon-bedrock-samples-main/custom_models/import_models/llama-3/
  customized-text-to-sql-model.ipynb
  llama3-ngrammedqa-fine-tuning.ipynb
  llama3-sftt-llama3-fine-tuning.ipynb
source/amazon-bedrock-samples-main/custom_models/import_models/llama-3/images/
  text-2-sql-import-model-job.png
  llama3-ft-ImportedModelList.png
  llama3-ft-ImportedModelPlayground.gif
  llama3-ft-ImportScreenshot.png
  text-2-sql-imported-models-menu.png
  text-2-sql-demo.gif
  text-2-sql-take-model-arn.png
  llama3-ft-SageMakerTrainingLog.png
  text-2-sql-import-model-button.png
  llama3-ft-ImportedModelDetails.png
source/amazon-bedrock-samples-main/custom_models/import_models/llama-2/
  Llama2 Fine Tuning-Boolq.ipynb
source/amazon-bedrock-samples-main/custom_models/import_models/llama-2/images/
  import_jobs_perms.png
  iam_role_import_jobs.png
  import_jobs.png
source/amazon-bedrock-samples-main/custom_models/import_models/mistral/
  sm-mistral-fine-tuning-qna.ipynb
source/amazon-bedrock-samples-main/custom_models/import_models/mistral/images/
  MistralImportJobDetailsScreenshot.png
  MistralModelDetailsScreenshot.png
  Mistral-ft-SageMakerTrainingLog.png
  Mistral-ft-ImportScreenshot.png
  MistralModelListScreenshot.png
source/amazon-bedrock-samples-main/security-and-governance/
  README.md
source/amazon-bedrock-samples-main/generative-ai-solutions/
  README.md
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-lambda-layer/
  bedrock-1-28-57.zip
  README.md
  lambda_function.py.zip
  lambda_base.py
  lambda_function.py
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-rekognition-sample/
  README.md
  .gitignore
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-rekognition-sample/cdk/
  .npmignore
  ddb-table-results.png
  cloudformation-s3-bucket.png
  cloud-formation-stack.png
  cloudformation-resources.png
  ddb-restaurant-explore.png
  cdk.json
  package-lock.json
  package.json
  tsconfig.json
  architecture.png
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-rekognition-sample/cdk/bin/
  cdk.ts
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-rekognition-sample/cdk/lib/
  multi-modal-stack.ts
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-rekognition-sample/cdk/lib/lambda/
  requirements.txt
  rek-bedrock.py
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-rekognition-sample/images/
  restaurant-hours-3.jpg
  restaurant-hours-2.jpg
  restaurant-hours-1.jpg
  restaurant-hours-4.jpg
source/amazon-bedrock-samples-main/generative-ai-solutions/metadata-tagger/
  README.md
  claude3_metadata_tagger.ipynb
source/amazon-bedrock-samples-main/generative-ai-solutions/java-connection/
  README.md
source/amazon-bedrock-samples-main/generative-ai-solutions/java-connection/my-app/
  pom.xml
  example-payload.txt
source/amazon-bedrock-samples-main/generative-ai-solutions/java-connection/my-app/src/
source/amazon-bedrock-samples-main/generative-ai-solutions/java-connection/my-app/src/main/
source/amazon-bedrock-samples-main/generative-ai-solutions/java-connection/my-app/src/main/java/
source/amazon-bedrock-samples-main/generative-ai-solutions/java-connection/my-app/src/main/java/com/
source/amazon-bedrock-samples-main/generative-ai-solutions/java-connection/my-app/src/main/java/com/example/
source/amazon-bedrock-samples-main/generative-ai-solutions/java-connection/my-app/src/main/java/com/example/app/
  App.java
source/amazon-bedrock-samples-main/generative-ai-solutions/java-connection/my-app/src/main/java/com/example/app/utils/
  Utils.java
source/amazon-bedrock-samples-main/generative-ai-solutions/java-connection/my-app/src/main/java/com/example/app/pojo/
  ClaudeResponse.java
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-api-gateway/
  01_bedrock_api.ipynb
  README.md
  02_bedrock_api_langchain.ipynb
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-api-gateway/images/
  architecture.png
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-api-gateway/setup/
  cfn-template.yaml
source/amazon-bedrock-samples-main/generative-ai-solutions/recordings-summary-generator/
  recordings-summary-generation.yaml
  README.md
source/amazon-bedrock-samples-main/generative-ai-solutions/recordings-summary-generator/images/
  architecture.svg
  stepfunctions_graph.png
  stepfunctions_graph.svg
source/amazon-bedrock-samples-main/generative-ai-solutions/recordings-summary-generator/sample-recording/
  sample-team-meeting-recording.mp4
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-vtt-file-processing-and-model-evals/
  requirements.txt
  0_chapterize_data.ipynb
  2_summarize_metrics.ipynb
  1_generate_chapter_titles.ipynb
  README.md
  chapterize.py
  .gitignore
  0_already_chapterized_data.ipynb
  bedrock_utils.py
  config.yml
  main.py
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-vtt-file-processing-and-model-evals/data/
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-vtt-file-processing-and-model-evals/data/metrics/
  filtered_titles_for_eval.csv
  model_distribution_count.csv
  recommended_model.csv
  summary_metrics.csv
  overall_evaluation_report.csv
  model_eval.csv
  processed_evaluation_prompts.csv
  per_request_results.csv
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-vtt-file-processing-and-model-evals/data/source_data/
  particle_physics_meeting.json
  particle_physics_meeting.vtt
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-vtt-file-processing-and-model-evals/data/title_completions/
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-vtt-file-processing-and-model-evals/data/title_completions/particle_physics_meeting.vtt/
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-vtt-file-processing-and-model-evals/data/title_completions/particle_physics_meeting.vtt/meta.llama2-13b-chat-v1/
  chapter_1.json
  chapter_3.json
  chapter_2.json
  chapter_4.json
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-vtt-file-processing-and-model-evals/data/title_completions/particle_physics_meeting.vtt/anthropic.claude-3-sonnet-20240229-v1-0/
  chapter_1.json
  chapter_3.json
  chapter_2.json
  chapter_4.json
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-vtt-file-processing-and-model-evals/data/title_completions/particle_physics_meeting.vtt/anthropic.claude-3-haiku-20240307-v1-0/
  chapter_1.json
  chapter_3.json
  chapter_2.json
  chapter_4.json
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-vtt-file-processing-and-model-evals/data/title_completions/particle_physics_meeting.vtt/mistral.mistral-7b-instruct-v0-2/
  chapter_1.json
  chapter_3.json
  chapter_2.json
  chapter_4.json
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-vtt-file-processing-and-model-evals/data/title_completions/particle_physics_meeting.vtt/amazon.titan-text-express-v1/
  chapter_1.json
  chapter_3.json
  chapter_2.json
  chapter_4.json
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-vtt-file-processing-and-model-evals/data/processed_data/
  processed.csv
  chapterized.csv
source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-vtt-file-processing-and-model-evals/data/prompts/
  mistral_template.txt
  llama_template.txt
  eval_template.txt
  titan_template.txt
  llama3_template.txt
  anthropic_template.txt
source/amazon-bedrock-samples-main/ops-tooling/
  bedrock_app_custom_dashboard.py
  bedrock_cloudwatch_dashboard.py
  README.md
source/amazon-bedrock-samples-main/responsible-ai/
  README.md
source/amazon-bedrock-samples-main/responsible-ai/guardrails-for-amazon-bedrock-samples/
  Guardrails with LangChain.ipynb
  guardrails-api.ipynb
  Apply_Guardrail_with_Streaming_and_Long_Context.ipynb
source/amazon-bedrock-samples-main/responsible-ai/guardrails-for-amazon-bedrock-samples/images/
  agent_guardrails.png
  chatbedrock_guardrails.png
source/amazon-bedrock-samples-main/responsible-ai/guardrails-for-amazon-bedrock-samples/data/
  shareholder_letter.txt
  financial_story.txt
docs/
  .DS_Store
  modify-prompt-input-restrictions.md
  modify-prompt-input-restrictions-example-ddb.png
docs/sagemaker-payload-examples/
  alexaTM-20B.md
  meta-llama-2-7b-chat.md
  huggingface-falcon-7B-BF16.md
  huggingace-mistral-7B-instruct.md
docs/architecture/
  usecase_architecture.png
  deployment_dashboard_architecture.png
deployment/
  get-cdk-version.js
  build-s3-dist.sh
deployment/cdk-solution-helper/
  index.js
  README.md
  .gitignore
  package-lock.json
  package.json
.github/
  PULL_REQUEST_TEMPLATE.md
.github/ISSUE_TEMPLATE/
  feature_request.md
  bug_report.md
.git/
  ORIG_HEAD
  config
  .COMMIT_EDITMSG.swp
  HEAD
  description
  index
  packed-refs
  COMMIT_EDITMSG
  FETCH_HEAD
.git/objects/
.git/objects/94/
  df8772c83b1b7780065663f796f19857ff8fbb
.git/objects/a4/
  05feb4a9156e9d5f91d64cadef010e4cebcf3c
.git/objects/d8/
  7b2278952d10fe41d06b40192fb67ff714f765
.git/objects/c0/
  3416a0a73133fd9eaddfac68898c537300d1ec
.git/objects/ca/
  e8e42c1bd57511885ec7c1175c1764265f56f7
.git/objects/ed/
  04f4da302d3126ba17c53e019cc532f49d7347
.git/objects/pack/
  pack-c8b69764c29e6d2ad6ab5210e31811c3d1132f58.idx
  pack-c8b69764c29e6d2ad6ab5210e31811c3d1132f58.rev
  pack-c8b69764c29e6d2ad6ab5210e31811c3d1132f58.pack
.git/objects/7c/
  8e07bb811125f1465f275b7ef70957c9a546a2
.git/objects/17/
  8ad583c20d796a027a1f47ba1f80354521dacc
.git/objects/88/
  a3d5cb99586b06cb593754f02bf5bcb9eb9595
.git/objects/07/
  42c6e3905cfaf12a2fa01d3ddff480a52d943a
.git/objects/36/
  09bdf9f3147e5c04295f7947a1fee46a7aed66
.git/objects/31/
  8ba1e38d9685c6366d28dc7ed0aa571d9f74c0
.git/objects/info/
.git/objects/62/
  a5fc8f50f17c4e18ecff0109d64976805bc091
.git/objects/a6/
  6e04471baaab2029f5399a7ec6fd539ea15aff
.git/objects/cc/
  315cab296e495ae84ea8d2554dada48e988fcd
.git/objects/e0/
  5bc40228177447f45705d7e0c8255077042aae
  f2ecd5b011af41d9f5ad29eb91b0d552448f1f
.git/objects/48/
  5087296db500f9ae1c56f283b75204f92ff0a6
.git/objects/25/
  c8abfbed188a0a87cd925dbfbef8670fc6ec34
.git/info/
  exclude
.git/logs/
  HEAD
.git/logs/refs/
.git/logs/refs/heads/
  DS-28-migrate-RDS-to-S3
  main
.git/logs/refs/remotes/
.git/logs/refs/remotes/origin/
  DS-28-migrate-RDS-to-S3
  HEAD
  main
.git/hooks/
  commit-msg.sample
  pre-rebase.sample
  sendemail-validate.sample
  pre-commit.sample
  applypatch-msg.sample
  fsmonitor-watchman.sample
  pre-receive.sample
  prepare-commit-msg.sample
  post-update.sample
  pre-merge-commit.sample
  pre-applypatch.sample
  pre-push.sample
  update.sample
  push-to-checkout.sample
.git/refs/
.git/refs/heads/
  DS-28-migrate-RDS-to-S3
  main
.git/refs/tags/
.git/refs/remotes/
.git/refs/remotes/origin/
  DS-28-migrate-RDS-to-S3
  HEAD
  main
.git/branches/

README Summaries:
root README: Generative AI Application Builder on AWS > **_NOTE:_** If you want to use the solution without any custom changes, navigate to Solution Landing Page and click the "Launch in the AWS Console" in the Deployment options for a 1-click deployment into your AWS Console. The Generative AI Application Builder on AWS solution (GAAB) provides a web-based management dashboard to deploy customizable Generative AI (Gen AI) use cases. This Deployment dashboard allows customers to deploy, experiment with, and ...

source/ui-chat README: Generative AI Application Builder on AWS - WebApp This project is the web interface (UI Application) that provides the front-end experience. The application is based on Reactjs framework and uses components from the AWS Cloudscape Design System Local Configuration Setup To build and run the application locally, the setup requires -   Nodejs 18.x or higher installed Follow the below steps before building the web app for local execution -   The backend infrastructure stacks from `source/infrastruc...

source/ui-deployment README: Generative AI Application Builder on AWS - Deployment Dashboard This project is the web interface (UI Application) that provides the front-end experience. The application is based on Reactjs framework and uses components from the AWS Cloudscape Design System Local Configuration Setup To build and run the application locally, the setup requires -   Nodejs 18.x or higher installed Follow the below steps before building the web app for local execution -   The backend infrastructure stacks from `sou...

source/amazon-bedrock-samples-main README: Amazon Bedrock Samples This repository contains pre-built examples to help customers get started with the Amazon Bedrock service. Contents - Introduction to Bedrock - Learn the basics of the Bedrock service - Prompt Engineering  - Tips for crafting effective prompts - Bedrock Fine-tuning - Fine-tune Bedrock models for your specific use case - Custom Model Import - Import custom models into Bedrock - Generative AI Solutions - Example use cases for generative AI - Knowledge Bases - Build knowledge...

source/amazon-bedrock-samples-main/bedrock-fine-tuning README: Fine Tuning This folder contains examples related to Fine-tuning Bedrock Models Contents Fine-tuning Amazon Titan Image Generator G1 - example code for fine-tuning Amazon Titan Image Generator G1 model Fine-tuning Meta Llama 2 for text summarization - example code for fine-tuning and evaluating a Meta Llama 2 foundation model for text summarization Contributing We welcome community contributions! Please ensure your sample aligns with AWS best practices, and please update the **Contents** section...

source/amazon-bedrock-samples-main/bedrock-fine-tuning/amazon-titan-image-generator README: Amazon Titan Image Generator Model Fine-tuning Overview This repository provides resources and notebooks for fine-tuning the Amazon Titan Image Generator Model with Amazon Bedrock. Amazon Titan lmage Generator is a cutting edge text-to-image model that is able to understand prompts describing multiple objects in various contexts and captures these relevant details in the images it generates. It can perform advanced image editing tasks such as smart cropping, in-painting, and background changes. ...

source/amazon-bedrock-samples-main/bedrock-fine-tuning/meta-llama README: Fine-Tuning Foundation Models with Amazon Bedrock You can customize Foundation Models(FMs) on Bedrock through fine-tuning. We provide examples on how to set up the resources, fine-tune and evaluate the customized model, and clean up the resources after running the examples. Contents - 00_setup.ipynb - Setup for running customization notebooks both for fine-tuning and continued pre-training using Amazon Bedrock. In this notebook, we will create set of roles and an S3 bucket which will be used for...

source/amazon-bedrock-samples-main/function-calling README: Function Calling With function calling, we can provide LLMs with descriptions of tools and functions it can use. An LLM is able to intelligently decide based on user query when and how to use those tools to help answer questions and complete tasks. This repository contains examples and use-cases to get you started with Function Calling on Amazon Bedrock Contents - **Amazon Bedrock Converse API function-calling (tool use) examples** - The Converse or ConverseStream API is a unified structured tex...

source/amazon-bedrock-samples-main/agents-for-bedrock README: Agents for Amazon Bedrock Agents for Amazon Bedrock helps you accelerate the development of GenAI applications by orchestrating multistep tasks. Agents uses the reasoning capability of foundation models (FMs) to break down user-requested tasks into  steps. Agents for Amazon Bedrock can perform the following tasks: - Breakdown user requests into multiple smaller steps - Collect additional information from a user through natural conversation - Decide which APIs to call and provide the necessary pa...

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/product-review-agent README: Custom integration with knowledge base The agent integrates with the knowledge base **without an explicit association** to it. Essentially, based on the function invoked in the function definitions, it can choose to query the vector DB directly by filtering or the knowledge base through both filtering and semantic similarity. This is useful when you want to leverage on the managed knowledge base for data maintenance (create,delete,update of documents in vector database), and exert more control o...

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation README: Insurance Claim Lifecycle Automation Using Agents and Knowledge Bases for Amazon Bedrock --- Content - Overview - Agents and Knowledge Bases Architecture - Cost - Deployment Guide - Testing and Validation - Clean Up Overview You can now use Agents for Amazon Bedrock and Knowledge Bases for Amazon Bedrock to configure specialized agents that seamlessly run actions based on user input and your organization's data. These managed agents play conductor, orchestrating interactions between foundation m...

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/ai-powered-assistant-for-investment-research README: Generative AI and Multi-Modal Agents in AWS: The Key to Unlocking New Value in Financial Markets This file walks you through how to set up the infrastructure and applications, and run the code to create a multi-modal agent using Amazon Bedrock. The blog post provides a detailed discussion of this solution. Technical Achitecture Diagram <img src="images/architecture-diagram.png" width="680"/> Implementation Steps Prerequisites This solution uses Lambda functions, which are serverless, event-drive...

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/text-2-sql-agent README: <h1 align="center">Text to SQL Bedrock Agent</h1> Authors: **Pedram Jahangiri** @jpedram, **Sawyer Hirt** @sawyehir, **Zeek Granston** @zeekg, **Suyin Wang** @suyinwa Reviewer: **Maira Ladeira Tanke** @mttanke Introduction Harnessing the power of natural language processing, the "Text to SQL Bedrock Agent" facilitates the automatic transformation of natural language questions into executable SQL queries. This tool bridges the gap between complex database structures and intuitive human inquiries,...

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/customer-relationship-management-agent README: Customer relationship management (CRM) Bedrock Agent Authors: Sawyer Hirt @sawyehir, Zeek Granston @zeekg, Eashan Kaushik @eashank Reviewer: Maira Ladeira Tanke @mttanke Introduction The Customer Relationship Management (CRM) Bedrock Agent is a conversational AI solution that utilizes natural language processing to facilitate interactions with customer data and management of customer relationships. This agent bridges the gap between complex customer information systems and user-friendly communic...

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/agentsforbedrock-retailagent README: Build a Foundation Model (FM) powered customer service bot with agents for Amazon Bedrock Introduction From enhancing the conversational experience to agent assistance, there are a plenty of ways that generative AI and foundation models (FMs) can help deliver faster, better support. With the increasing availability and diversity of FMs, it is difficult to experiment and keep up-to-date with the latest model versions. Amazon Bedrock is a fully managed service that offers a choice of high-performi...

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/hr-assistant README: HR Assistant Using Titan Text Premier with Agents and Knowledge Bases for Amazon Bedrock --- Authors: Anupam Dewan @dewanup, Jie Lie @liaji, Han Liu @haliuz Reviewer: Maira Ladeira Tanke @mttanke Content - Overview - Agents and Knowledge Bases Architecture - Deployment Guide - Test Conversation - Clean Up Overview Amazon Titan Text Premier is the latest addition to the Titan family of Large Language Models. It is a high-performing, cost effective and model engineered to deliver superior performa...

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/text-2-sql-agent-cdk-enhanced README: Text to SQL Bedrock Agent CDK Enhanced Authors: - **Pedram Jahangiri** @iut62elec Reviewer: - **Maira Ladeira Tanke** @mttanke Introduction Harnessing the power of natural language processing, the "Text to SQL Bedrock Agent" facilitates the automatic transformation of natural language questions into executable SQL queries. This tool bridges the gap between complex database structures and intuitive human inquiries, enabling users to effortlessly extract insights from data using simple English pro...

source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples README: Agents for Amazon Bedrock - Features examples In this folder we provide you example implementations for the main Agents for Amazon Bedrock functionality: 1. Create Agent with Function Definition: Example of how to create an HR assistant agent defining the Action Group function and parameters as JSON object that is associated with the Action Group invocation. It connects with an AWS Lambda function to execute the actions 1. Create Agent with API Schema: Example of how to create an Insurance Claim...

source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/06-prompt-and-session-attributes README: Prompt and Session Attributes In this folder, we provide an example of an HR agent using Agents for Amazon Bedrock with prompt and session attributes. For greater control of session context, you can modify the SessionState object in your agent. The SessionState object contains two types of attributes that you can use to provide conversational context for the agent during user conversations. * sessionAttributes – Attributes that persist over a session between a user and agent. All InvokeAgent req...

source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/07-advanced-prompts-and-custom-parsers README: Advanced Prompts and Custom Lambda Parsers In this folder, we provide an example of an HR agent using Agents for Amazon Bedrock new advanced prompt and custom lambda parser capabilities. Agents in Amazon Bedrock take a sequence of steps to process a user query: Pre-processing, Orchestration, Knowledge base response generation, and Post-processing. For each step in the sequence Prompt templates are the basis for creating prompts to be provided to the FM. Agents for Amazon Bedrock exposes the defa...

source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/02-create-agent-with-api-schema README: Create Agents with API Schema In this folder, we provide an example agent using Agents for Amazon Bedrock integration with API Schema and Lambda functions. When creating Agent’s action groups, you can define actions by providing the function details or passing an API Schema. When providing the API Schema, you can define actions more explicitly and map them to API operations in your system. This option requires your API schema file to have the OpenAPI format. You add the API schema to the action ...

source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/03-create-agent-with-return-of-control README: Create Agents with Return of Control (Function Calling) In this folder, we provide an example of an HR agent using Agents for Amazon Bedrock new capabilities for function definition and return of control for function calling. Return of control for function calling allows developers to define an action schema and get the control back whenever the agent invokes the action. This provides developers more options to implement business logic in addition to the already available Lambda approach. Furthe...

source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/05-create-agent-with-knowledge-base-and-action-group README: Creating Agent with Knowledge Base and an Action Group connection In this folder, we provide an example of creating an agent with Amazon Bedrock and integrating it with a Knowledge Base for Amazon Bedrock and with an Action Group. With this integration, the agent will be able to respond to a user query by taking a sequence of actions, consulting the knowledge base to obtain more information, and/or executing tasks using the lambda function connected with an Action Group. Agent Architecture In th...

source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/04-create-agent-with-single-knowledge-base README: Creating Agent with a Single Knowledge Base In this folder, we provide an example of creating an agent with Amazon Bedrock and integrating it with Knowledge Bases for Amazon Bedrock. With this integration, the agent will be able to respond to a user query by taking a sequence of actions, consulting the knowledge base to obtain more information, and finally responding to the user with an answer. !Agents with Knowledge Bases for Amazon Bedrock In this notebook you will learn how to create an Amazo...

source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/10-create-agent-with-memory README: Create Agents with memory In this folder, we provide an example of travel agent using Agents for Amazon Bedrock new capabilities for memory. When creating you agent, you can enable the memory capabilities using the `memoryConfiguration` parameter. You can then invoke you agent with a `memoryId` to track sessions and summarize them to your memory. In this example we will create a test agent with the following architecture: !Agent architecture The code below shows how to configure the memory capab...

source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/09-fine-grained-access-permissions README: Designing secure generative AI Application workflows with Amazon Verified Permissions and Agents for Bedrock Link AWS Blog: https://aws.amazon.com/blogs/aws/ \ Link to Amazon Verified Permissions: https://aws.amazon.com/verified-permissions/ This is sample code we will demonstrate how to design fine-grained access controls using Verified Permissions for a generative AI application that uses agents for Bedrock to answer questions about insurance claims that exist in a claims review system using t...

source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/01-create-agent-with-function-definition README: Create Agents with Function Definition In this folder, we provide an example of an HR agent using Agents for Amazon Bedrock new capabilities for function definition. When creating Agent’s action groups, you can define actions by providing the function details or passing an API Schema. When providing the function details you can simplify the action group creation process and set up the agent to elicit a set of parameters that you define. You can then pass the parameters on to your application and...

source/amazon-bedrock-samples-main/prompt-engineering README: Prompt Engineering This folder contains information to get you started with prompt engineering on Amazon Bedrock. !Prompt Engineering Prompt engineering is the practice of optimizing the quality and performance of your foundation model's response to your request. Prompt engineering may involve: - Word choice - Phrasing - Providing examples (few-shot learning) - Use of line breaks and content separators - Following established formats that align with how the model was trained - Use of stop sequen...

source/amazon-bedrock-samples-main/prompt-engineering/session-4/multimodal README: Working with multimodal data using Amazon Bedrock With the `Amazon Titan Multimodal Embeddings G1` model, you can create embeddings for multimodal data, specifically text and image data. These embeddings can then be used for multimodal search and Retrieval Augmented Generation (RAG) use-cases, for example searching images by text only, images only or a combination of text and images. !Amazon Titan Multimodal Embeddings G1 Contents - Multimodal RAG - Multimodal RAG using the Amazon Berkley Object...

source/amazon-bedrock-samples-main/prompt-engineering/session-4/multimodal/faiss-multimodal README: Build a contextual text and image search engine for product recommendations using Amazon Bedrock and Amazon OpenSearch Serverless [WIP - 02/07/2024] This repository aims at building a Large Language Model (LLM) powered search engine prototype to retrieve and recommend products based on text or image queries. This is a step-by-step guide on how to create Amazon Bedrock Titan models to encode images and text into embeddings, ingest embeddings into Amazon OpenSearch Service Serverless index, and qu...

source/amazon-bedrock-samples-main/introduction-to-bedrock README: Getting Started with Bedrock With the Amazon Bedrock serverless experience, you can quickly get started, easily experiment with FMs, privately customize FMs with your own data, and seamlessly integrate and deploy them into your applications using AWS tools and capabilities. This repository contains examples to get you started with the core Amazon Bedrock APIs for each of the foundational model providers. !Bedrock Models Contents - Getting Started with Bedrock Converse API - Notebook - Example no...

source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application README: Create your first Amazon Bedrock generative AI application This repository contains the code for deploying your first application with Amazon Bedrock using AWS CDK For this exercise, we will create and application that processes the text content from emails and extract information from them. For simplicity and in order to ensure compatibility with multiple customer setups, two options are presented: * **process-dynamodb-table-bedrock:** assumes that your emails have been extracted to a dynamoDB ...

source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-emails-bedrock README: Processing Emails with Amazon Bedrock Sample Authors: Aditi Rajnish, Maíra Ladeira Tanke, Raj Pathak This repo contains an AWS CDK solution for automatically processing emails using Amazon Bedrock, Simple Email Service (SES), Amazon Simple Notification Service (SNS), AWS Lambda, and Amazon DynamoDB. To get start and set up your environment: Navigate to the cdk-app Install dependencies The `cdk.json` file tells the CDK Toolkit how to execute your app. This project is set up like a standard Python...

source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-dynamodb-table-bedrock README: Processing an Amazon DynamoDB table with Amazon Bedrock This repo contains an AWS CDK solution for automatically process an Amazon DynamoDB table using Amazon Bedrock via an AWS Lambda function. The following architecture is deployed with this repository !Architecture Diagram Pre-requisites This repository assumes that Amazon Bedrock has `Antropic Claude-V2` enabled. Check the Model Access documentation for more details. Deploying Solution Follow the next steps to deploy this solution Navigate t...

source/amazon-bedrock-samples-main/introduction-to-bedrock/java README: Java Bedrock REST Api Samples This repository contains sample of how you can call `invokeModel` REST API and sign it with AWSSigV4 for Amazon Bedrock using Java programming language. The example uses Meta LLama 2 model but you can substitute it with any currently available model isd found on AWS website. Contents - Run invokeModel API with Java - Call invokeModel Amazon Bedrock REST API and sing it with AWSSigV4 using Java programming language Getting Started To get started with the samples, fol...

source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge README: Get inferences and model evaluations using an _LLM as a judge_ This examples demonstrates how to evaluate LLM responses with another LLM acting as a judge. Responses are generated from multiple LLMs and then another LLM is asked to evaluate the responses based on a rubric (conciseness, clarity, correctness) and pick a response that best matches this criteria, additionally we also ask the judge LLM to provide an explanation why a particular model's response was selected and why responses from oth...

source/amazon-bedrock-samples-main/rag-solutions README: Retrieval Augmented Generation Solutions This folder contains examples and solutions of Retrieval Augmented Generation (RAG) applications on Amazon Bedrock Contents - Semantic Search - Sample embeddings search application with Amazon Titan Embeddings, LangChain, and Streamlit - SQL Query Generator & Executor - Sample SQL query generator and executor application with Amazon Titan Embeddings, Amazon Bedrock Claude Model, LangChain, and Streamlit - Multimodal RAG -  Multimodal RAG with PDF files us...

source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase README: Build Contextual Chatbots using Amazon Bedrock Knowledge Bases Modern chatbots can serve as digital agents, providing a new avenue for delivering 24/7 customer service and support across many industries. Their popularity stems from the ability to respond to customer inquiries in real time and handle multiple queries simultaneously in different languages. Chatbots also offer valuable data-driven insights into customer behavior while scaling effortlessly as the user base grows; therefore, they pre...

source/amazon-bedrock-samples-main/rag-solutions/sql-query-generator README: SQL Query Generator & Executor Example This demonstrates a simple application using public Northwind with Amazon Titan Embeddings, Amazon Bedrock Claude Model, LangChain, and Streamlit for the front-end. The example receives a user’s prompt, generates a SQL query using in-memory vector database and few-shot examples. We then run the query using SQLite database and display query results in the user interface. For simplicity, we use the in-memory Chroma database to store and search for embeddings ...

source/amazon-bedrock-samples-main/rag-solutions/multimodal-rag-pdf README: Multimodal RAG for PDF files This is an example for RAG with pdf files and includes the data ingestion pipeline and inference flow. Contents - Multimodal RAG - Multimodal RAG with PDF files using both bedrock titan text embeddings and claude LLM. Contributing We welcome community contributions! Please ensure your sample aligns with AWS best practices, and please update the **Contents** section of this README file with a link to your sample, along with a description.

source/amazon-bedrock-samples-main/rag-solutions/semantic-search README: Semantic Search Example This demonstrates a simple embeddings search application with Amazon Titan Embeddings, LangChain, and Streamlit. The example matches a user’s query to the closest entries in an in-memory vector database. We then display those matches directly in the user interface. This can be useful if you want to troubleshoot a RAG application, or directly evaluate an embeddings model. For simplicity, we use the in-memory FAISS database to store and search for embeddings vectors. In a r...

source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase-guardrails README: Build Contextual Chatbots using Amazon Bedrock Knowledge Bases Modern chatbots can serve as digital agents, providing a new avenue for delivering 24/7 customer service and support across many industries. Their popularity stems from the ability to respond to customer inquiries in real time and handle multiple queries simultaneously in different languages. Chatbots also offer valuable data-driven insights into customer behavior while scaling effortlessly as the user base grows; therefore, they pre...

source/amazon-bedrock-samples-main/rag-solutions/rag-foundations-workshop README: AIM307 2023 - Retrieval Augmented Generation with Amazon Bedrock Welcome to re\:Invent 2023! Large language models (LLMs) are often limited by the data they were trained on and don’t always provide up-to-date responses, or worse, they make things up. To overcome this limitation, you can supplement prompts with up-to-date information using embeddings stored in vector databases, a process known as Retrieval Augmented Generation (RAG). With supplemental information in the prompt providing more cont...

source/amazon-bedrock-samples-main/knowledge-bases README: Amazon Bedrock Knowledge Base - Samples for building RAG workflows Contents Contains following folders: - 00-zero-setup-chat-with-your-document - 01-rag-concepts - 02-advanced-concepts 00-zero-setup-chat-with-your-document - 0_chat_with_document_kb.ipynb - Enables you to chat with your document without setting up any vector database. You can either upload the document or simply point to the document in your S3 location. 01-rag-concepts - 1a_create_ingest_documents_test_kb.ipynb - creates necessa...

source/amazon-bedrock-samples-main/knowledge-bases/03-infra/e2e-rag-using-bedrock-kb-cfn README: Deploy e2e RAG solution (using Knowledgebases for Amazon Bedrock) via CloudFormation This is a complete setup for automatic deployment of end-to-end RAG workflow using Knowledge Bases for Amazon Bedrock. Following resources will get created and deployed: - IAM role - Open Search Serverless Collection and Index - Set up Data Source (DS) and Knowledge Base (KB) Pre-requisite: - You already have s3 bucket where your documents are stored - The documents must be in one of the following supported form...

source/amazon-bedrock-samples-main/knowledge-bases/use-case-examples/metadata-filter-access-control README: Access Controls for Knowledge Bases on Amazon Bedrock This notebook guides users on creating access controls for Knowledge Bases on Amazon Bedrock. Metadata filtering in knowledge bases enables access control for your data. By defining metadata fields based on attributes such as user roles, departments, or data sensitivity levels, you can ensure that the retrieval only fetches and uses information that a particular user or application is authorized to access. This helps maintain data privacy and...

source/amazon-bedrock-samples-main/knowledge-bases/02-advanced-concepts README: Advanced Concepts Contents 0_chunk_size_evaluation_for_KB_RAG.ipynb - This notebook provides sample code for chunking size evaluation for building optimum RAG applcation. For each chunk sizes (you want to evaluate), following steps are repeated: - Create execution role for Knowledge Bases for Amazon Bedrock with necessary policies for accessing data from S3 and writing embeddings into vector store (OpenSearchServerless). - Create an empty OpenSearch serverless index. - Download documents (or poi...

source/amazon-bedrock-samples-main/multimodal/Titan/titan-multimodal-embeddings README: Working with multimodal data using Amazon Bedrock With the `Amazon Titan Multimodal Embeddings G1` model, you can create embeddings for multimodal data, specifically text and image data. These embeddings can then be used for multimodal search and Retrieval Augmented Generation (RAG) use-cases, for example searching images by text only, images only or a combination of text and images. !Amazon Titan Multimodal Embeddings G1 Contents - Multimodal RAG - Multimodal RAG using the Amazon Berkley Object...

source/amazon-bedrock-samples-main/multimodal/Titan/titan-multimodal-embeddings/amazon-bedrock-multimodal-oss-searchengine-e2e README: Build a contextual text and image search engine for product recommendations using Amazon Bedrock and Amazon OpenSearch Serverless [WIP - 02/07/2024] This repository aims at building a Large Language Model (LLM) powered search engine prototype to retrieve and recommend products based on text or image queries. This is a step-by-step guide on how to create Amazon Bedrock Titan models to encode images and text into embeddings, ingest embeddings into Amazon OpenSearch Service Serverless index, and qu...

source/amazon-bedrock-samples-main/multimodal/Titan/titan-multimodal-embeddings/rag README: Multimodal RAG example This example demonstrates how to implement a simple multimodal RAG solution using the `Amazon Titan Multimodal Embeddings G1` model for multimodal embeddings and the `Anthropic Claude v2` model for text generation. !Multimodal RAG 1. We download a subset of data from the Amazon Berkley Objects dataset. The data includes Amazon products with metadata and catalog images. The metadata includes multiple tags that provide short text description of the product in the image. The ...

source/amazon-bedrock-samples-main/multimodal/Claude3 README: Claude 3 Features and New Messages API The multi-modal capability of Claude 3 allows for the input of not only text but also an image that you can ask questions about. An example of the new mulimodal capability of the Claude 3 model is shown below with the new Messages API structure. In addition, an example of using Claude 3's vision capabilities in a RAG workflow is shown using Langchain. We also have a best practices guide for improving performance with Claude 3 Vision. For Claude 3 Integratio...

source/amazon-bedrock-samples-main/security-and-governance README: Security and Governance This folder contains examples related to Bedrock security and governance. Contents This repo is still under construction, come back soon! Contributing We welcome community contributions! Please ensure your sample aligns with AWS best practices, and please update the **Contents** section of this README file with a link to your sample, along with a description.

source/amazon-bedrock-samples-main/generative-ai-solutions README: Generative AI use-cases This repo explores various generative AI use-cases and integrations with Amazon Bedrock. Contents - Connecting API Gateway & Lambda to Bedrock - Sample pattern connecting Amazon API Gateway and AWS Lambda with Bedrock - Java Connection - Sample code for creating a connection to Amazon Bedrock through the AWS Java SDK - AWS Genai LLM Chatbot - A modular and comprehensive solution to deploy a multi LLM powered chatbot (Amazon Bedrock) - `VTT file processing and model evalua...

source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-lambda-layer README: Here is a draft README.md file: Using Bedrock with AWS Lambda Overview The new Bedrock AI service from AWS provides powerful generative AI capabilities through API calls. However, the default Boto3 included in AWS Lambda has not yet been updated to support Bedrock. To use Bedrock in Lambda functions today, you need to create a Lambda layer with an updated Boto3 that contains the Bedrock service definitions. This README provides steps and code snippets to create a Boto3 layer and deploy Lambda fu...

source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-rekognition-sample README: AWS Serverless Multi-Modal Image Text Validation Repository hosting sample AWS CDK code for the AWS Serverless Image Text Validation sample code. Use Case There are scenarios when delivery drivers take the picture of restaurant operating hours as a proof to show that its closed. However, given the wide variety of store operating hours signs, it can be challenging to validate the driver's claim, leading to potential fraud. We aim to solve this use case in this sample solution. We demonstrate the ...

source/amazon-bedrock-samples-main/generative-ai-solutions/metadata-tagger README: Claude 3 - Metadata Extraction Capability This repo provides code samples for Claude 3 to extract metadata from text. The schema for the metadata is provided as part of the prompt. This example uses synthetic data to demonstrate the metadata extraction capability for Claude 3. The extracted metadata is provided in JSON format so that it is parseable by downstream applications. Bring your own Schema/Documents 1. To use your custom schema, enter the schema in the notebook as given in the example b...

source/amazon-bedrock-samples-main/generative-ai-solutions/java-connection README: Connecting to Amazon Bedrock with the AWS Java SDK This directory contains a simple maven project for how to interact with Amazon Bedrock though the Java SDK. Prerequisites * Install Java (17.0.8 used in this example) * Install Maven (3.9.4 used in this example) * Authenticate to an AWS IAM role which has the correct permissions to invoke Amazon Bedrock models (This example uses Claude V2 from anthropic) How to Run Inside the `my-app` directory, run these two maven commands. The first packages y...

source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-api-gateway README: Call the Bedrock APIs from your API Gateway, using a Amazon API Gateway, AWS Lambda layer with Boto3 The Cloudformation template cfn-template.yaml deploys: * a Lambda Layer containing the Python Boto3 SDK updated to support Bedrock * a Lambda function for consuming Bedrock **invoke_model** API * a REST Api for invoking LLMs through Bedrock using `invoke_model` The template defines a CloudFormation custom resource function that dynamically downloads and uses the latest published Bedrock SDK files...

source/amazon-bedrock-samples-main/generative-ai-solutions/recordings-summary-generator README: Recordings Summary Generator Summary This solution will automatically transcribe a recording that you upload and then create a summary of the recording and then send it to you. The solution uses Amazon Transcribe for the transcription and Amazon Bedrock for the generative summary creation. Architecture The solution is orchestrated using a Step Functions state machine that is triggered when you upload a recording to the S3 bucket: !Architecture 1. Store recording in asset bucket 2. Trigger state ...

source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-vtt-file-processing-and-model-evals README: Meeting transcript chapter title generation and comparison across FMs with Amazon Bedrock This example shows how to generate chapter titles for `Video Text to track (VTT)` files using different Foundation Models (FMs) available in Bedrock and then evaluate the quality of the generated titles. The evaluation is done by comparing the titles generated by FMs with human written titles if available using quantitative metrics such as ROUGE#:~:text=The%20metrics%20compare%20an%20automatically,produced%...

source/amazon-bedrock-samples-main/ops-tooling README: Operational Tooling This folder contains helpful samples to help with operationalizing your work with Amazon Bedrock Contents - Set up CloudWatch dashboard - Create CloudWatch dashboard using AWS Python SDK - Set up custom CloudWatch dashboard for Bedrock app - Create a custom CloudWatch dashboard using the AWS Python SDK to track relevant metrics of your Bedrock app Contributing We welcome community contributions! Please ensure your sample aligns with AWS best practices, and please update the *...

source/amazon-bedrock-samples-main/responsible-ai README: Responsible AI This folder contains examples related to Responsible AI on Bedrock Contents Guardrails for Amazon Bedrock Samples - Examples of Building, Updating, Versioning and Testing your Guardrails Contributing We welcome community contributions! Please ensure your sample aligns with AWS best practices, and please update the **Contents** section of this README file with a link to your sample, along with a description.

deployment/cdk-solution-helper README: cdk-solution-helper A lightweight helper function that cleans-up synthesized templates from the AWS Cloud Development Kit (CDK) and prepares them for use with the AWS Solutions publishing pipeline. This function performs the following tasks: Lambda function preparation Replaces the AssetParameter-style properties that identify source code for Lambda functions with the common variables used by the AWS Solutions publishing pipeline. - `Code.S3Bucket` is assigned the `%%BUCKET_NAME%%` placeholder v...


Script Summaries:
integration/summarize_code.py:
  Function: summarize_script
  Function: summarize_readme
  Function: process_repository

source/lambda/layers/custom_boto3_init/helper.py:
  Function: get_session
  Function: get_service_client
  Function: get_service_resource

source/lambda/layers/custom_boto3_init/custom_config.py:
  Function: custom_usr_agent_config
  Function: check_env_setup

source/lambda/layers/custom_boto3_init/test/conftest.py:
  Function: aws_credentials

source/lambda/layers/custom_boto3_init/test/test_layer_env_config.py:
  Function: test_when_usr_agent_not_set
  Function: test_custom_usr_agent_config
  Function: test_with_wrong_usr_agent_key_value

source/lambda/layers/custom_boto3_init/test/test_service_instance_creation.py:
  Function: user_agent
  Function: test_get_session
  Function: test_get_service_resource
  Function: test_get_service_client
  Function: test_get_service_resource

source/lambda/chat/sagemaker_handler.py:
  Function: lambda_handler

source/lambda/chat/huggingface_handler.py:
  Function: lambda_handler

source/lambda/chat/anthropic_handler.py:
  Function: lambda_handler

source/lambda/chat/bedrock_handler.py:
  Function: lambda_handler

source/lambda/chat/clients/bedrock_client.py:
  Class: BedrockClient
  Function: __init__
  Function: get_model
  Function: construct_chat_model

source/lambda/chat/clients/sagemaker_client.py:
  Class: SageMakerClient
  Function: __init__
  Function: get_model
  Function: construct_chat_model

source/lambda/chat/clients/llm_chat_client.py:
  Class: LLMChatClient
  Function: __init__
  Function: builder
  Function: builder
  Function: llm_config
  Function: llm_config
  Function: rag_enabled
  Function: rag_enabled
  Function: connection_id
  Function: connection_id
  Function: check_env
  Function: __validate_user_id
  Function: __validate_event_body
  Function: __validate_user_query
  Function: __validate_event_prompt
  Function: check_event
  Function: get_llm_config
  Function: construct_chat_model
  Function: get_event_conversation_id
  Function: get_model

source/lambda/chat/clients/anthropic_client.py:
  Class: AnthropicClient
  Function: __init__
  Function: check_env
  Function: get_model

source/lambda/chat/clients/huggingface_client.py:
  Class: HuggingFaceClient
  Function: __init__
  Function: check_env
  Function: get_model

source/lambda/chat/clients/builders/bedrock_builder.py:
  Class: BedrockBuilder
  Function: __init__
  Function: set_llm_model

source/lambda/chat/clients/builders/llm_builder.py:
  Class: LLMBuilder
  Function: __init__
  Function: llm_config
  Function: llm_config
  Function: is_streaming
  Function: is_streaming
  Function: conversation_memory
  Function: conversation_memory
  Function: knowledge_base
  Function: knowledge_base
  Function: callbacks
  Function: callbacks
  Function: llm_model
  Function: llm_model
  Function: api_key
  Function: api_key
  Function: errors
  Function: errors
  Function: model_params
  Function: model_params
  Function: rag_enabled
  Function: rag_enabled
  Function: connection_id
  Function: connection_id
  Function: conversation_id
  Function: conversation_id
  Function: model_defaults
  Function: memory_key
  Function: input_key
  Function: output_key
  Function: context_key
  Function: human_prefix
  Function: ai_prefix
  Function: set_model_defaults
  Function: validate_event_input_sizes
  Function: set_knowledge_base
  Function: set_conversation_memory
  Function: set_api_key
  Function: set_streaming_callbacks
  Function: set_llm_model

source/lambda/chat/clients/builders/anthropic_builder.py:
  Class: AnthropicBuilder
  Function: __init__
  Function: set_llm_model

source/lambda/chat/clients/builders/sagemaker_builder.py:
  Class: SageMakerBuilder
  Function: __init__
  Function: set_llm_model

source/lambda/chat/clients/builders/huggingface_builder.py:
  Class: HuggingFaceBuilder
  Function: __init__
  Function: set_llm_model

source/lambda/chat/clients/factories/knowledge_base_factory.py:
  Class: KnowledgeBaseFactory
  Function: get_knowledge_base

source/lambda/chat/clients/factories/conversation_memory_factory.py:
  Class: ConversationMemoryFactory
  Function: get_conversation_memory

source/lambda/chat/test/conftest.py:
  Function: context
  Function: ssm
  Function: kendra_stubber
  Function: dynamodb_resource
  Function: secretsmanager
  Function: apigateway_stubber
  Function: ssm_stubber
  Function: bedrock_stubber
  Function: sagemaker_stubber
  Function: setup_environment
  Function: setup_bedrock_environment
  Function: setup_secret
  Function: chat_event
  Function: llm_config
  Function: bedrock_llm_config
  Function: sagemaker_llm_config
  Function: dynamodb_defaults_table
  Function: huggingface_dynamodb_defaults_table
  Function: huggingface_endpoint_dynamodb_defaults_table
  Function: anthropic_dynamodb_defaults_table
  Function: bedrock_dynamodb_defaults_table
  Function: sagemaker_dynamodb_defaults_table

source/lambda/chat/test/clients/test_anthropic_client.py:
  Function: llm_client
  Function: test_get_model
  Function: test_construct_chat_model1

source/lambda/chat/test/clients/test_huggingface_client.py:
  Function: llm_client
  Function: test_parent_get_llm_config
  Function: test_construct_chat_model1

source/lambda/chat/test/clients/test_llm_chat_client.py:
  Function: simple_llm_client
  Function: llm_client
  Function: test_no_body
  Function: test_empty_body
  Function: test_missing_user_id
  Function: test_body_missing_required_fields
  Function: test_prompt_valid_length
  Function: test_empty_prompt
  Function: test_empty_question
  Function: test_multiple_length_issues
  Function: test_get_event_conversation_id
  Function: test_env_not_set
  Function: test_env_set
  Function: test_parent_get_llm_config
  Function: test_parent_get_llm_config_missing_env
  Function: test_parent_get_llm_config_parameter_not_found
  Function: test_parent_get_llm_config_client_exceptions
  Function: test_construct_chat_model_failure
  Function: test_construct_chat_model_missing_params
  Function: test_construct_chat_model_new_prompt

source/lambda/chat/test/clients/test_sagemaker_client.py:
  Function: llm_client
  Function: test_get_model
  Function: test_construct_chat_model1

source/lambda/chat/test/clients/test_bedrock_client.py:
  Function: llm_client
  Function: test_get_model
  Function: test_construct_chat_model1

source/lambda/chat/test/clients/builders/test_sagemaker_builder.py:
  Function: test_set_llm_model
  Function: test_set_llm_model_throws_error_missing_memory
  Function: test_set_llm_model_with_errors
  Function: test_set_llm_model_with_missing_config_fields
  Function: test_returned_sagemaker_model

source/lambda/chat/test/clients/builders/test_llm_builder.py:
  Function: test_knowledge_base_builder
  Function: test_conversation_memory_builder
  Function: test_api_key_builder

source/lambda/chat/test/clients/builders/test_huggingface_builder.py:
  Function: test_set_llm_model
  Function: test_set_llm_model_with_errors
  Function: test_set_llm_model_with_missing_config_fields
  Function: test_set_llm_model_with_missing_config_fields
  Function: test_returned_huggingface_model

source/lambda/chat/test/clients/builders/test_anthropic_builder.py:
  Function: test_set_llm_model
  Function: test_set_llm_model_throws_error_missing_memory
  Function: test_set_llm_model_with_errors
  Function: test_set_llm_model_with_missing_config_fields
  Function: test_returned_anthropic_model

source/lambda/chat/test/clients/builders/test_bedrock_builder.py:
  Function: test_set_llm_model
  Function: test_set_llm_model_throws_error_missing_memory
  Function: test_set_llm_model_with_errors
  Function: test_set_llm_model_with_missing_config_fields
  Function: test_returned_bedrock_model

source/lambda/chat/test/clients/factories/test_conversation_memory_factory.py:
  Function: test_get_ddb_memory_success
  Function: test_get_ddb_memory_error
  Function: test_get_ddb_memory_missing_table_name
  Function: test_get_ddb_memory_missing_memory_type

source/lambda/chat/test/clients/factories/test_knowledge_base_factory.py:
  Function: test_get_kb_memory_success
  Function: test_unsupported_kb
  Function: test_get_kb_missing_kendra_index
  Function: test_get_kb_missing_config
  Function: test_get_kb_missing_type

source/lambda/chat/test/utils/test_helpers.py:
  Function: test_validate_prompt_template_valid
  Function: test_validate_prompt_template_invalid
  Function: test_validate_prompt_template_valid
  Function: test_valid_type_casting
  Function: test_invalid_casting
  Function: test_count_keys
  Function: test_dict_pop_null_values

source/lambda/chat/test/shared/memory/test_ddb_chat_memory.py:
  Function: test_init
  Function: test_load_memory_variables_with_none
  Function: test_load_memory_variables

source/lambda/chat/test/shared/memory/test_ddb_enhanced_chat_message_history.py:
  Function: setup_test_table
  Function: test_add_message
  Function: test_add_message_with_ttl_env_var
  Function: test_adding_multiple_messages
  Function: test_getting_different_messages_for_different_conversations
  Function: test_instances_with_same_user_conversation_are_equal
  Function: test_works_with_existing_ddb
  Function: test_no_messages
  Function: test_clear
  Function: test_get_message_generic_error
  Function: test_get_message_no_resource_error
  Function: test_add_message_error
  Function: test_clear_error

source/lambda/chat/test/shared/defaults/test_model_defaults.py:
  Function: test_model_defaults_success
  Function: test_model_defaults_failure
  Function: test_model_defaults_missing_values

source/lambda/chat/test/shared/knowledge/test_kendra_knowledge_base.py:
  Function: test_knowledge_base_construction_fails
  Function: test_knowledge_base_construction

source/lambda/chat/test/shared/knowledge/test_kendra_retriever.py:
  Function: kendra_retriever
  Function: get_kendra_result_stubbed
  Function: load_kendra_response
  Function: kendra_query_expected_response
  Function: test_kendra_retriever
  Function: test_kendra_query
  Function: test_get_relevant_documents
  Function: test_kendra_throws_client_error

source/lambda/chat/test/llms/test_anthropic.py:
  Function: streamless_chat
  Function: streaming_chat
  Function: temp_anthropic_dynamodb_defaults_table
  Function: test_implement_error_not_raised
  Function: test_generate
  Function: test_model_get_clean_model_params
  Function: test_model_default_stop_sequences
  Function: test_exception_for_failed_model_incorrect_key

source/lambda/chat/test/llms/test_sagemaker.py:
  Function: streamless_chat
  Function: streaming_chat
  Function: test_missing_values
  Function: test_implement_error_not_raised
  Function: test_generate
  Function: test_exception_for_failed_model_response
  Function: test_model_get_clean_model_params
  Function: test_clean_model_endpoint_args

source/lambda/chat/test/llms/test_bedrock.py:
  Function: streamless_chat
  Function: streaming_chat
  Function: temp_bedrock_dynamodb_defaults_table
  Function: test_implement_error_not_raised
  Function: test_generate
  Function: test_exception_for_failed_model_response
  Function: test_model_get_clean_model_params
  Function: test_model_default_stop_sequences
  Function: test_guardrails
  Function: test_bedrock_get_llm_class
  Function: test_bedrock_get_llm_class_no_env

source/lambda/chat/test/llms/test_huggingface.py:
  Function: chat
  Function: inference_chat
  Function: temp_huggingface_dynamodb_defaults_table
  Function: test_implement_error_not_raised
  Function: test_inference_error_not_raised
  Function: test_exception_for_failed_model_incorrect_repo
  Function: test_huggingface_model_api_error
  Function: test_huggingface_inference_api_error
  Function: test_generate_huggingface
  Function: test_exception_in_generate
  Function: test_model_get_clean_model_params
  Function: test_endpoint_get_clean_model_params
  Function: test_model_default_stop_sequences
  Function: test_endpoint_default_stop_sequences
  Class: MockConversationChainClass
  Function: predict

source/lambda/chat/test/llms/test_base_langchain.py:
  Function: chat
  Function: rag_chat
  Function: test_placeholder_replacements
  Function: test_get_validated_prompt
  Function: test_get_clean_model_params_success

source/lambda/chat/test/llms/models/bedrock_params/test_anthropic.py:
  Function: test_anthropic_params_dataclass_success
  Function: test_anthropic_v3_params_dataclass_success
  Function: test_anthropic_get_params_as_dict
  Function: test_anthropic_incorrect_params

source/lambda/chat/test/llms/models/bedrock_params/test_cohere.py:
  Function: test_cohere_params_dataclass_success
  Function: test_cohere_get_params_as_dict
  Function: test_cohere_incorrect_params

source/lambda/chat/test/llms/models/bedrock_params/test_amazon.py:
  Function: test_amazon_params_dataclass_success
  Function: test_amazon_get_params_as_dict
  Function: test_amazon_incorrect_params

source/lambda/chat/test/llms/models/bedrock_params/test_meta.py:
  Function: test_meta_params_dataclass_success
  Function: test_meta_get_params_as_dict
  Function: test_meta_incorrect_params

source/lambda/chat/test/llms/models/bedrock_params/test_ai21.py:
  Function: test_ai21_params_dataclass_success
  Function: test_ai21_get_params_as_dict
  Function: test_ai21_incorrect_params

source/lambda/chat/test/llms/models/sagemaker/test_content_handler.py:
  Function: test_replace_placeholders
  Function: test_transform_input
  Function: test_transform_output
  Function: test_transform_output_raises

source/lambda/chat/test/llms/rag/test_bedrock_retrieval.py:
  Function: llm_params
  Function: titan_model
  Function: temp_bedrock_dynamodb_defaults_table
  Function: test_implement_error_not_raised
  Function: test_generate
  Function: test_exception_for_failed_model_incorrect_key
  Function: test_bedrock_model_variation
  Function: test_guardrails

source/lambda/chat/test/llms/rag/test_huggingface_retrieval.py:
  Function: knowledge_base
  Function: llm_params
  Function: streamless_huggingface_model
  Function: streamless_huggingface_endpoint
  Function: test_implement_error_not_raised
  Function: test_implement_error_not_raised
  Function: test_generate
  Function: test_exception_for_failed_model_incorrect_api_key
  Function: test_exception_for_failed_endpoint_incorrect_api_key
  Class: MockConversationChainClass
  Function: invoke

source/lambda/chat/test/llms/rag/test_anthropic_retrieval.py:
  Function: llm_params
  Function: anthropic_model
  Function: test_implement_error_not_raised
  Function: test_generate
  Function: test_exception_for_failed_model_incorrect_key

source/lambda/chat/test/llms/rag/test_sagemaker_retrieval.py:
  Function: llm_params
  Function: sagemaker_model
  Function: temp_sagemaker_dynamodb_defaults_table
  Function: test_implement_error_not_raised
  Function: test_generate
  Function: test_generate_error

source/lambda/chat/test/llms/factories/test_bedrock_params_factory.py:
  Function: test_sanitizer_passes
  Function: test_sanitizer_fails

source/lambda/chat/test/handlers/test_huggingface_handler.py:
  Function: test_huggingface_chat_handler
  Function: test_huggingface_chat_handler_empty_conversation
  Function: test_missing_llm_config_key

source/lambda/chat/test/handlers/test_anthropic_handler.py:
  Function: test_anthropic_chat_handler
  Function: test_anthropic_chat_handler_empty_conversation
  Function: test_missing_llm_config_key

source/lambda/chat/test/handlers/test_bedrock_handler.py:
  Function: test_bedrock_chat_handler
  Function: test_bedrock_chat_handler_empty_conversation
  Function: test_missing_llm_config_key

source/lambda/chat/test/handlers/test_sagemaker_handler.py:
  Function: test_sagemaker_chat_handler
  Function: test_sagemaker_chat_handler_empty_conversation
  Function: test_missing_llm_config_key

source/lambda/chat/utils/custom_exceptions.py:
  Class: LLMBuildError
  Class: LLMInvocationError

source/lambda/chat/utils/enum_types.py:
  Class: KnowledgeBaseTypes
  Class: ConversationMemoryTypes
  Class: LLMProviderTypes
  Class: BedrockModelProviders
  Class: CloudWatchNamespaces
  Class: CloudWatchMetrics

source/lambda/chat/utils/helpers.py:
  Function: get_metrics_client
  Function: type_cast
  Function: validate_prompt_placeholders
  Function: format_lambda_response
  Function: enforce_stop_tokens
  Function: count_keys
  Function: pop_null_values

source/lambda/chat/utils/handler_response_formatter.py:
  Function: format_response

source/lambda/chat/shared/memory/ddb_enhanced_message_history.py:
  Class: DynamoDBChatMessageHistory
  Function: __init__
  Function: messages
  Function: add_message
  Function: clear

source/lambda/chat/shared/memory/ddb_chat_memory.py:
  Class: DynamoDBChatMemory
  Function: __init__
  Function: buffer
  Function: load_memory_variables
  Function: memory_variables
  Function: _get_input_output

source/lambda/chat/shared/callbacks/websocket_handler.py:
  Class: WebsocketHandler
  Function: __init__
  Function: connection_id
  Function: conversation_id
  Function: client
  Function: connection_url
  Function: source_documents_formatter
  Function: send_references
  Function: post_token_to_connection
  Function: post_response_to_connection
  Function: format_response

source/lambda/chat/shared/callbacks/websocket_error_handler.py:
  Class: WebsocketErrorHandler
  Function: __init__
  Function: connection_url
  Function: trace_id
  Function: trace_id
  Function: client
  Function: connection_id
  Function: post_token_to_connection
  Function: format_response

source/lambda/chat/shared/callbacks/websocket_streaming_handler.py:
  Class: WebsocketStreamingCallbackHandler
  Function: __init__
  Function: is_streaming
  Function: connection_id
  Function: connection_url
  Function: conversation_id
  Function: client
  Function: source_documents_formatter
  Function: on_chat_model_start
  Function: post_token_to_connection
  Function: on_llm_new_token
  Function: send_references
  Function: on_chain_end
  Function: on_llm_error
  Function: format_response

source/lambda/chat/shared/defaults/model_defaults.py:
  Class: ModelDefaults
  Function: __init__
  Function: set_model_defaults

source/lambda/chat/shared/knowledge/knowledge_base.py:
  Class: KnowledgeBase
  Function: retriever
  Function: retriever
  Function: source_docs_formatter

source/lambda/chat/shared/knowledge/kendra_retriever.py:
  Class: CustomKendraRetriever
  Function: __init__
  Function: _get_relevant_documents
  Function: _kendra_query
  Function: _get_clean_docs

source/lambda/chat/shared/knowledge/kendra_knowledge_base.py:
  Class: KendraKnowledgeBase
  Function: __init__
  Function: _check_env_variables
  Function: source_docs_formatter

source/lambda/chat/llms/base_langchain.py:
  Class: BaseLangChainModel
  Function: __init__
  Function: api_token
  Function: api_token
  Function: streaming
  Function: streaming
  Function: verbose
  Function: verbose
  Function: conversation_chain
  Function: conversation_chain
  Function: prompt
  Function: memory_buffer
  Function: conversation_memory
  Function: conversation_memory
  Function: knowledge_base
  Function: knowledge_base
  Function: model_params
  Function: model_params
  Function: temperature
  Function: temperature
  Function: model
  Function: model
  Function: llm
  Function: llm
  Function: stop_sequences
  Function: stop_sequences
  Function: prompt_template
  Function: prompt_template
  Function: prompt_template_placeholders
  Function: callbacks
  Function: callbacks
  Function: rag_enabled
  Function: rag_enabled
  Function: prompt
  Function: memory_buffer
  Function: get_conversation_chain
  Function: generate
  Function: get_validated_prompt
  Function: get_clean_model_params
  Function: get_llm

source/lambda/chat/llms/sagemaker.py:
  Class: SageMakerLLM
  Function: __init__
  Function: sagemaker_endpoint_name
  Function: sagemaker_endpoint_name
  Function: input_schema
  Function: response_jsonpath
  Function: endpoint_params
  Function: get_llm
  Function: generate
  Function: get_clean_params

source/lambda/chat/llms/huggingface.py:
  Class: HuggingFaceLLM
  Function: __init__
  Function: inference_endpoint
  Function: inference_endpoint
  Function: get_llm
  Function: generate
  Function: get_clean_model_params

source/lambda/chat/llms/anthropic.py:
  Class: AnthropicLLM
  Function: __init__
  Function: get_llm
  Function: generate
  Function: get_clean_model_params

source/lambda/chat/llms/bedrock.py:
  Class: BedrockLLM
  Function: __init__
  Function: model_family
  Function: model_family
  Function: get_llm
  Function: generate
  Function: get_clean_model_params

source/lambda/chat/llms/models/llm.py:
  Class: LLM
  Function: __post_init__

source/lambda/chat/llms/models/custom_chat_anthropic.py:
  Class: CustomChatAnthropic
  Function: _default_params

source/lambda/chat/llms/models/llm_params.py:
  Class: LLMParams
  Function: get_params_as_dict

source/lambda/chat/llms/models/bedrock_params/mistral.py:
  Class: BedrockMistralLLMParams
  Function: __post_init__
  Function: get_params_as_dict

source/lambda/chat/llms/models/bedrock_params/llm.py:
  Class: BedrockLLMParams
  Function: cleanup

source/lambda/chat/llms/models/bedrock_params/anthropic.py:
  Class: BedrockAnthropicLLMParams
  Class: BedrockAnthropicV1LLMParams
  Class: BedrockAnthropicV3LLMParams
  Function: __post_init__
  Function: get_params_as_dict
  Function: __post_init__
  Function: __post_init__

source/lambda/chat/llms/models/bedrock_params/ai21.py:
  Class: BedrockAI21LLMParams
  Function: __post_init__
  Function: get_params_as_dict

source/lambda/chat/llms/models/bedrock_params/cohere.py:
  Class: BedrockCohereLLMParams
  Function: __post_init__
  Function: get_params_as_dict

source/lambda/chat/llms/models/bedrock_params/amazon.py:
  Class: BedrockAmazonLLMParams
  Function: __post_init__
  Function: get_params_as_dict

source/lambda/chat/llms/models/bedrock_params/meta.py:
  Class: BedrockMetaLLMParams
  Function: __post_init__
  Function: get_params_as_dict

source/lambda/chat/llms/models/sagemaker/content_handler.py:
  Class: SageMakerContentHandler
  Function: __init__
  Function: transform_input
  Function: transform_output
  Function: replace_placeholders

source/lambda/chat/llms/rag/bedrock_retrieval.py:
  Class: BedrockRetrievalLLM
  Function: __init__
  Function: condensing_prompt_template
  Function: return_source_docs
  Function: get_conversation_chain
  Function: generate

source/lambda/chat/llms/rag/sagemaker_retrieval.py:
  Class: SageMakerRetrievalLLM
  Function: __init__
  Function: condensing_prompt_template
  Function: return_source_docs
  Function: get_conversation_chain
  Function: generate

source/lambda/chat/llms/rag/huggingface_retrieval.py:
  Class: HuggingFaceRetrievalLLM
  Function: __init__
  Function: condensing_prompt_template
  Function: return_source_docs
  Function: get_conversation_chain
  Function: generate

source/lambda/chat/llms/rag/anthropic_retrieval.py:
  Class: AnthropicRetrievalLLM
  Function: __init__
  Function: condensing_prompt_template
  Function: return_source_docs
  Function: get_conversation_chain
  Function: generate

source/lambda/chat/llms/factories/bedrock_adapter_factory.py:
  Class: BedrockAdapterFactory
  Function: __init__
  Function: model_map
  Function: get_bedrock_adapter

source/lambda/custom-resource/cfn_response.py:
  Function: send_response

source/lambda/custom-resource/lambda_ops_metrics.py:
  Function: handler

source/lambda/custom-resource/lambda_func.py:
  Class: UnSupportedOperationTypeException
  Function: get_function_for_resource
  Function: handler

source/lambda/custom-resource/test/conftest.py:
  Function: aws_credentials
  Function: s3
  Function: ddb
  Function: cw_logs
  Function: ssm
  Function: secretsmanager
  Function: custom_resource_event
  Function: mock_lambda_context
  Function: reset_metric_set
  Class: FakeLambdaContext
  Function: __init__

source/lambda/custom-resource/test/test_lambda_func.py:
  Function: patch_powertools
  Function: test_get_function_for_operation
  Function: test_handler_for_success
  Function: test_handler_for_error
  Function: test_get_function_for_operation

source/lambda/custom-resource/test/test_lambda_ops_metrics.py:
  Function: test_lambda_handler_success
  Function: test_lambda_handler_on_exception

source/lambda/custom-resource/test/utils/test_metrics.py:
  Function: test_when_env_variables_set
  Function: test_when_solution_version_not_set
  Function: test_when_solution_id_not_set
  Function: test_sending_cw_metrics
  Function: test_sending_cw_metrics_raises

source/lambda/custom-resource/test/utils/test_lambda_context_parser.py:
  Function: test_get_invocation_account_id

source/lambda/custom-resource/test/utils/test_metrics_payload.py:
  Function: cw_stub
  Function: metric_responses
  Function: setup_metrics_environment
  Function: get_metric_data_stubbed
  Function: test_publish_metrics_success
  Function: test_publish_metrics_success_kendra_missing
  Function: test_publish_metrics_raises

source/lambda/custom-resource/test/operations/test_shared.py:
  Function: test_get_zip_archive
  Function: test_get_archive_errors_for_wrong_prefix
  Function: test_with_bad_zip_file

source/lambda/custom-resource/test/operations/test_copy_web_ui.py:
  Function: test_verify_env_setup_success
  Function: test_evn_setup_with_resource_props_wrong_value
  Function: test_evn_setup_with_resource_props_empty
  Function: test_evn_with_missing_source_bucket
  Function: test_evn_with_missing_destination_bucket
  Function: test_evn_with_source_bucket_str_empty
  Function: test_env_with_destination_bucket_str_empty
  Function: test_env_with_missing_ssm_param_key
  Function: test_env_with_non_existing_ssm_param_key
  Function: test_get_params_succes
  Function: test_get_params_failure
  Function: test_execute_call_success
  Function: test_execute_call_with_bad_archive
  Function: test_execute_call_with_wrong_source_bucket
  Function: test_execute_call_with_wrong_destination_bucket
  Function: test_lambda_handler

source/lambda/custom-resource/test/operations/test_use_case_policy.py:
  Function: test_when_operation_type_is_invalid
  Function: test_when_resource_properties_missing
  Function: test_create_with_no_admin_group
  Function: test_create_with_existing_admin_group
  Function: test_create_where_group_exists
  Function: test_create_fails
  Function: test_delete
  Function: test_delete_with_no_admin_group
  Function: test_delete_with_no_table_fails_but_continues
  Function: test_delete_fails
  Function: test_execute_method
  Function: test_lambda_handler

source/lambda/custom-resource/test/operations/test_admin_policy.py:
  Function: test_when_operation_type_is_invalid
  Function: test_when_resource_properties_missing
  Function: test_create_with_no_admin_group
  Function: test_create_with_existing_admin_group
  Function: test_create_fails
  Function: test_delete
  Function: test_delete_fails
  Function: test_execute_method
  Function: test_lambda_handler

source/lambda/custom-resource/test/operations/test_copy_model_info_to_ddb.py:
  Function: test_verify_env_setup_success
  Function: test_verify_when_ddb_table_missing
  Function: test_verify_when_source_bucket_missing
  Function: test_verify_when_source_prefix_missing
  Function: test_create_success
  Function: test_create_with_incorrect_table_name
  Function: test_create_with_bad_zip_file
  Function: test_execute_call_success
  Function: test_execute_with_missing_resource_properties
  Function: test_execute_delete_event_succesful_with_missing_properties
  Function: test_lambda_handler

source/lambda/custom-resource/test/operations/test_anonymous_metric.py:
  Function: setup_ssm
  Function: test_when_operation_type_is_invalid
  Function: test_sending_metric
  Function: test_sending_metric_missing_props
  Function: test_sanitize_method
  Function: test_lambda_handler
  Function: test_lambda_handler_for_missing_props

source/lambda/custom-resource/test/operations/test_update_s3_policy.py:
  Function: test_execute_success
  Function: test_execute_with_non_matching_policy
  Function: test_execute_with_matching_policy
  Function: test_execute_with_policy_for_different_prefix
  Function: test_execute_delete
  Function: test_verify_env_setup_success
  Function: test_verify_env_setup_failure
  Function: test_create_success

source/lambda/custom-resource/test/operations/test_gen_uuid.py:
  Function: test_regex
  Function: test_gen_uuid_success
  Function: test_gen_uuid_success
  Function: test_when_uuid_fails
  Function: test_when_operation_type_is_invalid
  Function: test_lambda_handler

source/lambda/custom-resource/test/operations/test_copy_api_key.py:
  Function: test_verify_env_setup_success
  Function: test_env_setup_with_no_api_key
  Function: test_env_setup_with_no_secret_name
  Function: test_create_failure
  Function: test_create_success
  Function: test_create_success_when_existing
  Function: test_delete_failure
  Function: test_delete_success
  Function: test_execute_create_and_update
  Function: test_execute_delete
  Function: test_execute_failure

source/lambda/custom-resource/test/operations/test_webconfig.py:
  Function: test_verify_env_setup_success
  Function: test_env_setup_with_no_ssm_key
  Function: test_env_setup_with_no_api_endpoint
  Function: test_env_setup_with_no_usr_pool_id
  Function: test_env_setup_with_no_usr_pool_client_id
  Function: test_create_success
  Function: test_create_success_with_additional_config
  Function: test_create_success_with_additional_config_marking_internal_user
  Function: test_create_success_with_additional_config_marking_external_user
  Function: test_create_success_with_additional_config_empty
  Function: test_create_success_with_additional_config_empty_marking_internal_user
  Function: test_create_success_with_additional_config_empty_marking_external_user
  Function: test_delete_failure
  Function: test_delete_success
  Function: test_execute_create_and_update
  Function: test_execute_delete
  Function: test_execute_failure

source/lambda/custom-resource/test/operations/test_cw_loggroup_policy.py:
  Function: test_when_operation_type_is_invalid
  Function: test_when_resource_properties_missing
  Function: test_create_log_policy_for_valid_principal
  Function: test_create_log_policy_for_invalid_principal
  Function: test_update_method
  Function: test_delete_method
  Function: test_delete_method_for_invalid_policy
  Function: test_create_method_for_succesful_creation
  Function: test_execute_method
  Function: test_lambda_handler

source/lambda/custom-resource/test/fixtures/cw_loggroup_policy_events.py:
  Function: lambda_event

source/lambda/custom-resource/test/fixtures/copy_web_ui_events.py:
  Function: lambda_event
  Function: web_ui_copy_setup

source/lambda/custom-resource/test/fixtures/copy_model_info_events.py:
  Function: copy_to_ddb_event
  Function: setup_model_info

source/lambda/custom-resource/test/fixtures/gen_uuid_events.py:
  Function: lambda_event

source/lambda/custom-resource/test/fixtures/copy_api_key_events.py:
  Function: lambda_event
  Function: setup_secretsmanager

source/lambda/custom-resource/test/fixtures/use_case_policy_events.py:
  Function: lambda_event
  Function: setup_ddb

source/lambda/custom-resource/test/fixtures/anonymous_metrics_events.py:
  Function: lambda_events

source/lambda/custom-resource/test/fixtures/update_s3_policy_events.py:
  Function: lambda_event
  Function: s3_stub
  Function: put_public_access_block_as_false
  Function: put_public_access_block_as_true
  Function: s3_stub_success
  Function: s3_stub_existing_non_matching_policy
  Function: s3_stub_existing_policy
  Function: s3_stub_existing_policy_for_different_prefix

source/lambda/custom-resource/test/fixtures/admin_policy_events.py:
  Function: lambda_event
  Function: setup_ddb

source/lambda/custom-resource/test/fixtures/webconfig_events.py:
  Function: lambda_event
  Function: lambda_event_with_additional_config
  Function: lambda_event_with_additional_config_internal_user
  Function: lambda_event_with_additional_config_external_user
  Function: setup_ssm

source/lambda/custom-resource/utils/metrics.py:
  Function: verify_env_setup
  Function: push_builder_metrics

source/lambda/custom-resource/utils/lambda_context_parser.py:
  Function: get_invocation_account_id

source/lambda/custom-resource/utils/constants.py:
  Class: CloudWatchNamespaces
  Class: CloudWatchMetrics

source/lambda/custom-resource/utils/metrics_payload.py:
  Function: get_cloudwatch_metrics_queries
  Function: get_metrics_payload

source/lambda/custom-resource/utils/data.py:
  Class: BuilderMetrics
  Function: __init__
  Function: __post_init__

source/lambda/custom-resource/operations/webconfig.py:
  Function: verify_env_setup
  Function: get_additional_config_ssm_parameter
  Function: create
  Function: delete
  Function: execute

source/lambda/custom-resource/operations/cw_loggroup_policy.py:
  Class: InvalidPrincipalException
  Function: verify_env_setup
  Function: create_loggroup_policy
  Function: create
  Function: update
  Function: delete
  Function: execute

source/lambda/custom-resource/operations/update_s3_policy.py:
  Function: create
  Function: verify_env_setup
  Function: execute

source/lambda/custom-resource/operations/copy_web_ui.py:
  Function: get_params
  Function: verify_env_setup
  Function: delete
  Function: create
  Function: execute

source/lambda/custom-resource/operations/copy_api_key.py:
  Function: verify_env_setup
  Function: create
  Function: delete
  Function: execute

source/lambda/custom-resource/operations/shared.py:
  Function: get_zip_archive

source/lambda/custom-resource/operations/admin_policy.py:
  Class: InvalidPrincipalException
  Function: verify_env_setup
  Function: create
  Function: delete
  Function: execute

source/lambda/custom-resource/operations/copy_model_info_to_ddb.py:
  Function: verify_env_setup
  Function: create
  Function: execute

source/lambda/custom-resource/operations/anonymous_metrics.py:
  Function: verify_env_setup
  Function: sanitize_data
  Function: get_additional_config_ssm_parameter
  Function: execute

source/lambda/custom-resource/operations/gen_uuid.py:
  Function: verify_env_setup
  Function: execute

source/lambda/custom-resource/operations/use_case_policy.py:
  Class: InvalidPrincipalException
  Function: verify_env_setup
  Function: create
  Function: _create_updated_admin_policy
  Function: delete
  Function: execute

source/lambda/reconcile-data/lambda_func.py:
  Function: determine_operation
  Function: handler

source/lambda/reconcile-data/test/conftest.py:
  Function: aws_credentials
  Function: ssm
  Function: custom_resource_event
  Function: mock_lambda_context
  Class: FakeLambdaContext
  Function: __init__

source/lambda/reconcile-data/test/test_lambda_func.py:
  Function: init_ssm
  Function: test_handler
  Function: test_handler_with_diff_user_identity
  Function: test_when_operation_not_found

source/lambda/reconcile-data/test/operations/test_dynamodb_remove_case.py:
  Function: test_reconcile
  Function: test_reconcile_failure_with_ssm
  Function: test_reconcile_with_parameter_name_missing_in_record

source/lambda/reconcile-data/test/fixtures/remove_case_event.py:
  Function: ttl_remove_event

source/lambda/reconcile-data/exceptions/operation_not_found.py:
  Class: OperationNotFoundException

source/lambda/reconcile-data/operations/dynamodb_remove_case.py:
  Function: delete_ssm_parameter_key
  Function: reconcile

source/infrastructure/test/mock-lambda-func/python-lambda/function.py:
  Function: handler

source/amazon-bedrock-samples-main/function-calling/fc_pydantic_class_converse_bedrock.py:
  Function: bedrock_tool
  Class: ToolsList
  Function: converse_with_tools
  Function: converse
  Function: decorator
  Function: get_weather

source/amazon-bedrock-samples-main/function-calling/function_calling_text2SQL_converse_bedrock_streamlit.py:
  Class: ToolsList
  Function: converse_with_tools
  Function: converse
  Function: query_athena

source/amazon-bedrock-samples-main/function-calling/fc_migrations_converse_bedrock_streamlit.py:
  Function: oai_call_to_bedrock_call
  Function: converse_with_tools

source/amazon-bedrock-samples-main/function-calling/function_calling_converse_bedrock_streamlit.py:
  Class: ToolsList
  Class: ToolsList2
  Class: ToolsList3
  Function: converse_with_tools
  Function: converse
  Function: converse_image
  Function: get_weather
  Function: get_weather
  Function: get_weather
  Function: web_search

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/product-review-agent/agent.py:
  Class: ProductReviewAgent
  Function: __init__
  Function: invoke_agent

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/product-review-agent/app.py:
  Function: get_named_parameter
  Function: lambda_handler

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation/agent/streamlit/bedrock_streamlit.py:
  Function: generate_session_id
  Function: fetch_agents
  Function: fetch_knowledge_bases
  Function: fetch_data_sources
  Function: fetch_agent_aliases
  Function: fetch_agent_knowledge_bases
  Function: fetch_knowledge_base_name
  Function: extract_bucket_name
  Function: fetch_data_source_s3_configuration
  Function: reset_session
  Function: show_csv
  Function: extract_text_from_docx
  Function: convert_docx_to_html
  Function: show_doc
  Function: show_docx
  Function: show_excel
  Function: show_html
  Function: show_md
  Function: show_pdf
  Function: show_text
  Function: process_uploaded_file
  Function: bedrock_query_knowledge_base
  Function: update_knowledge_base
  Function: check_ingestion_job_status
  Function: invoke_agent
  Function: main

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation/agent/streamlit/sigv4.py:
  Class: SigV4HttpRequester
  Function: __init__
  Function: send_signed_request

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation/agent/lambda/data-loader/index.py:
  Function: lambda_handler

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation/agent/lambda/action-groups/send_reminder.py:
  Function: get_named_parameter
  Function: get_named_property
  Function: open_claims
  Function: generate_reminder_id
  Function: send_reminder
  Function: notify_pending_documents
  Function: lambda_handler

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation/agent/lambda/action-groups/gather_evidence.py:
  Function: get_named_parameter
  Function: get_named_property
  Function: generate_upload_id
  Function: send_evidence_url
  Function: gather_evidence
  Function: lambda_handler

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/insurance-claim-lifecycle-automation/agent/lambda/action-groups/create_claim.py:
  Function: claim_generator
  Function: collect_documents
  Function: create_claim
  Function: lambda_handler

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/text-2-sql-agent/lambda_function.py:
  Function: get_schema
  Function: execute_athena_query
  Function: extract_result_data
  Function: lambda_handler

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/text-2-sql-agent/dependencies/clean.py:
  Function: delete_crawler
  Function: delete_tables
  Function: delete_database
  Function: delete_policy_by_name

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/text-2-sql-agent/dependencies/build_infrastructure.py:
  Function: unzip_data
  Function: upload_data

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/customer-relationship-management-agent/util/bedrock.py:
  Class: BedrockAgent
  Function: __init__
  Function: new_session
  Function: invoke_agent

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/customer-relationship-management-agent/src/bedrock-agent/basic/crm-bot-lambda.py:
  Function: get_customer_interactions
  Function: get_customer
  Function: get_named_parameter
  Function: get_named_property
  Function: listRecentInteractions
  Function: companyOverview
  Function: getPreferences
  Function: lambda_handler

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/customer-relationship-management-agent/src/bedrock-agent/jira/crm-bot-lambda.py:
  Function: get_customer_interactions
  Function: get_customer
  Function: get_named_parameter
  Function: get_named_property
  Function: listRecentInteractions
  Function: companyOverview
  Function: getPreferences
  Function: getOpenJiraIssues
  Function: updateJiraIssue
  Function: lambda_handler

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/customer-relationship-management-agent/src/data/upload_data.py:
  Function: upload_data

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/agentsforbedrock-retailagent/csbot_agent.py:
  Function: load_data
  Function: return_customer_info
  Function: return_shoe_inventory
  Function: place_shoe_order
  Function: lambda_handler

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/hr-assistant/streamlit/agent_streamlit.py:
  Function: session_generator
  Function: bedrock_agent
  Function: get_file_from_s3
  Function: render_s3_image
  Function: parse_trace
  Function: main

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/hr-assistant/agent/lambda/index.py:
  Function: call_sql_database
  Function: send_email_endpoint
  Function: generate_image_endpoint
  Function: send_slack_message_endpoint
  Function: schedule_meeting_endpoint
  Function: get_availability_endpoint
  Function: handler

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/hr-assistant/agent/lambda/calendar_integration.py:
  Function: schedule_standard_meeting
  Function: find_meeting_timeslot

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/hr-assistant/agent/lambda/athena_sql_query.py:
  Function: get_data_from_database
  Function: execute_athena_query
  Function: check_query_status
  Function: get_query_results

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/hr-assistant/agent/lambda/generate_image.py:
  Function: generate_image

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/hr-assistant/agent/lambda/email_integration.py:
  Function: send_email

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/hr-assistant/agent/lambda/slack_integration.py:
  Function: send_slack_message

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/text-2-sql-agent-cdk-enhanced/claude_3.py:
  Function: invoke_claude_3_with_text
  Class: Claude3Wrapper
  Function: __init__
  Function: invoke_claude_3_with_text
  Function: invoke_claude_3_multimodal

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/text-2-sql-agent-cdk-enhanced/agent_instruction_generator.py:
  Function: analyze_csv_files
  Function: generate_instruction

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/text-2-sql-agent-cdk-enhanced/Prep_Data.py:
  Function: prep_data

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/text-2-sql-agent-cdk-enhanced/app.py:
  Class: MyStack
  Function: __init__

source/amazon-bedrock-samples-main/agents-for-bedrock/use-case-examples/text-2-sql-agent-cdk-enhanced/lambda/agent/index.py:
  Function: get_schema
  Function: correct_query
  Function: execute_athena_query
  Function: extract_result_data
  Function: compress_data
  Function: save_to_s3
  Function: lambda_handler

source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/02-create-agent-with-api-schema/lambda_function.py:
  Function: get_named_parameter
  Function: get_named_property
  Function: claim_detail
  Function: open_claims
  Function: outstanding_paperwork
  Function: send_reminder
  Function: lambda_handler

source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/05-create-agent-with-knowledge-base-and-action-group/knowledge_base.py:
  Function: interactive_sleep
  Class: BedrockKnowledgeBase
  Function: __init__
  Function: create_s3_bucket
  Function: create_bedrock_kb_execution_role
  Function: create_oss_policy_attach_bedrock_execution_role
  Function: create_policies_in_oss
  Function: create_oss
  Function: create_vector_index
  Function: create_knowledge_base
  Function: start_ingestion_job
  Function: get_knowledge_base_id
  Function: get_bucket_name
  Function: delete_kb
  Function: delete_iam_roles_and_policies
  Function: delete_s3

source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/05-create-agent-with-knowledge-base-and-action-group/agent.py:
  Function: create_dynamodb
  Function: create_lambda
  Function: create_lambda_role
  Function: create_agent_role_and_policies
  Function: delete_agent_roles_and_policies
  Function: clean_up_resources

source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/09-fine-grained-access-permissions/003_bedrock-agent/agent/agent.py:
  Function: get_named_parameter
  Function: list_claims
  Function: get_claim
  Function: update_claim
  Function: lambda_handler
  Function: verifyAccess
  Function: verifyJWT_getUserInfo
  Function: getActionID
  Function: handle_is_authorized
  Function: construct_authz_request_from_token

source/amazon-bedrock-samples-main/agents-for-bedrock/features-examples/09-fine-grained-access-permissions/004_apigateway/invoke-lambda/invoke_lambda.py:
  Function: lambda_handler

source/amazon-bedrock-samples-main/prompt-engineering/session-4/multimodal/faiss-multimodal/utils.py:
  Function: get_titan_multimodal_embedding
  Function: plot_similarity_heatmap
  Function: get_image_from_item_id
  Function: get_image_from_item_id_s3
  Function: display_images
  Function: find_similar_items_from_query
  Function: find_similar_items_from_image

source/amazon-bedrock-samples-main/introduction-to-bedrock/model_choice_converse_bedrock_streamlit.py:
  Function: invoke_bedrock_model
  Class: ModelThread
  Function: invokeModelsInParallel
  Function: __init__
  Function: run

source/amazon-bedrock-samples-main/introduction-to-bedrock/getting_started_converse_bedrock_streamlit.py:
  Function: invoke_bedrock_model

source/amazon-bedrock-samples-main/introduction-to-bedrock/model-choice-demo-converse-api.py:
  Function: invoke_bedrock_model
  Class: ModelThread
  Function: invokeModelsInParallel
  Function: __init__
  Function: run

source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-emails-bedrock/cdk-app/lambdas/process_emails_with_bedrock/lambda.py:
  Function: get_decoded_content_text
  Function: parse_float
  Function: process_emails_with_bedrock
  Function: lambda_handler

source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-emails-bedrock/cdk-app/cdk_app/cdk_app_stack.py:
  Class: ProcessEmailBedrockStack
  Function: __init__

source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-dynamodb-table-bedrock/process_dynamodb_table_bedrock/process_dynamodb_table_bedrock_stack.py:
  Class: ProcessDynamoDBTableBedrockStack
  Function: __init__

source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-dynamodb-table-bedrock/process_dynamodb_table_bedrock/populate_dynamodb_table/lambda_function.py:
  Function: save_data_to_dynamodb
  Function: lambda_handler

source/amazon-bedrock-samples-main/introduction-to-bedrock/create_your_first_bedrock_application/process-dynamodb-table-bedrock/process_dynamodb_table_bedrock/process_dynamodb_table_bedrock_lambda/lambda_function.py:
  Function: create_emails_tags
  Function: save_extracted_info
  Function: lambda_handler

source/amazon-bedrock-samples-main/model-evals/llm-as-a-judge/main.py:
  Function: read_config
  Function: output_handler
  Function: run_notebooks
  Function: main

source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase/streamlit/chatbot.py:
  Function: generate_presigned_url

source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase/lambda/bedrock-kb-retrieveAndGenerate.py:
  Function: retrieveAndGenerate
  Function: lambda_handler

source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase/notebook/utility.py:
  Function: create_bedrock_execution_role
  Function: create_oss_policy_attach_bedrock_execution_role
  Function: create_policies_in_oss
  Function: delete_iam_role_and_policies

source/amazon-bedrock-samples-main/rag-solutions/sql-query-generator/sql_chat_ui.py:
  Function: ask_question
  Function: is_query_present
  Function: extract_query
  Function: run_query

source/amazon-bedrock-samples-main/rag-solutions/sql-query-generator/sql_query_chain.py:
  Function: sql_chain

source/amazon-bedrock-samples-main/rag-solutions/sql-query-generator/sqlite_helper.py:
  Function: run_query

source/amazon-bedrock-samples-main/rag-solutions/semantic-search/search_lib.py:
  Function: get_index
  Function: get_similarity_search_results

source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase-guardrails/lambda/bedrock-kb-retrieveAndGenerate.py:
  Function: retrieveAndGenerate
  Function: lambda_handler

source/amazon-bedrock-samples-main/rag-solutions/contextual-chatbot-using-knowledgebase-guardrails/notebook/utility.py:
  Function: create_bedrock_execution_role
  Function: create_oss_policy_attach_bedrock_execution_role
  Function: create_policies_in_oss
  Function: delete_iam_role_and_policies

source/amazon-bedrock-samples-main/knowledge-bases/utility.py:
  Function: create_bedrock_execution_role
  Function: create_oss_policy_attach_bedrock_execution_role
  Function: create_policies_in_oss
  Function: delete_iam_role_and_policies
  Function: interactive_sleep
  Function: create_bedrock_execution_role_multi_ds

source/amazon-bedrock-samples-main/knowledge-bases/use-case-examples/metadata-filter-access-control/utils.py:
  Function: create_base_infrastructure
  Function: create_kb_infrastructure
  Function: updateDataAccessPolicy
  Function: createAOSSIndex
  Function: replace_vars

source/amazon-bedrock-samples-main/multimodal/Titan/titan-multimodal-embeddings/amazon-bedrock-multimodal-oss-searchengine-e2e/utils.py:
  Function: get_titan_multimodal_embedding
  Function: plot_similarity_heatmap
  Function: get_image_from_item_id
  Function: get_image_from_item_id_s3
  Function: display_images
  Function: find_similar_items_from_query
  Function: find_similar_items_from_image

source/amazon-bedrock-samples-main/multimodal/Titan/titan-multimodal-embeddings/rag/download_images.py:
  Function: download_image_file
  Function: download_images

source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-lambda-layer/lambda_base.py:
  Function: create_layer
  Function: create_functions
  Function: test_functions

source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-lambda-layer/lambda_function.py:
  Function: lambda_handler

source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-rekognition-sample/cdk/lib/lambda/rek-bedrock.py:
  Function: get_bedrock_client
  Function: create_bedrock_llm
  Function: detect_text
  Function: detect_restaurant_closure
  Function: lambda_handler

source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-vtt-file-processing-and-model-evals/chapterize.py:
  Function: chapterize

source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-vtt-file-processing-and-model-evals/bedrock_utils.py:
  Function: get_bedrock_client

source/amazon-bedrock-samples-main/generative-ai-solutions/bedrock-vtt-file-processing-and-model-evals/main.py:
  Function: read_config
  Function: output_handler
  Function: run_notebooks
  Function: main

source/amazon-bedrock-samples-main/ops-tooling/bedrock_app_custom_dashboard.py:
  Function: knowledge_base_id_to_oss_collection
  Function: knowledge_base_name_to_id
  Function: generate_dashboard_json
  Function: create_dashboard

